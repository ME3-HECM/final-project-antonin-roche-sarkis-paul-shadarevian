

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Dec 12 22:41:25 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    58                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    59                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    60   000000                     
    61                           ; Version 2.35
    62                           ; Generated 05/05/2021 GMT
    63                           ; 
    64                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution. Publication is not required when
    78                           ;        this file is used in an embedded application.
    79                           ; 
    80                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    81                           ;        software without specific prior written permission.
    82                           ; 
    83                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    84                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    85                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    86                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    87                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    88                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    89                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    90                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    91                           ; 
    92                           ; 
    93                           ; Code-generator required, PIC18F67K40 Definitions
    94                           ; 
    95                           ; SFR Addresses
    96   000000                     _TRISFbits	set	3974
    97   000000                     _LATFbits	set	3966
    98   000000                     _LATDbits	set	3964
    99   000000                     _TRISGbits	set	3975
   100   000000                     _TRISEbits	set	3973
   101   000000                     _LATGbits	set	3967
   102   000000                     _SSP2CON2bits	set	3802
   103   000000                     _SSP2CLKPPS	set	3612
   104   000000                     _SSP2DATPPS	set	3613
   105   000000                     _ANSELDbits	set	3751
   106   000000                     _SSP2ADD	set	3798
   107   000000                     _SSP2CON1bits	set	3801
   108   000000                     _LATCbits	set	3963
   109   000000                     _LATEbits	set	3965
   110   000000                     _SSP2CON2	set	3802
   111   000000                     _TRISDbits	set	3972
   112   000000                     _CCPR4H	set	3873
   113   000000                     _CCPR3H	set	3877
   114   000000                     _SSP2STAT	set	3800
   115   000000                     _ANSELFbits	set	3764
   116   000000                     _SSP2BUF	set	3797
   117   000000                     _PIE0bits	set	3625
   118   000000                     _PIR0bits	set	3635
   119   000000                     _RC7PPS	set	3689
   120   000000                     _RD5PPS	set	3695
   121   000000                     _RE2PPS	set	3700
   122   000000                     _RD6PPS	set	3696
   123   000000                     _TRISAbits	set	3969
   124   000000                     _LATHbits	set	3968
   125   000000                     _TRISCbits	set	3971
   126   000000                     _PORTFbits	set	3982
   127   000000                     _TRISHbits	set	3976
   128   000000                     _T2PR	set	4028
   129   000000                     _T2CONbits	set	4029
   130   000000                     _CCPR2H	set	4006
   131   000000                     _CCPR1H	set	4010
   132   000000                     _RE4PPS	set	3702
   133   000000                     _RG6PPS	set	3720
   134   000000                     _TMR0L	set	4051
   135   000000                     _TMR0H	set	4052
   136   000000                     _T0CON0bits	set	4053
   137   000000                     _T0CON1bits	set	4054
   138   000000                     _INTCONbits	set	4082
   139   000000                     _T2CLKCONbits	set	4031
   140   000000                     _T2HLTbits	set	4030
   141   000000                     _CCP1CONbits	set	4011
   142   000000                     _CCPTMRS0bits	set	4013
   143   000000                     _CCP2CONbits	set	4007
   144   000000                     _ADREFbits	set	3928
   145   000000                     _LATAbits	set	3961
   146   000000                     _CCP3CONbits	set	3878
   147   000000                     _CCP4CONbits	set	3874
   148   000000                     _ADPCH	set	3935
   149   000000                     _ADRESH	set	3940
   150   000000                     _ADCON0bits	set	3936
   151                           
   152                           ; #config settings
   153                           
   154                           	psect	cinit
   155   0026F6                     __pcinit:
   156                           	callstack 0
   157   0026F6                     start_initialization:
   158                           	callstack 0
   159   0026F6                     __initialization:
   160                           	callstack 0
   161                           
   162                           ; Clear objects allocated to BANK2 (200 bytes)
   163   0026F6  EE02  F000         	lfsr	0,__pbssBANK2
   164   0026FA  0EC8               	movlw	200
   165   0026FC                     clear_0:
   166   0026FC  6AEE               	clrf	postinc0,c
   167   0026FE  06E8               	decf	wreg,f,c
   168   002700  E1FD               	bnz	clear_0
   169                           
   170                           ; Clear objects allocated to BANK1 (100 bytes)
   171   002702  EE01  F000         	lfsr	0,__pbssBANK1
   172   002706  0E64               	movlw	100
   173   002708                     clear_1:
   174   002708  6AEE               	clrf	postinc0,c
   175   00270A  06E8               	decf	wreg,f,c
   176   00270C  E1FD               	bnz	clear_1
   177                           
   178                           ; Clear objects allocated to BANK0 (1 bytes)
   179   00270E  0100               	movlb	0
   180   002710  6BA8               	clrf	__pbssBANK0& (0+255),b
   181                           
   182                           ; Clear objects allocated to COMRAM (9 bytes)
   183   002712  EE00  F04E         	lfsr	0,__pbssCOMRAM
   184   002716  0E09               	movlw	9
   185   002718                     clear_2:
   186   002718  6AEE               	clrf	postinc0,c
   187   00271A  06E8               	decf	wreg,f,c
   188   00271C  E1FD               	bnz	clear_2
   189   00271E                     end_of_initialization:
   190                           	callstack 0
   191   00271E                     __end_of__initialization:
   192                           	callstack 0
   193   00271E  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   194   002720  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   195   002722  0100               	movlb	0
   196   002724  EF69  F003         	goto	_main	;jump to C main() function
   197                           
   198                           	psect	bssCOMRAM
   199   00004E                     __pbssCOMRAM:
   200                           	callstack 0
   201   00004E                     _off_period:
   202                           	callstack 0
   203   00004E                     	ds	2
   204   000050                     _on_period:
   205                           	callstack 0
   206   000050                     	ds	2
   207   000052                     _timercount:
   208                           	callstack 0
   209   000052                     	ds	2
   210   000054                     _interruptenable:
   211                           	callstack 0
   212   000054                     	ds	1
   213   000055                     _pathposition:
   214                           	callstack 0
   215   000055                     	ds	1
   216   000056                     _timeposition:
   217                           	callstack 0
   218   000056                     	ds	1
   219                           
   220                           	psect	bssBANK0
   221   0000A8                     __pbssBANK0:
   222                           	callstack 0
   223   0000A8                     _step:
   224                           	callstack 0
   225   0000A8                     	ds	1
   226                           
   227                           	psect	bssBANK1
   228   000100                     __pbssBANK1:
   229                           	callstack 0
   230   000100                     _path:
   231                           	callstack 0
   232   000100                     	ds	100
   233                           
   234                           	psect	bssBANK2
   235   000200                     __pbssBANK2:
   236                           	callstack 0
   237   000200                     _timearray:
   238                           	callstack 0
   239   000200                     	ds	200
   240                           
   241                           	psect	cstackBANK0
   242   000060                     __pcstackBANK0:
   243                           	callstack 0
   244   000060                     carryoutstep@motorL:
   245                           	callstack 0
   246                           
   247                           ; 9 bytes @ 0x0
   248   000060                     	ds	9
   249   000069                     carryoutstep@motorR:
   250                           	callstack 0
   251                           
   252                           ; 9 bytes @ 0x9
   253   000069                     	ds	9
   254   000072                     carryoutstep@read:
   255                           	callstack 0
   256                           
   257                           ; 2 bytes @ 0x12
   258   000072                     	ds	2
   259   000074                     carryoutstep@mx:
   260                           	callstack 0
   261                           
   262                           ; 2 bytes @ 0x14
   263   000074                     	ds	2
   264   000076                     carryoutstep@amb:
   265                           	callstack 0
   266                           
   267                           ; 2 bytes @ 0x16
   268   000076                     	ds	2
   269   000078                     carryoutstep@step:
   270                           	callstack 0
   271                           
   272                           ; 1 bytes @ 0x18
   273   000078                     	ds	1
   274   000079                     main@a:
   275                           	callstack 0
   276                           
   277                           ; 1 bytes @ 0x19
   278   000079                     	ds	1
   279   00007A                     main@PWMcycle:
   280                           	callstack 0
   281                           
   282                           ; 2 bytes @ 0x1A
   283   00007A                     	ds	2
   284   00007C                     _main$2841:
   285                           	callstack 0
   286                           
   287                           ; 2 bytes @ 0x1C
   288   00007C                     	ds	2
   289   00007E                     main@motorL:
   290                           	callstack 0
   291                           
   292                           ; 9 bytes @ 0x1E
   293   00007E                     	ds	9
   294   000087                     main@motorR:
   295                           	callstack 0
   296                           
   297                           ; 9 bytes @ 0x27
   298   000087                     	ds	9
   299   000090                     main@max:
   300                           	callstack 0
   301                           
   302                           ; 8 bytes @ 0x30
   303   000090                     	ds	8
   304   000098                     main@ambient:
   305                           	callstack 0
   306                           
   307                           ; 8 bytes @ 0x38
   308   000098                     	ds	8
   309   0000A0                     main@reading:
   310                           	callstack 0
   311                           
   312                           ; 8 bytes @ 0x40
   313   0000A0                     	ds	8
   314                           
   315                           	psect	cstackCOMRAM
   316   000001                     __pcstackCOMRAM:
   317                           	callstack 0
   318   000001                     ??_I2C_2_Master_Idle:
   319   000001                     ?_ADC_getval:
   320                           	callstack 0
   321   000001                     ?___wmul:
   322                           	callstack 0
   323   000001                     ?___flmul:
   324                           	callstack 0
   325   000001                     ?___xxtofl:
   326                           	callstack 0
   327   000001                     savepath@instruction:
   328                           	callstack 0
   329   000001                     initDCmotorsPWM@PWMperiod:
   330                           	callstack 0
   331   000001                     savetime@timercount:
   332                           	callstack 0
   333   000001                     ___wmul@multiplier:
   334                           	callstack 0
   335   000001                     ___flmul@b:
   336                           	callstack 0
   337   000001                     ___xxtofl@val:
   338                           	callstack 0
   339                           
   340                           ; 4 bytes @ 0x0
   341   000001                     	ds	1
   342   000002                     ??_I2C_2_Master_Read:
   343   000002                     I2C_2_Master_Write@data_byte:
   344                           	callstack 0
   345                           
   346                           ; 1 bytes @ 0x1
   347   000002                     	ds	1
   348   000003                     I2C_2_Master_Read@ack:
   349                           	callstack 0
   350   000003                     color_writetoaddr@value:
   351                           	callstack 0
   352   000003                     ADC_getval@tmpval:
   353                           	callstack 0
   354   000003                     ___wmul@multiplicand:
   355                           	callstack 0
   356                           
   357                           ; 2 bytes @ 0x2
   358   000003                     	ds	1
   359   000004                     I2C_2_Master_Read@tmp:
   360                           	callstack 0
   361   000004                     color_writetoaddr@address:
   362                           	callstack 0
   363                           
   364                           ; 1 bytes @ 0x3
   365   000004                     	ds	1
   366   000005                     ??_color_click_init:
   367   000005                     ??___xxtofl:
   368   000005                     ?_color_read_Red:
   369                           	callstack 0
   370   000005                     ?_color_read_Blue:
   371                           	callstack 0
   372   000005                     ?_color_read_Green:
   373                           	callstack 0
   374   000005                     ?_color_read_Clear:
   375                           	callstack 0
   376   000005                     ___wmul@product:
   377                           	callstack 0
   378   000005                     ___flmul@a:
   379                           	callstack 0
   380                           
   381                           ; 4 bytes @ 0x4
   382   000005                     	ds	2
   383   000007                     ??_color_read_Red:
   384   000007                     ??_color_read_Blue:
   385   000007                     ??_color_read_Green:
   386   000007                     ??_color_read_Clear:
   387                           
   388                           ; 1 bytes @ 0x6
   389   000007                     	ds	2
   390   000009                     ??___flmul:
   391   000009                     ___xxtofl@sign:
   392                           	callstack 0
   393                           
   394                           ; 1 bytes @ 0x8
   395   000009                     	ds	1
   396   00000A                     ___xxtofl@exp:
   397                           	callstack 0
   398   00000A                     color_read_Red@tmp:
   399                           	callstack 0
   400   00000A                     color_read_Green@tmp:
   401                           	callstack 0
   402   00000A                     color_read_Blue@tmp:
   403                           	callstack 0
   404   00000A                     color_read_Clear@tmp:
   405                           	callstack 0
   406                           
   407                           ; 2 bytes @ 0x9
   408   00000A                     	ds	1
   409   00000B                     ___xxtofl@arg:
   410                           	callstack 0
   411                           
   412                           ; 4 bytes @ 0xA
   413   00000B                     	ds	1
   414   00000C                     ?___lwdiv:
   415                           	callstack 0
   416   00000C                     ___lwdiv@dividend:
   417                           	callstack 0
   418                           
   419                           ; 2 bytes @ 0xB
   420   00000C                     	ds	1
   421   00000D                     ___flmul@sign:
   422                           	callstack 0
   423                           
   424                           ; 1 bytes @ 0xC
   425   00000D                     	ds	1
   426   00000E                     ___lwdiv@divisor:
   427                           	callstack 0
   428   00000E                     ___flmul@grs:
   429                           	callstack 0
   430                           
   431                           ; 4 bytes @ 0xD
   432   00000E                     	ds	1
   433   00000F                     ?___fldiv:
   434                           	callstack 0
   435   00000F                     ___fldiv@b:
   436                           	callstack 0
   437                           
   438                           ; 4 bytes @ 0xE
   439   00000F                     	ds	1
   440   000010                     ___lwdiv@quotient:
   441                           	callstack 0
   442                           
   443                           ; 2 bytes @ 0xF
   444   000010                     	ds	2
   445   000012                     ___lwdiv@counter:
   446                           	callstack 0
   447   000012                     ___flmul@aexp:
   448                           	callstack 0
   449                           
   450                           ; 1 bytes @ 0x11
   451   000012                     	ds	1
   452   000013                     ___flmul@bexp:
   453                           	callstack 0
   454   000013                     setMotorPWM@m:
   455                           	callstack 0
   456   000013                     ___fldiv@a:
   457                           	callstack 0
   458                           
   459                           ; 4 bytes @ 0x12
   460   000013                     	ds	1
   461   000014                     ___flmul@prod:
   462                           	callstack 0
   463                           
   464                           ; 4 bytes @ 0x13
   465   000014                     	ds	1
   466   000015                     ??_setMotorPWM:
   467                           
   468                           ; 1 bytes @ 0x14
   469   000015                     	ds	2
   470   000017                     ??___fldiv:
   471   000017                     setMotorPWM@posDuty:
   472                           	callstack 0
   473                           
   474                           ; 1 bytes @ 0x16
   475   000017                     	ds	1
   476   000018                     setMotorPWM@negDuty:
   477                           	callstack 0
   478   000018                     ___flmul@temp:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0x17
   482   000018                     	ds	1
   483   000019                     stop@mL:
   484                           	callstack 0
   485   000019                     fullSpeedAhead@mL:
   486                           	callstack 0
   487                           
   488                           ; 2 bytes @ 0x18
   489   000019                     	ds	1
   490   00001A                     ?___fltol:
   491                           	callstack 0
   492   00001A                     ___fltol@f1:
   493                           	callstack 0
   494                           
   495                           ; 4 bytes @ 0x19
   496   00001A                     	ds	1
   497   00001B                     stop@mR:
   498                           	callstack 0
   499   00001B                     fullSpeedAhead@mR:
   500                           	callstack 0
   501   00001B                     ___fldiv@rem:
   502                           	callstack 0
   503                           
   504                           ; 4 bytes @ 0x1A
   505   00001B                     	ds	2
   506   00001D                     ??_stop:
   507   00001D                     fullSpeedAhead@dir:
   508                           	callstack 0
   509                           
   510                           ; 1 bytes @ 0x1C
   511   00001D                     	ds	1
   512   00001E                     ??_fullSpeedAhead:
   513   00001E                     ??___fltol:
   514   00001E                     turnLeft90@mL:
   515                           	callstack 0
   516   00001E                     turnRight90@mL:
   517                           	callstack 0
   518   00001E                     turnLeft135@mL:
   519                           	callstack 0
   520   00001E                     turnRight135@mL:
   521                           	callstack 0
   522   00001E                     turn180@mL:
   523                           	callstack 0
   524   00001E                     square@mL:
   525                           	callstack 0
   526   00001E                     smallmovement@mL:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0x1D
   530   00001E                     	ds	1
   531   00001F                     ___fldiv@sign:
   532                           	callstack 0
   533                           
   534                           ; 1 bytes @ 0x1E
   535   00001F                     	ds	1
   536   000020                     turnLeft90@mR:
   537                           	callstack 0
   538   000020                     turnRight90@mR:
   539                           	callstack 0
   540   000020                     turnLeft135@mR:
   541                           	callstack 0
   542   000020                     turnRight135@mR:
   543                           	callstack 0
   544   000020                     turn180@mR:
   545                           	callstack 0
   546   000020                     square@mR:
   547                           	callstack 0
   548   000020                     smallmovement@mR:
   549                           	callstack 0
   550   000020                     ___fldiv@new_exp:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x1F
   554   000020                     	ds	2
   555   000022                     ??_turnLeft90:
   556   000022                     ??_turnRight90:
   557   000022                     ??_turnLeft135:
   558   000022                     ??_turnRight135:
   559   000022                     ??_turn180:
   560   000022                     square@dir:
   561                           	callstack 0
   562   000022                     smallmovement@dir:
   563                           	callstack 0
   564   000022                     ___fltol@sign1:
   565                           	callstack 0
   566   000022                     ___fldiv@grs:
   567                           	callstack 0
   568                           
   569                           ; 4 bytes @ 0x21
   570   000022                     	ds	1
   571   000023                     ??_square:
   572   000023                     ??_smallmovement:
   573   000023                     ___fltol@exp1:
   574                           	callstack 0
   575                           
   576                           ; 1 bytes @ 0x22
   577   000023                     	ds	1
   578   000024                     returnstep@motorL:
   579                           	callstack 0
   580                           
   581                           ; 9 bytes @ 0x23
   582   000024                     	ds	2
   583   000026                     ___fldiv@bexp:
   584                           	callstack 0
   585                           
   586                           ; 1 bytes @ 0x25
   587   000026                     	ds	1
   588   000027                     ___fldiv@aexp:
   589                           	callstack 0
   590                           
   591                           ; 1 bytes @ 0x26
   592   000027                     	ds	1
   593   000028                     decide_color@mx:
   594                           	callstack 0
   595                           
   596                           ; 2 bytes @ 0x27
   597   000028                     	ds	2
   598   00002A                     ??_decide_color:
   599                           
   600                           ; 1 bytes @ 0x29
   601   00002A                     	ds	3
   602   00002D                     returnstep@motorR:
   603                           	callstack 0
   604                           
   605                           ; 9 bytes @ 0x2C
   606   00002D                     	ds	1
   607   00002E                     decide_color@rrf:
   608                           	callstack 0
   609                           
   610                           ; 4 bytes @ 0x2D
   611   00002E                     	ds	4
   612   000032                     decide_color@brf:
   613                           	callstack 0
   614                           
   615                           ; 4 bytes @ 0x31
   616   000032                     	ds	4
   617   000036                     returnstep@instruction:
   618                           	callstack 0
   619   000036                     decide_color@grf:
   620                           	callstack 0
   621                           
   622                           ; 4 bytes @ 0x35
   623   000036                     	ds	1
   624   000037                     returnhome@motorL:
   625                           	callstack 0
   626                           
   627                           ; 9 bytes @ 0x36
   628   000037                     	ds	3
   629   00003A                     decide_color@gr:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x39
   633   00003A                     	ds	2
   634   00003C                     decide_color@rr:
   635                           	callstack 0
   636                           
   637                           ; 2 bytes @ 0x3B
   638   00003C                     	ds	2
   639   00003E                     decide_color@br:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x3D
   643   00003E                     	ds	2
   644   000040                     returnhome@motorR:
   645                           	callstack 0
   646                           
   647                           ; 9 bytes @ 0x3F
   648   000040                     	ds	9
   649   000049                     ??_returnhome:
   650                           
   651                           ; 1 bytes @ 0x48
   652   000049                     	ds	3
   653   00004C                     ??_main:
   654                           
   655                           ; 1 bytes @ 0x4B
   656   00004C                     	ds	2
   657                           
   658 ;;
   659 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   660 ;;
   661 ;; *************** function _main *****************
   662 ;; Defined at:
   663 ;;		line 22 in file "mainfinal.c"
   664 ;; Parameters:    Size  Location     Type
   665 ;;		None
   666 ;; Auto vars:     Size  Location     Type
   667 ;;  a               1   25[BANK0 ] unsigned char 
   668 ;;  motorR          9   39[BANK0 ] struct DC_motor
   669 ;;  motorL          9   30[BANK0 ] struct DC_motor
   670 ;;  reading         8   64[BANK0 ] struct colors
   671 ;;  ambient         8   56[BANK0 ] struct colors
   672 ;;  max             8   48[BANK0 ] struct colors
   673 ;;  PWMcycle        2   26[BANK0 ] unsigned int 
   674 ;; Return value:  Size  Location     Type
   675 ;;                  1    wreg      void 
   676 ;; Registers used:
   677 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   678 ;; Tracked objects:
   679 ;;		On entry : 0/0
   680 ;;		On exit  : 0/0
   681 ;;		Unchanged: 0/0
   682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   684 ;;      Locals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   685 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   686 ;;      Totals:         2      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   687 ;;Total ram usage:       49 bytes
   688 ;; Hardware stack levels required when called: 9
   689 ;; This function calls:
   690 ;;		_ADC_getval
   691 ;;		_ADC_init
   692 ;;		_I2C_2_Master_Init
   693 ;;		_Interrupts_init
   694 ;;		_Timer0_init
   695 ;;		___lwdiv
   696 ;;		_carryoutstep
   697 ;;		_color_click_init
   698 ;;		_color_read_Blue
   699 ;;		_color_read_Clear
   700 ;;		_color_read_Green
   701 ;;		_color_read_Red
   702 ;;		_decide_color
   703 ;;		_fullSpeedAhead
   704 ;;		_initDCmotorsPWM
   705 ;;		_returnhome
   706 ;;		_savepath
   707 ;;		_savetime
   708 ;;		_smallmovement
   709 ;;		_square
   710 ;; This function is called by:
   711 ;;		Startup code after reset
   712 ;; This function uses a non-reentrant model
   713 ;;
   714                           
   715                           	psect	text0
   716   0006D2                     __ptext0:
   717                           	callstack 0
   718   0006D2                     _main:
   719                           	callstack 22
   720   0006D2                     
   721                           ;mainfinal.c: 26:     Timer0_init();
   722   0006D2  EC08  F014         	call	_Timer0_init	;wreg free
   723   0006D6                     
   724                           ;mainfinal.c: 27:     Interrupts_init();
   725   0006D6  EC33  F014         	call	_Interrupts_init	;wreg free
   726   0006DA                     
   727                           ;mainfinal.c: 28:     initDCmotorsPWM(199);
   728   0006DA  0E00               	movlw	0
   729   0006DC  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   730   0006DE  0EC7               	movlw	199
   731   0006E0  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   732   0006E2  ECDF  F011         	call	_initDCmotorsPWM	;wreg free
   733   0006E6                     
   734                           ;mainfinal.c: 29:     unsigned int PWMcycle = 199;
   735   0006E6  0E00               	movlw	0
   736   0006E8  0100               	movlb	0	; () banked
   737   0006EA  6F7B               	movwf	(main@PWMcycle+1)& (0+255),b
   738   0006EC  0EC7               	movlw	199
   739   0006EE  6F7A               	movwf	main@PWMcycle& (0+255),b
   740   0006F0                     
   741                           ; BSR set to: 0
   742                           ;mainfinal.c: 31:     color_click_init();
   743   0006F0  EC5B  F013         	call	_color_click_init	;wreg free
   744   0006F4                     
   745                           ;mainfinal.c: 32:     I2C_2_Master_Init();
   746   0006F4  ECAC  F013         	call	_I2C_2_Master_Init	;wreg free
   747   0006F8                     
   748                           ;mainfinal.c: 36:     struct colors reading, max, ambient;;mainfinal.c: 38:     reading.
      +                          red = 0;
   749   0006F8  0E00               	movlw	0
   750   0006FA  0100               	movlb	0	; () banked
   751   0006FC  6FA1               	movwf	(main@reading+1)& (0+255),b
   752   0006FE  0E00               	movlw	0
   753   000700  6FA0               	movwf	main@reading& (0+255),b
   754   000702                     
   755                           ; BSR set to: 0
   756                           ;mainfinal.c: 39:     reading.blue = 0;
   757   000702  0E00               	movlw	0
   758   000704  6FA3               	movwf	(main@reading+3)& (0+255),b
   759   000706  0E00               	movlw	0
   760   000708  6FA2               	movwf	(main@reading+2)& (0+255),b
   761   00070A                     
   762                           ; BSR set to: 0
   763                           ;mainfinal.c: 40:     reading.green = 0;
   764   00070A  0E00               	movlw	0
   765   00070C  6FA5               	movwf	(main@reading+5)& (0+255),b
   766   00070E  0E00               	movlw	0
   767   000710  6FA4               	movwf	(main@reading+4)& (0+255),b
   768   000712                     
   769                           ; BSR set to: 0
   770                           ;mainfinal.c: 41:     reading.clear = 0;
   771   000712  0E00               	movlw	0
   772   000714  6FA7               	movwf	(main@reading+7)& (0+255),b
   773   000716  0E00               	movlw	0
   774   000718  6FA6               	movwf	(main@reading+6)& (0+255),b
   775   00071A                     
   776                           ; BSR set to: 0
   777                           ;mainfinal.c: 42:     max.red = 0;
   778   00071A  0E00               	movlw	0
   779   00071C  6F91               	movwf	(main@max+1)& (0+255),b
   780   00071E  0E00               	movlw	0
   781   000720  6F90               	movwf	main@max& (0+255),b
   782   000722                     
   783                           ; BSR set to: 0
   784                           ;mainfinal.c: 43:     max.blue = 0;
   785   000722  0E00               	movlw	0
   786   000724  6F93               	movwf	(main@max+3)& (0+255),b
   787   000726  0E00               	movlw	0
   788   000728  6F92               	movwf	(main@max+2)& (0+255),b
   789   00072A                     
   790                           ; BSR set to: 0
   791                           ;mainfinal.c: 44:     max.green = 0;
   792   00072A  0E00               	movlw	0
   793   00072C  6F95               	movwf	(main@max+5)& (0+255),b
   794   00072E  0E00               	movlw	0
   795   000730  6F94               	movwf	(main@max+4)& (0+255),b
   796   000732                     
   797                           ; BSR set to: 0
   798                           ;mainfinal.c: 45:     max.clear = 0;
   799   000732  0E00               	movlw	0
   800   000734  6F97               	movwf	(main@max+7)& (0+255),b
   801   000736  0E00               	movlw	0
   802   000738  6F96               	movwf	(main@max+6)& (0+255),b
   803   00073A                     
   804                           ; BSR set to: 0
   805                           ;mainfinal.c: 46:     ambient.red = 0;
   806   00073A  0E00               	movlw	0
   807   00073C  6F99               	movwf	(main@ambient+1)& (0+255),b
   808   00073E  0E00               	movlw	0
   809   000740  6F98               	movwf	main@ambient& (0+255),b
   810   000742                     
   811                           ; BSR set to: 0
   812                           ;mainfinal.c: 47:     ambient.blue = 0;
   813   000742  0E00               	movlw	0
   814   000744  6F9B               	movwf	(main@ambient+3)& (0+255),b
   815   000746  0E00               	movlw	0
   816   000748  6F9A               	movwf	(main@ambient+2)& (0+255),b
   817   00074A                     
   818                           ; BSR set to: 0
   819                           ;mainfinal.c: 48:     ambient.green = 0;
   820   00074A  0E00               	movlw	0
   821   00074C  6F9D               	movwf	(main@ambient+5)& (0+255),b
   822   00074E  0E00               	movlw	0
   823   000750  6F9C               	movwf	(main@ambient+4)& (0+255),b
   824   000752                     
   825                           ; BSR set to: 0
   826                           ;mainfinal.c: 49:     ambient.clear = 0;
   827   000752  0E00               	movlw	0
   828   000754  6F9F               	movwf	(main@ambient+7)& (0+255),b
   829   000756  0E00               	movlw	0
   830   000758  6F9E               	movwf	(main@ambient+6)& (0+255),b
   831   00075A                     
   832                           ; BSR set to: 0
   833                           ;mainfinal.c: 53:     TRISDbits.TRISD3 = 0;
   834   00075A  9684               	bcf	132,3,c	;volatile
   835   00075C                     
   836                           ; BSR set to: 0
   837                           ;mainfinal.c: 54:     LATDbits.LATD3 = 0;
   838   00075C  967C               	bcf	124,3,c	;volatile
   839   00075E                     
   840                           ; BSR set to: 0
   841                           ;mainfinal.c: 55:     TRISFbits.TRISF2 = 1;
   842   00075E  8486               	bsf	134,2,c	;volatile
   843   000760                     
   844                           ; BSR set to: 0
   845                           ;mainfinal.c: 56:     ANSELFbits.ANSELF2=0;
   846   000760  010E               	movlb	14	; () banked
   847   000762  95B4               	bcf	180,2,b	;volatile
   848   000764                     
   849                           ; BSR set to: 14
   850                           ;mainfinal.c: 57:     LATDbits.LATD7 = 0;
   851   000764  9E7C               	bcf	124,7,c	;volatile
   852   000766                     
   853                           ; BSR set to: 14
   854                           ;mainfinal.c: 58:     TRISDbits.TRISD7 = 0;
   855   000766  9E84               	bcf	132,7,c	;volatile
   856   000768                     
   857                           ; BSR set to: 14
   858                           ;mainfinal.c: 66:     ADC_init();
   859   000768  EC15  F014         	call	_ADC_init	;wreg free
   860                           
   861                           ;mainfinal.c: 67:     while (ADC_getval()<150){LATDbits.LATD7 = 1;}
   862   00076C  EFB9  F003         	goto	l3439
   863   000770                     l333:
   864   000770  8E7C               	bsf	124,7,c	;volatile
   865   000772                     l3439:
   866   000772  EC94  F013         	call	_ADC_getval	;wreg free
   867   000776  5002               	movf	(?_ADC_getval+1)^0,w,c
   868   000778  E109               	bnz	u3180
   869   00077A  0E96               	movlw	150
   870   00077C  5C01               	subwf	?_ADC_getval^0,w,c
   871   00077E  A0D8               	btfss	status,0,c
   872   000780  EFC4  F003         	goto	u3181
   873   000784  EFC6  F003         	goto	u3180
   874   000788                     u3181:
   875   000788  EFB8  F003         	goto	l333
   876   00078C                     u3180:
   877   00078C                     
   878                           ;mainfinal.c: 71:     LATHbits.LATH1=0;
   879   00078C  9280               	bcf	128,1,c	;volatile
   880                           
   881                           ;mainfinal.c: 72:     TRISHbits.TRISH1 = 0;
   882   00078E  9288               	bcf	136,1,c	;volatile
   883                           
   884                           ;mainfinal.c: 74:     LATDbits.LATD3=0;
   885   000790  967C               	bcf	124,3,c	;volatile
   886                           
   887                           ;mainfinal.c: 75:     TRISDbits.TRISD3 = 0;
   888   000792  9684               	bcf	132,3,c	;volatile
   889                           
   890                           ;mainfinal.c: 77:     LATDbits.LATD4=0;
   891   000794  987C               	bcf	124,4,c	;volatile
   892                           
   893                           ;mainfinal.c: 78:     TRISDbits.TRISD4 = 0;
   894   000796  9884               	bcf	132,4,c	;volatile
   895   000798                     
   896                           ;mainfinal.c: 81:     struct DC_motor motorL, motorR;;mainfinal.c: 83:     motorL.power 
      +                          = 0;
   897   000798  0E00               	movlw	0
   898   00079A  0100               	movlb	0	; () banked
   899   00079C  6F7E               	movwf	main@motorL& (0+255),b
   900                           
   901                           ;mainfinal.c: 84:     motorL.direction = 1;
   902   00079E  0E01               	movlw	1
   903   0007A0  6F7F               	movwf	(main@motorL+1)& (0+255),b
   904   0007A2                     
   905                           ; BSR set to: 0
   906                           ;mainfinal.c: 85:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   907   0007A2  0EAA               	movlw	170
   908   0007A4  6F83               	movwf	(main@motorL+5)& (0+255),b
   909   0007A6  0E0F               	movlw	15
   910   0007A8  6F84               	movwf	(main@motorL+6)& (0+255),b
   911   0007AA                     
   912                           ; BSR set to: 0
   913                           ;mainfinal.c: 86:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   914   0007AA  0EA6               	movlw	166
   915   0007AC  6F85               	movwf	(main@motorL+7)& (0+255),b
   916   0007AE  0E0F               	movlw	15
   917   0007B0  6F86               	movwf	(main@motorL+8)& (0+255),b
   918   0007B2                     
   919                           ; BSR set to: 0
   920                           ;mainfinal.c: 87:     motorL.PWMperiod=PWMcycle;
   921   0007B2  C07A  F081         	movff	main@PWMcycle,main@motorL+3
   922   0007B6  C07B  F082         	movff	main@PWMcycle+1,main@motorL+4
   923                           
   924                           ;mainfinal.c: 89:     motorR.power = 0;
   925   0007BA  0E00               	movlw	0
   926   0007BC  6F87               	movwf	main@motorR& (0+255),b
   927                           
   928                           ;mainfinal.c: 90:     motorR.direction = 1;
   929   0007BE  0E01               	movlw	1
   930   0007C0  6F88               	movwf	(main@motorR+1)& (0+255),b
   931   0007C2                     
   932                           ; BSR set to: 0
   933                           ;mainfinal.c: 91:     motorR.PWMperiod=PWMcycle;
   934   0007C2  C07A  F08A         	movff	main@PWMcycle,main@motorR+3
   935   0007C6  C07B  F08B         	movff	main@PWMcycle+1,main@motorR+4
   936   0007CA                     
   937                           ; BSR set to: 0
   938                           ;mainfinal.c: 92:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
   939   0007CA  0E25               	movlw	37
   940   0007CC  6F8C               	movwf	(main@motorR+5)& (0+255),b
   941   0007CE  0E0F               	movlw	15
   942   0007D0  6F8D               	movwf	(main@motorR+6)& (0+255),b
   943   0007D2                     
   944                           ; BSR set to: 0
   945                           ;mainfinal.c: 93:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
   946   0007D2  0E21               	movlw	33
   947   0007D4  6F8E               	movwf	(main@motorR+7)& (0+255),b
   948   0007D6  0E0F               	movlw	15
   949   0007D8  6F8F               	movwf	(main@motorR+8)& (0+255),b
   950   0007DA                     
   951                           ; BSR set to: 0
   952                           ;mainfinal.c: 97:     LATFbits.LATF7 = 1;
   953   0007DA  8E7E               	bsf	126,7,c	;volatile
   954   0007DC                     
   955                           ; BSR set to: 0
   956                           ;mainfinal.c: 98:     LATGbits.LATG1 = 1;
   957   0007DC  827F               	bsf	127,1,c	;volatile
   958   0007DE                     
   959                           ; BSR set to: 0
   960                           ;mainfinal.c: 99:     LATAbits.LATA4 = 1;
   961   0007DE  8879               	bsf	121,4,c	;volatile
   962   0007E0                     
   963                           ; BSR set to: 0
   964                           ;mainfinal.c: 104:     TRISFbits.TRISF2 = 1;
   965   0007E0  8486               	bsf	134,2,c	;volatile
   966   0007E2                     
   967                           ; BSR set to: 0
   968                           ;mainfinal.c: 105:     ANSELFbits.ANSELF2=0;
   969   0007E2  010E               	movlb	14	; () banked
   970   0007E4  95B4               	bcf	180,2,b	;volatile
   971   0007E6                     
   972                           ; BSR set to: 14
   973                           ;mainfinal.c: 106:     LATDbits.LATD7 = 0;
   974   0007E6  9E7C               	bcf	124,7,c	;volatile
   975   0007E8                     
   976                           ; BSR set to: 14
   977                           ;mainfinal.c: 107:     TRISDbits.TRISD7 = 0;
   978   0007E8  9E84               	bcf	132,7,c	;volatile
   979   0007EA                     
   980                           ; BSR set to: 14
   981                           ;mainfinal.c: 109:     TRISFbits.TRISF3 = 1;
   982   0007EA  8686               	bsf	134,3,c	;volatile
   983   0007EC                     
   984                           ; BSR set to: 14
   985                           ;mainfinal.c: 110:     ANSELFbits.ANSELF3 = 0;
   986   0007EC  97B4               	bcf	180,3,b	;volatile
   987   0007EE                     
   988                           ; BSR set to: 14
   989                           ;mainfinal.c: 111:     LATHbits.LATH3 = 0;
   990   0007EE  9680               	bcf	128,3,c	;volatile
   991   0007F0                     
   992                           ; BSR set to: 14
   993                           ;mainfinal.c: 112:     TRISHbits.TRISH3 = 0;
   994   0007F0  9688               	bcf	136,3,c	;volatile
   995   0007F2                     l335:
   996   0007F2  B48E               	btfsc	142,2,c	;volatile
   997   0007F4  EFFE  F003         	goto	u3191
   998   0007F8  EF00  F004         	goto	u3190
   999   0007FC                     u3191:
  1000   0007FC  EFF9  F003         	goto	l335
  1001   000800                     u3190:
  1002   000800                     
  1003                           ;mainfinal.c: 116:     LATDbits.LATD7 = 1;
  1004   000800  8E7C               	bsf	124,7,c	;volatile
  1005   000802                     
  1006                           ;mainfinal.c: 117:     max.red = color_read_Red();
  1007   000802  EC9A  F012         	call	_color_read_Red	;wreg free
  1008   000806  C005  F090         	movff	?_color_read_Red,main@max
  1009   00080A  C006  F091         	movff	?_color_read_Red+1,main@max+1
  1010                           
  1011                           ;mainfinal.c: 118:     max.blue = color_read_Blue();
  1012   00080E  EC12  F013         	call	_color_read_Blue	;wreg free
  1013   000812  C005  F092         	movff	?_color_read_Blue,main@max+2
  1014   000816  C006  F093         	movff	?_color_read_Blue+1,main@max+3
  1015                           
  1016                           ;mainfinal.c: 119:     max.green = color_read_Green();
  1017   00081A  ECC2  F012         	call	_color_read_Green	;wreg free
  1018   00081E  C005  F094         	movff	?_color_read_Green,main@max+4
  1019   000822  C006  F095         	movff	?_color_read_Green+1,main@max+5
  1020                           
  1021                           ;mainfinal.c: 120:     max.clear = color_read_Clear();
  1022   000826  ECEA  F012         	call	_color_read_Clear	;wreg free
  1023   00082A  C005  F096         	movff	?_color_read_Clear,main@max+6
  1024   00082E  C006  F097         	movff	?_color_read_Clear+1,main@max+7
  1025   000832                     
  1026                           ;mainfinal.c: 121:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1027   000832  0E29               	movlw	41
  1028   000834  6E4D               	movwf	(??_main+1)^0,c
  1029   000836  0E96               	movlw	150
  1030   000838  6E4C               	movwf	??_main^0,c
  1031   00083A  0E7F               	movlw	127
  1032   00083C                     u3337:
  1033   00083C  2EE8               	decfsz	wreg,f,c
  1034   00083E  D7FE               	bra	u3337
  1035   000840  2E4C               	decfsz	??_main^0,f,c
  1036   000842  D7FC               	bra	u3337
  1037   000844  2E4D               	decfsz	(??_main+1)^0,f,c
  1038   000846  D7FA               	bra	u3337
  1039   000848  F000               	nop	
  1040   00084A                     
  1041                           ;mainfinal.c: 122:     LATDbits.LATD7 = 0;
  1042   00084A  9E7C               	bcf	124,7,c	;volatile
  1043   00084C                     l338:
  1044   00084C  B68E               	btfsc	142,3,c	;volatile
  1045   00084E  EF2B  F004         	goto	u3201
  1046   000852  EF2D  F004         	goto	u3200
  1047   000856                     u3201:
  1048   000856  EF26  F004         	goto	l338
  1049   00085A                     u3200:
  1050   00085A                     
  1051                           ;mainfinal.c: 126:     LATHbits.LATH3 = 1;
  1052   00085A  8680               	bsf	128,3,c	;volatile
  1053   00085C                     
  1054                           ;mainfinal.c: 127:     ambient.red = color_read_Red();
  1055   00085C  EC9A  F012         	call	_color_read_Red	;wreg free
  1056   000860  C005  F098         	movff	?_color_read_Red,main@ambient
  1057   000864  C006  F099         	movff	?_color_read_Red+1,main@ambient+1
  1058                           
  1059                           ;mainfinal.c: 128:     ambient.blue = color_read_Blue();
  1060   000868  EC12  F013         	call	_color_read_Blue	;wreg free
  1061   00086C  C005  F09A         	movff	?_color_read_Blue,main@ambient+2
  1062   000870  C006  F09B         	movff	?_color_read_Blue+1,main@ambient+3
  1063                           
  1064                           ;mainfinal.c: 129:     ambient.green = color_read_Green();
  1065   000874  ECC2  F012         	call	_color_read_Green	;wreg free
  1066   000878  C005  F09C         	movff	?_color_read_Green,main@ambient+4
  1067   00087C  C006  F09D         	movff	?_color_read_Green+1,main@ambient+5
  1068                           
  1069                           ;mainfinal.c: 130:     ambient.clear = color_read_Clear();
  1070   000880  ECEA  F012         	call	_color_read_Clear	;wreg free
  1071   000884  C005  F09E         	movff	?_color_read_Clear,main@ambient+6
  1072   000888  C006  F09F         	movff	?_color_read_Clear+1,main@ambient+7
  1073   00088C                     
  1074                           ;mainfinal.c: 131:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1075   00088C  0E29               	movlw	41
  1076   00088E  6E4D               	movwf	(??_main+1)^0,c
  1077   000890  0E96               	movlw	150
  1078   000892  6E4C               	movwf	??_main^0,c
  1079   000894  0E7F               	movlw	127
  1080   000896                     u3347:
  1081   000896  2EE8               	decfsz	wreg,f,c
  1082   000898  D7FE               	bra	u3347
  1083   00089A  2E4C               	decfsz	??_main^0,f,c
  1084   00089C  D7FC               	bra	u3347
  1085   00089E  2E4D               	decfsz	(??_main+1)^0,f,c
  1086   0008A0  D7FA               	bra	u3347
  1087   0008A2  F000               	nop	
  1088   0008A4                     
  1089                           ;mainfinal.c: 132:     LATHbits.LATH3 = 0;
  1090   0008A4  9680               	bcf	128,3,c	;volatile
  1091   0008A6                     l3489:
  1092                           
  1093                           ;mainfinal.c: 138:         fullSpeedAhead(&motorL,&motorR, 1);
  1094   0008A6  0E7E               	movlw	low main@motorL
  1095   0008A8  6E19               	movwf	fullSpeedAhead@mL^0,c
  1096   0008AA  0E00               	movlw	high main@motorL
  1097   0008AC  6E1A               	movwf	(fullSpeedAhead@mL+1)^0,c
  1098   0008AE  0E87               	movlw	low main@motorR
  1099   0008B0  6E1B               	movwf	fullSpeedAhead@mR^0,c
  1100   0008B2  0E00               	movlw	high main@motorR
  1101   0008B4  6E1C               	movwf	(fullSpeedAhead@mR+1)^0,c
  1102   0008B6  0E01               	movlw	1
  1103   0008B8  6E1D               	movwf	fullSpeedAhead@dir^0,c
  1104   0008BA  EC57  F010         	call	_fullSpeedAhead	;wreg free
  1105   0008BE                     
  1106                           ;mainfinal.c: 140:         reading.clear = (color_read_Clear()-ambient.clear)/(max.clear
      +                          /1000+1);
  1107   0008BE  0E03               	movlw	3
  1108   0008C0  6E0F               	movwf	(___lwdiv@divisor+1)^0,c
  1109   0008C2  0EE8               	movlw	232
  1110   0008C4  6E0E               	movwf	___lwdiv@divisor^0,c
  1111   0008C6  C096  F00C         	movff	main@max+6,___lwdiv@dividend
  1112   0008CA  C097  F00D         	movff	main@max+7,___lwdiv@dividend+1
  1113   0008CE  EC27  F012         	call	___lwdiv	;wreg free
  1114   0008D2  0E01               	movlw	1
  1115   0008D4  240C               	addwf	?___lwdiv^0,w,c
  1116   0008D6  0100               	movlb	0	; () banked
  1117   0008D8  6F7C               	movwf	_main$2841& (0+255),b
  1118   0008DA  0E00               	movlw	0
  1119   0008DC  200D               	addwfc	(?___lwdiv+1)^0,w,c
  1120   0008DE  6F7D               	movwf	(_main$2841+1)& (0+255),b
  1121   0008E0                     
  1122                           ; BSR set to: 0
  1123                           ;mainfinal.c: 140:         reading.clear = (color_read_Clear()-ambient.clear)/(max.clear
      +                          /1000+1);
  1124   0008E0  ECEA  F012         	call	_color_read_Clear	;wreg free
  1125   0008E4  0100               	movlb	0	; () banked
  1126   0008E6  519E               	movf	(main@ambient+6)& (0+255),w,b
  1127   0008E8  5C05               	subwf	?_color_read_Clear^0,w,c
  1128   0008EA  6E0C               	movwf	___lwdiv@dividend^0,c
  1129   0008EC  519F               	movf	(main@ambient+7)& (0+255),w,b
  1130   0008EE  5806               	subwfb	(?_color_read_Clear+1)^0,w,c
  1131   0008F0  6E0D               	movwf	(___lwdiv@dividend+1)^0,c
  1132   0008F2  C07C  F00E         	movff	_main$2841,___lwdiv@divisor
  1133   0008F6  C07D  F00F         	movff	_main$2841+1,___lwdiv@divisor+1
  1134   0008FA  EC27  F012         	call	___lwdiv	;wreg free
  1135   0008FE  C00C  F0A6         	movff	?___lwdiv,main@reading+6
  1136   000902  C00D  F0A7         	movff	?___lwdiv+1,main@reading+7
  1137   000906                     
  1138                           ;mainfinal.c: 142:         if (reading.clear < 1200 && reading.clear > 30) {
  1139   000906  0EB0               	movlw	176
  1140   000908  0100               	movlb	0	; () banked
  1141   00090A  5DA6               	subwf	(main@reading+6)& (0+255),w,b
  1142   00090C  0E04               	movlw	4
  1143   00090E  59A7               	subwfb	(main@reading+7)& (0+255),w,b
  1144   000910  B0D8               	btfsc	status,0,c
  1145   000912  EF8D  F004         	goto	u3211
  1146   000916  EF8F  F004         	goto	u3210
  1147   00091A                     u3211:
  1148   00091A  EF53  F004         	goto	l3489
  1149   00091E                     u3210:
  1150   00091E                     
  1151                           ; BSR set to: 0
  1152   00091E  51A7               	movf	(main@reading+7)& (0+255),w,b
  1153   000920  E109               	bnz	u3220
  1154   000922  0E1F               	movlw	31
  1155   000924  5DA6               	subwf	(main@reading+6)& (0+255),w,b
  1156   000926  A0D8               	btfss	status,0,c
  1157   000928  EF98  F004         	goto	u3221
  1158   00092C  EF9A  F004         	goto	u3220
  1159   000930                     u3221:
  1160   000930  EF53  F004         	goto	l3489
  1161   000934                     u3220:
  1162   000934                     
  1163                           ; BSR set to: 0
  1164                           ;mainfinal.c: 144:             savetime(timercount);
  1165   000934  C052  F001         	movff	_timercount,savetime@timercount
  1166   000938  C053  F002         	movff	_timercount+1,savetime@timercount+1
  1167   00093C  ECE8  F013         	call	_savetime	;wreg free
  1168   000940                     
  1169                           ;mainfinal.c: 145:             savepath(1);
  1170   000940  0E01               	movlw	1
  1171   000942  EC22  F014         	call	_savepath
  1172   000946                     
  1173                           ;mainfinal.c: 147:             smallmovement(&motorL,&motorR, 1);
  1174   000946  0E7E               	movlw	low main@motorL
  1175   000948  6E1E               	movwf	smallmovement@mL^0,c
  1176   00094A  0E00               	movlw	high main@motorL
  1177   00094C  6E1F               	movwf	(smallmovement@mL+1)^0,c
  1178   00094E  0E87               	movlw	low main@motorR
  1179   000950  6E20               	movwf	smallmovement@mR^0,c
  1180   000952  0E00               	movlw	high main@motorR
  1181   000954  6E21               	movwf	(smallmovement@mR+1)^0,c
  1182   000956  0E01               	movlw	1
  1183   000958  6E22               	movwf	smallmovement@dir^0,c
  1184   00095A  ECBD  F010         	call	_smallmovement	;wreg free
  1185   00095E                     
  1186                           ;mainfinal.c: 148:             _delay((unsigned long)((200)*(64000000/4000.0)));
  1187   00095E  0E11               	movlw	17
  1188   000960  6E4D               	movwf	(??_main+1)^0,c
  1189   000962  0E3C               	movlw	60
  1190   000964  6E4C               	movwf	??_main^0,c
  1191   000966  0ECB               	movlw	203
  1192   000968                     u3357:
  1193   000968  2EE8               	decfsz	wreg,f,c
  1194   00096A  D7FE               	bra	u3357
  1195   00096C  2E4C               	decfsz	??_main^0,f,c
  1196   00096E  D7FC               	bra	u3357
  1197   000970  2E4D               	decfsz	(??_main+1)^0,f,c
  1198   000972  D7FA               	bra	u3357
  1199   000974  F000               	nop	
  1200   000976                     
  1201                           ;mainfinal.c: 149:             smallmovement(&motorL,&motorR, 1);
  1202   000976  0E7E               	movlw	low main@motorL
  1203   000978  6E1E               	movwf	smallmovement@mL^0,c
  1204   00097A  0E00               	movlw	high main@motorL
  1205   00097C  6E1F               	movwf	(smallmovement@mL+1)^0,c
  1206   00097E  0E87               	movlw	low main@motorR
  1207   000980  6E20               	movwf	smallmovement@mR^0,c
  1208   000982  0E00               	movlw	high main@motorR
  1209   000984  6E21               	movwf	(smallmovement@mR+1)^0,c
  1210   000986  0E01               	movlw	1
  1211   000988  6E22               	movwf	smallmovement@dir^0,c
  1212   00098A  ECBD  F010         	call	_smallmovement	;wreg free
  1213   00098E                     
  1214                           ;mainfinal.c: 150:             _delay((unsigned long)((200)*(64000000/4000.0)));
  1215   00098E  0E11               	movlw	17
  1216   000990  6E4D               	movwf	(??_main+1)^0,c
  1217   000992  0E3C               	movlw	60
  1218   000994  6E4C               	movwf	??_main^0,c
  1219   000996  0ECB               	movlw	203
  1220   000998                     u3367:
  1221   000998  2EE8               	decfsz	wreg,f,c
  1222   00099A  D7FE               	bra	u3367
  1223   00099C  2E4C               	decfsz	??_main^0,f,c
  1224   00099E  D7FC               	bra	u3367
  1225   0009A0  2E4D               	decfsz	(??_main+1)^0,f,c
  1226   0009A2  D7FA               	bra	u3367
  1227   0009A4  F000               	nop	
  1228   0009A6                     
  1229                           ;mainfinal.c: 152:             reading.red = (color_read_Red()-ambient.red)/(max.red/100
      +                          0+1);
  1230   0009A6  0E03               	movlw	3
  1231   0009A8  6E0F               	movwf	(___lwdiv@divisor+1)^0,c
  1232   0009AA  0EE8               	movlw	232
  1233   0009AC  6E0E               	movwf	___lwdiv@divisor^0,c
  1234   0009AE  C090  F00C         	movff	main@max,___lwdiv@dividend
  1235   0009B2  C091  F00D         	movff	main@max+1,___lwdiv@dividend+1
  1236   0009B6  EC27  F012         	call	___lwdiv	;wreg free
  1237   0009BA  0E01               	movlw	1
  1238   0009BC  240C               	addwf	?___lwdiv^0,w,c
  1239   0009BE  0100               	movlb	0	; () banked
  1240   0009C0  6F7C               	movwf	_main$2841& (0+255),b
  1241   0009C2  0E00               	movlw	0
  1242   0009C4  200D               	addwfc	(?___lwdiv+1)^0,w,c
  1243   0009C6  6F7D               	movwf	(_main$2841+1)& (0+255),b
  1244   0009C8                     
  1245                           ; BSR set to: 0
  1246                           ;mainfinal.c: 152:             reading.red = (color_read_Red()-ambient.red)/(max.red/100
      +                          0+1);
  1247   0009C8  EC9A  F012         	call	_color_read_Red	;wreg free
  1248   0009CC  0100               	movlb	0	; () banked
  1249   0009CE  5198               	movf	main@ambient& (0+255),w,b
  1250   0009D0  5C05               	subwf	?_color_read_Red^0,w,c
  1251   0009D2  6E0C               	movwf	___lwdiv@dividend^0,c
  1252   0009D4  5199               	movf	(main@ambient+1)& (0+255),w,b
  1253   0009D6  5806               	subwfb	(?_color_read_Red+1)^0,w,c
  1254   0009D8  6E0D               	movwf	(___lwdiv@dividend+1)^0,c
  1255   0009DA  C07C  F00E         	movff	_main$2841,___lwdiv@divisor
  1256   0009DE  C07D  F00F         	movff	_main$2841+1,___lwdiv@divisor+1
  1257   0009E2  EC27  F012         	call	___lwdiv	;wreg free
  1258   0009E6  C00C  F0A0         	movff	?___lwdiv,main@reading
  1259   0009EA  C00D  F0A1         	movff	?___lwdiv+1,main@reading+1
  1260   0009EE                     
  1261                           ;mainfinal.c: 153:             reading.blue = (color_read_Blue()-ambient.blue)/(max.blue
      +                          /1000+1);
  1262   0009EE  0E03               	movlw	3
  1263   0009F0  6E0F               	movwf	(___lwdiv@divisor+1)^0,c
  1264   0009F2  0EE8               	movlw	232
  1265   0009F4  6E0E               	movwf	___lwdiv@divisor^0,c
  1266   0009F6  C092  F00C         	movff	main@max+2,___lwdiv@dividend
  1267   0009FA  C093  F00D         	movff	main@max+3,___lwdiv@dividend+1
  1268   0009FE  EC27  F012         	call	___lwdiv	;wreg free
  1269   000A02  0E01               	movlw	1
  1270   000A04  240C               	addwf	?___lwdiv^0,w,c
  1271   000A06  0100               	movlb	0	; () banked
  1272   000A08  6F7C               	movwf	_main$2841& (0+255),b
  1273   000A0A  0E00               	movlw	0
  1274   000A0C  200D               	addwfc	(?___lwdiv+1)^0,w,c
  1275   000A0E  6F7D               	movwf	(_main$2841+1)& (0+255),b
  1276   000A10                     
  1277                           ; BSR set to: 0
  1278                           ;mainfinal.c: 153:             reading.blue = (color_read_Blue()-ambient.blue)/(max.blue
      +                          /1000+1);
  1279   000A10  EC12  F013         	call	_color_read_Blue	;wreg free
  1280   000A14  0100               	movlb	0	; () banked
  1281   000A16  519A               	movf	(main@ambient+2)& (0+255),w,b
  1282   000A18  5C05               	subwf	?_color_read_Blue^0,w,c
  1283   000A1A  6E0C               	movwf	___lwdiv@dividend^0,c
  1284   000A1C  519B               	movf	(main@ambient+3)& (0+255),w,b
  1285   000A1E  5806               	subwfb	(?_color_read_Blue+1)^0,w,c
  1286   000A20  6E0D               	movwf	(___lwdiv@dividend+1)^0,c
  1287   000A22  C07C  F00E         	movff	_main$2841,___lwdiv@divisor
  1288   000A26  C07D  F00F         	movff	_main$2841+1,___lwdiv@divisor+1
  1289   000A2A  EC27  F012         	call	___lwdiv	;wreg free
  1290   000A2E  C00C  F0A2         	movff	?___lwdiv,main@reading+2
  1291   000A32  C00D  F0A3         	movff	?___lwdiv+1,main@reading+3
  1292   000A36                     
  1293                           ;mainfinal.c: 154:             reading.green = (color_read_Green()-ambient.green)/(max.g
      +                          reen/1000+1);
  1294   000A36  0E03               	movlw	3
  1295   000A38  6E0F               	movwf	(___lwdiv@divisor+1)^0,c
  1296   000A3A  0EE8               	movlw	232
  1297   000A3C  6E0E               	movwf	___lwdiv@divisor^0,c
  1298   000A3E  C094  F00C         	movff	main@max+4,___lwdiv@dividend
  1299   000A42  C095  F00D         	movff	main@max+5,___lwdiv@dividend+1
  1300   000A46  EC27  F012         	call	___lwdiv	;wreg free
  1301   000A4A  0E01               	movlw	1
  1302   000A4C  240C               	addwf	?___lwdiv^0,w,c
  1303   000A4E  0100               	movlb	0	; () banked
  1304   000A50  6F7C               	movwf	_main$2841& (0+255),b
  1305   000A52  0E00               	movlw	0
  1306   000A54  200D               	addwfc	(?___lwdiv+1)^0,w,c
  1307   000A56  6F7D               	movwf	(_main$2841+1)& (0+255),b
  1308   000A58                     
  1309                           ; BSR set to: 0
  1310                           ;mainfinal.c: 154:             reading.green = (color_read_Green()-ambient.green)/(max.g
      +                          reen/1000+1);
  1311   000A58  ECC2  F012         	call	_color_read_Green	;wreg free
  1312   000A5C  0100               	movlb	0	; () banked
  1313   000A5E  519C               	movf	(main@ambient+4)& (0+255),w,b
  1314   000A60  5C05               	subwf	?_color_read_Green^0,w,c
  1315   000A62  6E0C               	movwf	___lwdiv@dividend^0,c
  1316   000A64  519D               	movf	(main@ambient+5)& (0+255),w,b
  1317   000A66  5806               	subwfb	(?_color_read_Green+1)^0,w,c
  1318   000A68  6E0D               	movwf	(___lwdiv@dividend+1)^0,c
  1319   000A6A  C07C  F00E         	movff	_main$2841,___lwdiv@divisor
  1320   000A6E  C07D  F00F         	movff	_main$2841+1,___lwdiv@divisor+1
  1321   000A72  EC27  F012         	call	___lwdiv	;wreg free
  1322   000A76  C00C  F0A4         	movff	?___lwdiv,main@reading+4
  1323   000A7A  C00D  F0A5         	movff	?___lwdiv+1,main@reading+5
  1324   000A7E                     
  1325                           ;mainfinal.c: 155:             reading.clear = (color_read_Clear()-ambient.clear)/(max.c
      +                          lear/1000+1);
  1326   000A7E  0E03               	movlw	3
  1327   000A80  6E0F               	movwf	(___lwdiv@divisor+1)^0,c
  1328   000A82  0EE8               	movlw	232
  1329   000A84  6E0E               	movwf	___lwdiv@divisor^0,c
  1330   000A86  C096  F00C         	movff	main@max+6,___lwdiv@dividend
  1331   000A8A  C097  F00D         	movff	main@max+7,___lwdiv@dividend+1
  1332   000A8E  EC27  F012         	call	___lwdiv	;wreg free
  1333   000A92  0E01               	movlw	1
  1334   000A94  240C               	addwf	?___lwdiv^0,w,c
  1335   000A96  0100               	movlb	0	; () banked
  1336   000A98  6F7C               	movwf	_main$2841& (0+255),b
  1337   000A9A  0E00               	movlw	0
  1338   000A9C  200D               	addwfc	(?___lwdiv+1)^0,w,c
  1339   000A9E  6F7D               	movwf	(_main$2841+1)& (0+255),b
  1340   000AA0                     
  1341                           ; BSR set to: 0
  1342                           ;mainfinal.c: 155:             reading.clear = (color_read_Clear()-ambient.clear)/(max.c
      +                          lear/1000+1);
  1343   000AA0  ECEA  F012         	call	_color_read_Clear	;wreg free
  1344   000AA4  0100               	movlb	0	; () banked
  1345   000AA6  519E               	movf	(main@ambient+6)& (0+255),w,b
  1346   000AA8  5C05               	subwf	?_color_read_Clear^0,w,c
  1347   000AAA  6E0C               	movwf	___lwdiv@dividend^0,c
  1348   000AAC  519F               	movf	(main@ambient+7)& (0+255),w,b
  1349   000AAE  5806               	subwfb	(?_color_read_Clear+1)^0,w,c
  1350   000AB0  6E0D               	movwf	(___lwdiv@dividend+1)^0,c
  1351   000AB2  C07C  F00E         	movff	_main$2841,___lwdiv@divisor
  1352   000AB6  C07D  F00F         	movff	_main$2841+1,___lwdiv@divisor+1
  1353   000ABA  EC27  F012         	call	___lwdiv	;wreg free
  1354   000ABE  C00C  F0A6         	movff	?___lwdiv,main@reading+6
  1355   000AC2  C00D  F0A7         	movff	?___lwdiv+1,main@reading+7
  1356   000AC6                     
  1357                           ;mainfinal.c: 158:             step = decide_color(&reading);
  1358   000AC6  0EA0               	movlw	low main@reading
  1359   000AC8  6E28               	movwf	decide_color@mx^0,c
  1360   000ACA  0E00               	movlw	high main@reading
  1361   000ACC  6E29               	movwf	(decide_color@mx+1)^0,c
  1362   000ACE  EC1F  F000         	call	_decide_color	;wreg free
  1363   000AD2  0100               	movlb	0	; () banked
  1364   000AD4  6FA8               	movwf	_step& (0+255),b
  1365   000AD6                     
  1366                           ; BSR set to: 0
  1367                           ;mainfinal.c: 159:             smallmovement(&motorL,&motorR, 0);
  1368   000AD6  0E7E               	movlw	low main@motorL
  1369   000AD8  6E1E               	movwf	smallmovement@mL^0,c
  1370   000ADA  0E00               	movlw	high main@motorL
  1371   000ADC  6E1F               	movwf	(smallmovement@mL+1)^0,c
  1372   000ADE  0E87               	movlw	low main@motorR
  1373   000AE0  6E20               	movwf	smallmovement@mR^0,c
  1374   000AE2  0E00               	movlw	high main@motorR
  1375   000AE4  6E21               	movwf	(smallmovement@mR+1)^0,c
  1376   000AE6  0E00               	movlw	0
  1377   000AE8  6E22               	movwf	smallmovement@dir^0,c
  1378   000AEA  ECBD  F010         	call	_smallmovement	;wreg free
  1379   000AEE                     
  1380                           ;mainfinal.c: 162:             if (step<=9){carryoutstep(motorL, motorR, &reading, &max,
      +                           &ambient, step);}
  1381   000AEE  0E0A               	movlw	10
  1382   000AF0  0100               	movlb	0	; () banked
  1383   000AF2  61A8               	cpfslt	_step& (0+255),b
  1384   000AF4  EF7E  F005         	goto	u3231
  1385   000AF8  EF80  F005         	goto	u3230
  1386   000AFC                     u3231:
  1387   000AFC  EFA4  F005         	goto	l3535
  1388   000B00                     u3230:
  1389   000B00                     l3533:
  1390                           
  1391                           ; BSR set to: 0
  1392   000B00  EE20  F07E         	lfsr	2,main@motorL
  1393   000B04  EE00  F060         	lfsr	0,carryoutstep@motorL
  1394   000B08  0E08               	movlw	8
  1395   000B0A                     u3241:
  1396   000B0A  CFDB FFEB          	movff	plusw2,plusw0
  1397   000B0E  06E8               	decf	wreg,f,c
  1398   000B10  E2FC               	bc	u3241
  1399   000B12  EE20  F087         	lfsr	2,main@motorR
  1400   000B16  EE00  F069         	lfsr	0,carryoutstep@motorR
  1401   000B1A  0E08               	movlw	8
  1402   000B1C                     u3251:
  1403   000B1C  CFDB FFEB          	movff	plusw2,plusw0
  1404   000B20  06E8               	decf	wreg,f,c
  1405   000B22  E2FC               	bc	u3251
  1406   000B24  0EA0               	movlw	low main@reading
  1407   000B26  6F72               	movwf	carryoutstep@read& (0+255),b
  1408   000B28  0E00               	movlw	high main@reading
  1409   000B2A  6F73               	movwf	(carryoutstep@read+1)& (0+255),b
  1410   000B2C  0E90               	movlw	low main@max
  1411   000B2E  6F74               	movwf	carryoutstep@mx& (0+255),b
  1412   000B30  0E00               	movlw	high main@max
  1413   000B32  6F75               	movwf	(carryoutstep@mx+1)& (0+255),b
  1414   000B34  0E98               	movlw	low main@ambient
  1415   000B36  6F76               	movwf	carryoutstep@amb& (0+255),b
  1416   000B38  0E00               	movlw	high main@ambient
  1417   000B3A  6F77               	movwf	(carryoutstep@amb+1)& (0+255),b
  1418   000B3C  C0A8  F078         	movff	_step,carryoutstep@step
  1419   000B40  EC71  F00A         	call	_carryoutstep	;wreg free
  1420   000B44  EF53  F004         	goto	l3489
  1421   000B48                     l3535:
  1422                           
  1423                           ; BSR set to: 0
  1424                           ;mainfinal.c: 166:                 square(&motorL,&motorR, 1);
  1425   000B48  0E7E               	movlw	low main@motorL
  1426   000B4A  6E1E               	movwf	square@mL^0,c
  1427   000B4C  0E00               	movlw	high main@motorL
  1428   000B4E  6E1F               	movwf	(square@mL+1)^0,c
  1429   000B50  0E87               	movlw	low main@motorR
  1430   000B52  6E20               	movwf	square@mR^0,c
  1431   000B54  0E00               	movlw	high main@motorR
  1432   000B56  6E21               	movwf	(square@mR+1)^0,c
  1433   000B58  0E01               	movlw	1
  1434   000B5A  6E22               	movwf	square@dir^0,c
  1435   000B5C  EC81  F011         	call	_square	;wreg free
  1436   000B60                     
  1437                           ;mainfinal.c: 168:                 char a = 0;
  1438   000B60  0E00               	movlw	0
  1439   000B62  0100               	movlb	0	; () banked
  1440   000B64  6F79               	movwf	main@a& (0+255),b
  1441                           
  1442                           ;mainfinal.c: 169:                 while (a<20) {
  1443   000B66  EF64  F006         	goto	l3563
  1444   000B6A                     l3539:
  1445                           
  1446                           ; BSR set to: 0
  1447                           ;mainfinal.c: 170:                     _delay((unsigned long)((30)*(64000000/4000.0)));
  1448   000B6A  0E03               	movlw	3
  1449   000B6C  6E4D               	movwf	(??_main+1)^0,c
  1450   000B6E  0E70               	movlw	112
  1451   000B70  6E4C               	movwf	??_main^0,c
  1452   000B72  0E5C               	movlw	92
  1453   000B74                     u3377:
  1454   000B74  2EE8               	decfsz	wreg,f,c
  1455   000B76  D7FE               	bra	u3377
  1456   000B78  2E4C               	decfsz	??_main^0,f,c
  1457   000B7A  D7FC               	bra	u3377
  1458   000B7C  2E4D               	decfsz	(??_main+1)^0,f,c
  1459   000B7E  D7FA               	bra	u3377
  1460   000B80  D000               	nop2	
  1461   000B82                     
  1462                           ;mainfinal.c: 171:                     reading.red = (color_read_Red()-ambient.red)/(max
      +                          .red/1000+1);
  1463   000B82  0E03               	movlw	3
  1464   000B84  6E0F               	movwf	(___lwdiv@divisor+1)^0,c
  1465   000B86  0EE8               	movlw	232
  1466   000B88  6E0E               	movwf	___lwdiv@divisor^0,c
  1467   000B8A  C090  F00C         	movff	main@max,___lwdiv@dividend
  1468   000B8E  C091  F00D         	movff	main@max+1,___lwdiv@dividend+1
  1469   000B92  EC27  F012         	call	___lwdiv	;wreg free
  1470   000B96  0E01               	movlw	1
  1471   000B98  240C               	addwf	?___lwdiv^0,w,c
  1472   000B9A  0100               	movlb	0	; () banked
  1473   000B9C  6F7C               	movwf	_main$2841& (0+255),b
  1474   000B9E  0E00               	movlw	0
  1475   000BA0  200D               	addwfc	(?___lwdiv+1)^0,w,c
  1476   000BA2  6F7D               	movwf	(_main$2841+1)& (0+255),b
  1477   000BA4                     
  1478                           ; BSR set to: 0
  1479                           ;mainfinal.c: 171:                     reading.red = (color_read_Red()-ambient.red)/(max
      +                          .red/1000+1);
  1480   000BA4  EC9A  F012         	call	_color_read_Red	;wreg free
  1481   000BA8  0100               	movlb	0	; () banked
  1482   000BAA  5198               	movf	main@ambient& (0+255),w,b
  1483   000BAC  5C05               	subwf	?_color_read_Red^0,w,c
  1484   000BAE  6E0C               	movwf	___lwdiv@dividend^0,c
  1485   000BB0  5199               	movf	(main@ambient+1)& (0+255),w,b
  1486   000BB2  5806               	subwfb	(?_color_read_Red+1)^0,w,c
  1487   000BB4  6E0D               	movwf	(___lwdiv@dividend+1)^0,c
  1488   000BB6  C07C  F00E         	movff	_main$2841,___lwdiv@divisor
  1489   000BBA  C07D  F00F         	movff	_main$2841+1,___lwdiv@divisor+1
  1490   000BBE  EC27  F012         	call	___lwdiv	;wreg free
  1491   000BC2  C00C  F0A0         	movff	?___lwdiv,main@reading
  1492   000BC6  C00D  F0A1         	movff	?___lwdiv+1,main@reading+1
  1493   000BCA                     
  1494                           ;mainfinal.c: 172:                     reading.blue = (color_read_Blue()-ambient.blue)/(
      +                          max.blue/1000+1);
  1495   000BCA  0E03               	movlw	3
  1496   000BCC  6E0F               	movwf	(___lwdiv@divisor+1)^0,c
  1497   000BCE  0EE8               	movlw	232
  1498   000BD0  6E0E               	movwf	___lwdiv@divisor^0,c
  1499   000BD2  C092  F00C         	movff	main@max+2,___lwdiv@dividend
  1500   000BD6  C093  F00D         	movff	main@max+3,___lwdiv@dividend+1
  1501   000BDA  EC27  F012         	call	___lwdiv	;wreg free
  1502   000BDE  0E01               	movlw	1
  1503   000BE0  240C               	addwf	?___lwdiv^0,w,c
  1504   000BE2  0100               	movlb	0	; () banked
  1505   000BE4  6F7C               	movwf	_main$2841& (0+255),b
  1506   000BE6  0E00               	movlw	0
  1507   000BE8  200D               	addwfc	(?___lwdiv+1)^0,w,c
  1508   000BEA  6F7D               	movwf	(_main$2841+1)& (0+255),b
  1509   000BEC                     
  1510                           ; BSR set to: 0
  1511                           ;mainfinal.c: 172:                     reading.blue = (color_read_Blue()-ambient.blue)/(
      +                          max.blue/1000+1);
  1512   000BEC  EC12  F013         	call	_color_read_Blue	;wreg free
  1513   000BF0  0100               	movlb	0	; () banked
  1514   000BF2  519A               	movf	(main@ambient+2)& (0+255),w,b
  1515   000BF4  5C05               	subwf	?_color_read_Blue^0,w,c
  1516   000BF6  6E0C               	movwf	___lwdiv@dividend^0,c
  1517   000BF8  519B               	movf	(main@ambient+3)& (0+255),w,b
  1518   000BFA  5806               	subwfb	(?_color_read_Blue+1)^0,w,c
  1519   000BFC  6E0D               	movwf	(___lwdiv@dividend+1)^0,c
  1520   000BFE  C07C  F00E         	movff	_main$2841,___lwdiv@divisor
  1521   000C02  C07D  F00F         	movff	_main$2841+1,___lwdiv@divisor+1
  1522   000C06  EC27  F012         	call	___lwdiv	;wreg free
  1523   000C0A  C00C  F0A2         	movff	?___lwdiv,main@reading+2
  1524   000C0E  C00D  F0A3         	movff	?___lwdiv+1,main@reading+3
  1525   000C12                     
  1526                           ;mainfinal.c: 173:                     reading.green = (color_read_Green()-ambient.green
      +                          )/(max.green/1000+1);
  1527   000C12  0E03               	movlw	3
  1528   000C14  6E0F               	movwf	(___lwdiv@divisor+1)^0,c
  1529   000C16  0EE8               	movlw	232
  1530   000C18  6E0E               	movwf	___lwdiv@divisor^0,c
  1531   000C1A  C094  F00C         	movff	main@max+4,___lwdiv@dividend
  1532   000C1E  C095  F00D         	movff	main@max+5,___lwdiv@dividend+1
  1533   000C22  EC27  F012         	call	___lwdiv	;wreg free
  1534   000C26  0E01               	movlw	1
  1535   000C28  240C               	addwf	?___lwdiv^0,w,c
  1536   000C2A  0100               	movlb	0	; () banked
  1537   000C2C  6F7C               	movwf	_main$2841& (0+255),b
  1538   000C2E  0E00               	movlw	0
  1539   000C30  200D               	addwfc	(?___lwdiv+1)^0,w,c
  1540   000C32  6F7D               	movwf	(_main$2841+1)& (0+255),b
  1541   000C34                     
  1542                           ; BSR set to: 0
  1543                           ;mainfinal.c: 173:                     reading.green = (color_read_Green()-ambient.green
      +                          )/(max.green/1000+1);
  1544   000C34  ECC2  F012         	call	_color_read_Green	;wreg free
  1545   000C38  0100               	movlb	0	; () banked
  1546   000C3A  519C               	movf	(main@ambient+4)& (0+255),w,b
  1547   000C3C  5C05               	subwf	?_color_read_Green^0,w,c
  1548   000C3E  6E0C               	movwf	___lwdiv@dividend^0,c
  1549   000C40  519D               	movf	(main@ambient+5)& (0+255),w,b
  1550   000C42  5806               	subwfb	(?_color_read_Green+1)^0,w,c
  1551   000C44  6E0D               	movwf	(___lwdiv@dividend+1)^0,c
  1552   000C46  C07C  F00E         	movff	_main$2841,___lwdiv@divisor
  1553   000C4A  C07D  F00F         	movff	_main$2841+1,___lwdiv@divisor+1
  1554   000C4E  EC27  F012         	call	___lwdiv	;wreg free
  1555   000C52  C00C  F0A4         	movff	?___lwdiv,main@reading+4
  1556   000C56  C00D  F0A5         	movff	?___lwdiv+1,main@reading+5
  1557   000C5A                     
  1558                           ;mainfinal.c: 174:                     reading.clear = (color_read_Clear()-ambient.clear
      +                          )/(max.clear/1000+1);
  1559   000C5A  0E03               	movlw	3
  1560   000C5C  6E0F               	movwf	(___lwdiv@divisor+1)^0,c
  1561   000C5E  0EE8               	movlw	232
  1562   000C60  6E0E               	movwf	___lwdiv@divisor^0,c
  1563   000C62  C096  F00C         	movff	main@max+6,___lwdiv@dividend
  1564   000C66  C097  F00D         	movff	main@max+7,___lwdiv@dividend+1
  1565   000C6A  EC27  F012         	call	___lwdiv	;wreg free
  1566   000C6E  0E01               	movlw	1
  1567   000C70  240C               	addwf	?___lwdiv^0,w,c
  1568   000C72  0100               	movlb	0	; () banked
  1569   000C74  6F7C               	movwf	_main$2841& (0+255),b
  1570   000C76  0E00               	movlw	0
  1571   000C78  200D               	addwfc	(?___lwdiv+1)^0,w,c
  1572   000C7A  6F7D               	movwf	(_main$2841+1)& (0+255),b
  1573   000C7C                     
  1574                           ; BSR set to: 0
  1575                           ;mainfinal.c: 174:                     reading.clear = (color_read_Clear()-ambient.clear
      +                          )/(max.clear/1000+1);
  1576   000C7C  ECEA  F012         	call	_color_read_Clear	;wreg free
  1577   000C80  0100               	movlb	0	; () banked
  1578   000C82  519E               	movf	(main@ambient+6)& (0+255),w,b
  1579   000C84  5C05               	subwf	?_color_read_Clear^0,w,c
  1580   000C86  6E0C               	movwf	___lwdiv@dividend^0,c
  1581   000C88  519F               	movf	(main@ambient+7)& (0+255),w,b
  1582   000C8A  5806               	subwfb	(?_color_read_Clear+1)^0,w,c
  1583   000C8C  6E0D               	movwf	(___lwdiv@dividend+1)^0,c
  1584   000C8E  C07C  F00E         	movff	_main$2841,___lwdiv@divisor
  1585   000C92  C07D  F00F         	movff	_main$2841+1,___lwdiv@divisor+1
  1586   000C96  EC27  F012         	call	___lwdiv	;wreg free
  1587   000C9A  C00C  F0A6         	movff	?___lwdiv,main@reading+6
  1588   000C9E  C00D  F0A7         	movff	?___lwdiv+1,main@reading+7
  1589   000CA2                     
  1590                           ;mainfinal.c: 175:                     if (step == 10) {step = decide_color(&reading);}
  1591   000CA2  0E0A               	movlw	10
  1592   000CA4  0100               	movlb	0	; () banked
  1593   000CA6  19A8               	xorwf	_step& (0+255),w,b
  1594   000CA8  A4D8               	btfss	status,2,c
  1595   000CAA  EF59  F006         	goto	u3261
  1596   000CAE  EF5B  F006         	goto	u3260
  1597   000CB2                     u3261:
  1598   000CB2  EF63  F006         	goto	l3561
  1599   000CB6                     u3260:
  1600   000CB6                     
  1601                           ; BSR set to: 0
  1602   000CB6  0EA0               	movlw	low main@reading
  1603   000CB8  6E28               	movwf	decide_color@mx^0,c
  1604   000CBA  0E00               	movlw	high main@reading
  1605   000CBC  6E29               	movwf	(decide_color@mx+1)^0,c
  1606   000CBE  EC1F  F000         	call	_decide_color	;wreg free
  1607   000CC2  0100               	movlb	0	; () banked
  1608   000CC4  6FA8               	movwf	_step& (0+255),b
  1609   000CC6                     l3561:
  1610                           
  1611                           ; BSR set to: 0
  1612                           ;mainfinal.c: 176:                     a++;
  1613   000CC6  2B79               	incf	main@a& (0+255),f,b
  1614   000CC8                     l3563:
  1615                           
  1616                           ; BSR set to: 0
  1617                           ;mainfinal.c: 169:                 while (a<20) {
  1618   000CC8  0E13               	movlw	19
  1619   000CCA  6579               	cpfsgt	main@a& (0+255),b
  1620   000CCC  EF6A  F006         	goto	u3271
  1621   000CD0  EF6C  F006         	goto	u3270
  1622   000CD4                     u3271:
  1623   000CD4  EFB5  F005         	goto	l3539
  1624   000CD8                     u3270:
  1625   000CD8                     
  1626                           ; BSR set to: 0
  1627                           ;mainfinal.c: 179:                 if (step !=10) {carryoutstep(motorL, motorR, &reading
      +                          , &max, &ambient, step);}
  1628   000CD8  0E0A               	movlw	10
  1629   000CDA  19A8               	xorwf	_step& (0+255),w,b
  1630   000CDC  B4D8               	btfsc	status,2,c
  1631   000CDE  EF73  F006         	goto	u3281
  1632   000CE2  EF75  F006         	goto	u3280
  1633   000CE6                     u3281:
  1634   000CE6  EF77  F006         	goto	l3569
  1635   000CEA                     u3280:
  1636   000CEA  EF80  F005         	goto	l3533
  1637   000CEE                     l3569:
  1638                           
  1639                           ; BSR set to: 0
  1640   000CEE  EE20  F07E         	lfsr	2,main@motorL
  1641   000CF2  EE00  F037         	lfsr	0,returnhome@motorL
  1642   000CF6  0E08               	movlw	8
  1643   000CF8                     u3291:
  1644   000CF8  CFDB FFEB          	movff	plusw2,plusw0
  1645   000CFC  06E8               	decf	wreg,f,c
  1646   000CFE  E2FC               	bc	u3291
  1647   000D00  EE20  F087         	lfsr	2,main@motorR
  1648   000D04  EE00  F040         	lfsr	0,returnhome@motorR
  1649   000D08  0E08               	movlw	8
  1650   000D0A                     u3301:
  1651   000D0A  CFDB FFEB          	movff	plusw2,plusw0
  1652   000D0E  06E8               	decf	wreg,f,c
  1653   000D10  E2FC               	bc	u3301
  1654   000D12  ECEE  F00C         	call	_returnhome	;wreg free
  1655   000D16  EF53  F004         	goto	l3489
  1656   000D1A  EF1D  F000         	goto	start
  1657   000D1E                     __end_of_main:
  1658                           	callstack 0
  1659                           
  1660 ;; *************** function _savetime *****************
  1661 ;; Defined at:
  1662 ;;		line 332 in file "dc_motor.c"
  1663 ;; Parameters:    Size  Location     Type
  1664 ;;  timercount      2    0[COMRAM] int 
  1665 ;; Auto vars:     Size  Location     Type
  1666 ;;		None
  1667 ;; Return value:  Size  Location     Type
  1668 ;;                  1    wreg      void 
  1669 ;; Registers used:
  1670 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1671 ;; Tracked objects:
  1672 ;;		On entry : 0/0
  1673 ;;		On exit  : 0/0
  1674 ;;		Unchanged: 0/0
  1675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1676 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1679 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1680 ;;Total ram usage:        2 bytes
  1681 ;; Hardware stack levels used: 1
  1682 ;; Hardware stack levels required when called: 2
  1683 ;; This function calls:
  1684 ;;		Nothing
  1685 ;; This function is called by:
  1686 ;;		_main
  1687 ;; This function uses a non-reentrant model
  1688 ;;
  1689                           
  1690                           	psect	text1
  1691   0027D0                     __ptext1:
  1692                           	callstack 0
  1693   0027D0                     _savetime:
  1694                           	callstack 28
  1695   0027D0                     
  1696                           ;dc_motor.c: 332: void savetime(int timercount);dc_motor.c: 333: {;dc_motor.c: 334:     
      +                          interruptenable = 0;
  1697   0027D0  0E00               	movlw	0
  1698   0027D2  6E54               	movwf	_interruptenable^0,c
  1699   0027D4                     
  1700                           ;dc_motor.c: 335:     timearray[timeposition]=timercount;
  1701   0027D4  5056               	movf	_timeposition^0,w,c
  1702   0027D6  0D02               	mullw	2
  1703   0027D8  0E00               	movlw	low _timearray
  1704   0027DA  24F3               	addwf	243,w,c
  1705   0027DC  6ED9               	movwf	fsr2l,c
  1706   0027DE  0E02               	movlw	high _timearray
  1707   0027E0  20F4               	addwfc	prodh,w,c
  1708   0027E2  6EDA               	movwf	fsr2h,c
  1709   0027E4  C001  FFDE         	movff	savetime@timercount,postinc2
  1710   0027E8  C002  FFDD         	movff	savetime@timercount+1,postdec2
  1711   0027EC                     
  1712                           ;dc_motor.c: 336:     timeposition++;
  1713   0027EC  2A56               	incf	_timeposition^0,f,c
  1714   0027EE  0012               	return		;funcret
  1715   0027F0                     __end_of_savetime:
  1716                           	callstack 0
  1717                           
  1718 ;; *************** function _initDCmotorsPWM *****************
  1719 ;; Defined at:
  1720 ;;		line 7 in file "dc_motor.c"
  1721 ;; Parameters:    Size  Location     Type
  1722 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;		None
  1725 ;; Return value:  Size  Location     Type
  1726 ;;                  1    wreg      void 
  1727 ;; Registers used:
  1728 ;;		wreg, status,2
  1729 ;; Tracked objects:
  1730 ;;		On entry : 0/0
  1731 ;;		On exit  : 0/0
  1732 ;;		Unchanged: 0/0
  1733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1734 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1737 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1738 ;;Total ram usage:        2 bytes
  1739 ;; Hardware stack levels used: 1
  1740 ;; Hardware stack levels required when called: 2
  1741 ;; This function calls:
  1742 ;;		Nothing
  1743 ;; This function is called by:
  1744 ;;		_main
  1745 ;; This function uses a non-reentrant model
  1746 ;;
  1747                           
  1748                           	psect	text2
  1749   0023BE                     __ptext2:
  1750                           	callstack 0
  1751   0023BE                     _initDCmotorsPWM:
  1752                           	callstack 28
  1753   0023BE                     
  1754                           ;dc_motor.c: 10:     LATEbits.LATE2 = 0;
  1755   0023BE  947D               	bcf	125,2,c	;volatile
  1756                           
  1757                           ;dc_motor.c: 11:     LATEbits.LATE4 = 0;
  1758   0023C0  987D               	bcf	125,4,c	;volatile
  1759                           
  1760                           ;dc_motor.c: 12:     LATCbits.LATC7 = 0;
  1761   0023C2  9E7B               	bcf	123,7,c	;volatile
  1762                           
  1763                           ;dc_motor.c: 13:     LATGbits.LATG6 = 0;
  1764   0023C4  9C7F               	bcf	127,6,c	;volatile
  1765                           
  1766                           ;dc_motor.c: 14:     TRISEbits.TRISE2 = 0;
  1767   0023C6  9485               	bcf	133,2,c	;volatile
  1768                           
  1769                           ;dc_motor.c: 15:     TRISEbits.TRISE4 = 0;
  1770   0023C8  9885               	bcf	133,4,c	;volatile
  1771                           
  1772                           ;dc_motor.c: 16:     TRISCbits.TRISC7 = 0;
  1773   0023CA  9E83               	bcf	131,7,c	;volatile
  1774                           
  1775                           ;dc_motor.c: 17:     TRISGbits.TRISG6 = 0;
  1776   0023CC  9C87               	bcf	135,6,c	;volatile
  1777   0023CE                     
  1778                           ;dc_motor.c: 20:     RE2PPS=0x05;
  1779   0023CE  0E05               	movlw	5
  1780   0023D0  010E               	movlb	14	; () banked
  1781   0023D2  6F74               	movwf	116,b	;volatile
  1782                           
  1783                           ;dc_motor.c: 21:     RE4PPS=0x06;
  1784   0023D4  0E06               	movlw	6
  1785   0023D6  6F76               	movwf	118,b	;volatile
  1786                           
  1787                           ;dc_motor.c: 22:     RC7PPS=0x07;
  1788   0023D8  0E07               	movlw	7
  1789   0023DA  6F69               	movwf	105,b	;volatile
  1790                           
  1791                           ;dc_motor.c: 23:     RG6PPS=0x08;
  1792   0023DC  0E08               	movlw	8
  1793   0023DE  6F88               	movwf	136,b	;volatile
  1794                           
  1795                           ;dc_motor.c: 32:     T2CONbits.CKPS=011;
  1796   0023E0  50BD               	movf	189,w,c	;volatile
  1797   0023E2  0B8F               	andlw	-113
  1798   0023E4  0910               	iorlw	16
  1799   0023E6  6EBD               	movwf	189,c	;volatile
  1800                           
  1801                           ;dc_motor.c: 33:     T2HLTbits.MODE=0b00000;
  1802   0023E8  0EE0               	movlw	-32
  1803   0023EA  16BE               	andwf	190,f,c	;volatile
  1804                           
  1805                           ;dc_motor.c: 34:     T2CLKCONbits.CS=0b0001;
  1806   0023EC  50BF               	movf	191,w,c	;volatile
  1807   0023EE  0BF0               	andlw	-16
  1808   0023F0  0901               	iorlw	1
  1809   0023F2  6EBF               	movwf	191,c	;volatile
  1810                           
  1811                           ;dc_motor.c: 38:     T2PR=199;
  1812   0023F4  0EC7               	movlw	199
  1813   0023F6  6EBC               	movwf	188,c	;volatile
  1814   0023F8                     
  1815                           ; BSR set to: 14
  1816                           ;dc_motor.c: 39:     T2CONbits.ON=1;
  1817   0023F8  8EBD               	bsf	189,7,c	;volatile
  1818                           
  1819                           ;dc_motor.c: 43:     CCPR1H=0;
  1820   0023FA  0E00               	movlw	0
  1821   0023FC  6EAA               	movwf	170,c	;volatile
  1822                           
  1823                           ;dc_motor.c: 44:     CCPR2H=0;
  1824   0023FE  0E00               	movlw	0
  1825   002400  6EA6               	movwf	166,c	;volatile
  1826                           
  1827                           ;dc_motor.c: 45:     CCPR3H=0;
  1828   002402  0E00               	movlw	0
  1829   002404  010F               	movlb	15	; () banked
  1830   002406  6F25               	movwf	37,b	;volatile
  1831                           
  1832                           ;dc_motor.c: 46:     CCPR4H=0;
  1833   002408  0E00               	movlw	0
  1834   00240A  6F21               	movwf	33,b	;volatile
  1835                           
  1836                           ;dc_motor.c: 49:     CCPTMRS0bits.C1TSEL=0;
  1837   00240C  0EFC               	movlw	-4
  1838   00240E  16AD               	andwf	173,f,c	;volatile
  1839                           
  1840                           ;dc_motor.c: 50:     CCPTMRS0bits.C2TSEL=0;
  1841   002410  0EF3               	movlw	-13
  1842   002412  16AD               	andwf	173,f,c	;volatile
  1843                           
  1844                           ;dc_motor.c: 51:     CCPTMRS0bits.C3TSEL=0;
  1845   002414  0ECF               	movlw	-49
  1846   002416  16AD               	andwf	173,f,c	;volatile
  1847                           
  1848                           ;dc_motor.c: 52:     CCPTMRS0bits.C4TSEL=0;
  1849   002418  0E3F               	movlw	-193
  1850   00241A  16AD               	andwf	173,f,c	;volatile
  1851   00241C                     
  1852                           ; BSR set to: 15
  1853                           ;dc_motor.c: 56:     CCP1CONbits.FMT=1;
  1854   00241C  88AB               	bsf	171,4,c	;volatile
  1855                           
  1856                           ;dc_motor.c: 57:     CCP1CONbits.CCP1MODE=0b1100;
  1857   00241E  50AB               	movf	171,w,c	;volatile
  1858   002420  0BF0               	andlw	-16
  1859   002422  090C               	iorlw	12
  1860   002424  6EAB               	movwf	171,c	;volatile
  1861   002426                     
  1862                           ; BSR set to: 15
  1863                           ;dc_motor.c: 58:     CCP1CONbits.EN=1;
  1864   002426  8EAB               	bsf	171,7,c	;volatile
  1865   002428                     
  1866                           ; BSR set to: 15
  1867                           ;dc_motor.c: 60:     CCP2CONbits.FMT=1;
  1868   002428  88A7               	bsf	167,4,c	;volatile
  1869                           
  1870                           ;dc_motor.c: 61:     CCP2CONbits.CCP2MODE=0b1100;
  1871   00242A  50A7               	movf	167,w,c	;volatile
  1872   00242C  0BF0               	andlw	-16
  1873   00242E  090C               	iorlw	12
  1874   002430  6EA7               	movwf	167,c	;volatile
  1875   002432                     
  1876                           ; BSR set to: 15
  1877                           ;dc_motor.c: 62:     CCP2CONbits.EN=1;
  1878   002432  8EA7               	bsf	167,7,c	;volatile
  1879   002434                     
  1880                           ; BSR set to: 15
  1881                           ;dc_motor.c: 64:     CCP3CONbits.FMT=1;
  1882   002434  8926               	bsf	38,4,b	;volatile
  1883                           
  1884                           ;dc_motor.c: 65:     CCP3CONbits.CCP3MODE=0b1100;
  1885   002436  5126               	movf	38,w,b	;volatile
  1886   002438  0BF0               	andlw	-16
  1887   00243A  090C               	iorlw	12
  1888   00243C  6F26               	movwf	38,b	;volatile
  1889   00243E                     
  1890                           ; BSR set to: 15
  1891                           ;dc_motor.c: 66:     CCP3CONbits.EN=1;
  1892   00243E  8F26               	bsf	38,7,b	;volatile
  1893   002440                     
  1894                           ; BSR set to: 15
  1895                           ;dc_motor.c: 68:     CCP4CONbits.FMT=1;
  1896   002440  8922               	bsf	34,4,b	;volatile
  1897                           
  1898                           ;dc_motor.c: 69:     CCP4CONbits.CCP4MODE=0b1100;
  1899   002442  5122               	movf	34,w,b	;volatile
  1900   002444  0BF0               	andlw	-16
  1901   002446  090C               	iorlw	12
  1902   002448  6F22               	movwf	34,b	;volatile
  1903   00244A                     
  1904                           ; BSR set to: 15
  1905                           ;dc_motor.c: 70:     CCP4CONbits.EN=1;
  1906   00244A  8F22               	bsf	34,7,b	;volatile
  1907   00244C                     
  1908                           ; BSR set to: 15
  1909   00244C  0012               	return		;funcret
  1910   00244E                     __end_of_initDCmotorsPWM:
  1911                           	callstack 0
  1912                           
  1913 ;; *************** function _decide_color *****************
  1914 ;; Defined at:
  1915 ;;		line 105 in file "color.c"
  1916 ;; Parameters:    Size  Location     Type
  1917 ;;  mx              2   39[COMRAM] PTR struct colors
  1918 ;;		 -> main@reading(8), 
  1919 ;; Auto vars:     Size  Location     Type
  1920 ;;  grf             4   53[COMRAM] float 
  1921 ;;  brf             4   49[COMRAM] float 
  1922 ;;  rrf             4   45[COMRAM] float 
  1923 ;;  br              2   61[COMRAM] unsigned int 
  1924 ;;  rr              2   59[COMRAM] unsigned int 
  1925 ;;  gr              2   57[COMRAM] unsigned int 
  1926 ;; Return value:  Size  Location     Type
  1927 ;;                  1    wreg      unsigned char 
  1928 ;; Registers used:
  1929 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1930 ;; Tracked objects:
  1931 ;;		On entry : 0/0
  1932 ;;		On exit  : 0/0
  1933 ;;		Unchanged: 0/0
  1934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1935 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1936 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1937 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1938 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1939 ;;Total ram usage:       24 bytes
  1940 ;; Hardware stack levels used: 1
  1941 ;; Hardware stack levels required when called: 3
  1942 ;; This function calls:
  1943 ;;		___fldiv
  1944 ;;		___flmul
  1945 ;;		___fltol
  1946 ;;		___xxtofl
  1947 ;; This function is called by:
  1948 ;;		_main
  1949 ;; This function uses a non-reentrant model
  1950 ;;
  1951                           
  1952                           	psect	text3
  1953   00003E                     __ptext3:
  1954                           	callstack 0
  1955   00003E                     _decide_color:
  1956                           	callstack 27
  1957   00003E                     
  1958                           ;color.c: 105: char decide_color(colors *mx);color.c: 106: {;color.c: 108:     float rrf
      +                           = (float) mx->red/(mx->clear);
  1959   00003E  C028  FFD9         	movff	decide_color@mx,fsr2l
  1960   000042  C029  FFDA         	movff	decide_color@mx+1,fsr2h
  1961   000046  CFDE F02A          	movff	postinc2,??_decide_color
  1962   00004A  CFDD F02B          	movff	postdec2,??_decide_color+1
  1963   00004E  C02A  F001         	movff	??_decide_color,___xxtofl@val
  1964   000052  C02B  F002         	movff	??_decide_color+1,___xxtofl@val+1
  1965   000056  6A03               	clrf	(___xxtofl@val+2)^0,c
  1966   000058  6A04               	clrf	(___xxtofl@val+3)^0,c
  1967   00005A  0E00               	movlw	0
  1968   00005C  EC5E  F00B         	call	___xxtofl
  1969   000060  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1970   000064  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1971   000068  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1972   00006C  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1973   000070  EE20 F006          	lfsr	2,6
  1974   000074  5028               	movf	decide_color@mx^0,w,c
  1975   000076  26D9               	addwf	fsr2l,f,c
  1976   000078  5029               	movf	(decide_color@mx+1)^0,w,c
  1977   00007A  22DA               	addwfc	fsr2h,f,c
  1978   00007C  CFDE F02C          	movff	postinc2,??_decide_color+2
  1979   000080  CFDD F02D          	movff	postdec2,??_decide_color+3
  1980   000084  C02C  F001         	movff	??_decide_color+2,___xxtofl@val
  1981   000088  C02D  F002         	movff	??_decide_color+3,___xxtofl@val+1
  1982   00008C  6A03               	clrf	(___xxtofl@val+2)^0,c
  1983   00008E  6A04               	clrf	(___xxtofl@val+3)^0,c
  1984   000090  0E00               	movlw	0
  1985   000092  EC5E  F00B         	call	___xxtofl
  1986   000096  C001  F013         	movff	?___xxtofl,___fldiv@a
  1987   00009A  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1988   00009E  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  1989   0000A2  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  1990   0000A6  ECA4  F008         	call	___fldiv	;wreg free
  1991   0000AA  C00F  F02E         	movff	?___fldiv,decide_color@rrf
  1992   0000AE  C010  F02F         	movff	?___fldiv+1,decide_color@rrf+1
  1993   0000B2  C011  F030         	movff	?___fldiv+2,decide_color@rrf+2
  1994   0000B6  C012  F031         	movff	?___fldiv+3,decide_color@rrf+3
  1995                           
  1996                           ;color.c: 109:     float brf = (float) mx->blue/(mx->clear);
  1997   0000BA  EE20 F002          	lfsr	2,2
  1998   0000BE  5028               	movf	decide_color@mx^0,w,c
  1999   0000C0  26D9               	addwf	fsr2l,f,c
  2000   0000C2  5029               	movf	(decide_color@mx+1)^0,w,c
  2001   0000C4  22DA               	addwfc	fsr2h,f,c
  2002   0000C6  CFDE F02A          	movff	postinc2,??_decide_color
  2003   0000CA  CFDD F02B          	movff	postdec2,??_decide_color+1
  2004   0000CE  C02A  F001         	movff	??_decide_color,___xxtofl@val
  2005   0000D2  C02B  F002         	movff	??_decide_color+1,___xxtofl@val+1
  2006   0000D6  6A03               	clrf	(___xxtofl@val+2)^0,c
  2007   0000D8  6A04               	clrf	(___xxtofl@val+3)^0,c
  2008   0000DA  0E00               	movlw	0
  2009   0000DC  EC5E  F00B         	call	___xxtofl
  2010   0000E0  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2011   0000E4  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2012   0000E8  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2013   0000EC  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2014   0000F0  EE20 F006          	lfsr	2,6
  2015   0000F4  5028               	movf	decide_color@mx^0,w,c
  2016   0000F6  26D9               	addwf	fsr2l,f,c
  2017   0000F8  5029               	movf	(decide_color@mx+1)^0,w,c
  2018   0000FA  22DA               	addwfc	fsr2h,f,c
  2019   0000FC  CFDE F02C          	movff	postinc2,??_decide_color+2
  2020   000100  CFDD F02D          	movff	postdec2,??_decide_color+3
  2021   000104  C02C  F001         	movff	??_decide_color+2,___xxtofl@val
  2022   000108  C02D  F002         	movff	??_decide_color+3,___xxtofl@val+1
  2023   00010C  6A03               	clrf	(___xxtofl@val+2)^0,c
  2024   00010E  6A04               	clrf	(___xxtofl@val+3)^0,c
  2025   000110  0E00               	movlw	0
  2026   000112  EC5E  F00B         	call	___xxtofl
  2027   000116  C001  F013         	movff	?___xxtofl,___fldiv@a
  2028   00011A  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2029   00011E  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2030   000122  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2031   000126  ECA4  F008         	call	___fldiv	;wreg free
  2032   00012A  C00F  F032         	movff	?___fldiv,decide_color@brf
  2033   00012E  C010  F033         	movff	?___fldiv+1,decide_color@brf+1
  2034   000132  C011  F034         	movff	?___fldiv+2,decide_color@brf+2
  2035   000136  C012  F035         	movff	?___fldiv+3,decide_color@brf+3
  2036                           
  2037                           ;color.c: 110:     float grf = (float) mx->green/(mx->clear);
  2038   00013A  EE20 F004          	lfsr	2,4
  2039   00013E  5028               	movf	decide_color@mx^0,w,c
  2040   000140  26D9               	addwf	fsr2l,f,c
  2041   000142  5029               	movf	(decide_color@mx+1)^0,w,c
  2042   000144  22DA               	addwfc	fsr2h,f,c
  2043   000146  CFDE F02A          	movff	postinc2,??_decide_color
  2044   00014A  CFDD F02B          	movff	postdec2,??_decide_color+1
  2045   00014E  C02A  F001         	movff	??_decide_color,___xxtofl@val
  2046   000152  C02B  F002         	movff	??_decide_color+1,___xxtofl@val+1
  2047   000156  6A03               	clrf	(___xxtofl@val+2)^0,c
  2048   000158  6A04               	clrf	(___xxtofl@val+3)^0,c
  2049   00015A  0E00               	movlw	0
  2050   00015C  EC5E  F00B         	call	___xxtofl
  2051   000160  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2052   000164  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2053   000168  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2054   00016C  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2055   000170  EE20 F006          	lfsr	2,6
  2056   000174  5028               	movf	decide_color@mx^0,w,c
  2057   000176  26D9               	addwf	fsr2l,f,c
  2058   000178  5029               	movf	(decide_color@mx+1)^0,w,c
  2059   00017A  22DA               	addwfc	fsr2h,f,c
  2060   00017C  CFDE F02C          	movff	postinc2,??_decide_color+2
  2061   000180  CFDD F02D          	movff	postdec2,??_decide_color+3
  2062   000184  C02C  F001         	movff	??_decide_color+2,___xxtofl@val
  2063   000188  C02D  F002         	movff	??_decide_color+3,___xxtofl@val+1
  2064   00018C  6A03               	clrf	(___xxtofl@val+2)^0,c
  2065   00018E  6A04               	clrf	(___xxtofl@val+3)^0,c
  2066   000190  0E00               	movlw	0
  2067   000192  EC5E  F00B         	call	___xxtofl
  2068   000196  C001  F013         	movff	?___xxtofl,___fldiv@a
  2069   00019A  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2070   00019E  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2071   0001A2  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2072   0001A6  ECA4  F008         	call	___fldiv	;wreg free
  2073   0001AA  C00F  F036         	movff	?___fldiv,decide_color@grf
  2074   0001AE  C010  F037         	movff	?___fldiv+1,decide_color@grf+1
  2075   0001B2  C011  F038         	movff	?___fldiv+2,decide_color@grf+2
  2076   0001B6  C012  F039         	movff	?___fldiv+3,decide_color@grf+3
  2077   0001BA                     
  2078                           ;color.c: 113:     unsigned int rr = (int) (100*rrf);
  2079   0001BA  0E00               	movlw	0
  2080   0001BC  6E05               	movwf	___flmul@a^0,c
  2081   0001BE  0E00               	movlw	0
  2082   0001C0  6E06               	movwf	(___flmul@a+1)^0,c
  2083   0001C2  0EC8               	movlw	200
  2084   0001C4  6E07               	movwf	(___flmul@a+2)^0,c
  2085   0001C6  0E42               	movlw	66
  2086   0001C8  6E08               	movwf	(___flmul@a+3)^0,c
  2087   0001CA  C02E  F001         	movff	decide_color@rrf,___flmul@b
  2088   0001CE  C02F  F002         	movff	decide_color@rrf+1,___flmul@b+1
  2089   0001D2  C030  F003         	movff	decide_color@rrf+2,___flmul@b+2
  2090   0001D6  C031  F004         	movff	decide_color@rrf+3,___flmul@b+3
  2091   0001DA  EC8F  F006         	call	___flmul	;wreg free
  2092   0001DE  C001  F01A         	movff	?___flmul,___fltol@f1
  2093   0001E2  C002  F01B         	movff	?___flmul+1,___fltol@f1+1
  2094   0001E6  C003  F01C         	movff	?___flmul+2,___fltol@f1+2
  2095   0001EA  C004  F01D         	movff	?___flmul+3,___fltol@f1+3
  2096   0001EE  EC8D  F00D         	call	___fltol	;wreg free
  2097   0001F2  C01A  F03C         	movff	?___fltol,decide_color@rr
  2098   0001F6  C01B  F03D         	movff	?___fltol+1,decide_color@rr+1
  2099   0001FA                     
  2100                           ;color.c: 114:     unsigned int br = (int) (100*brf);
  2101   0001FA  0E00               	movlw	0
  2102   0001FC  6E05               	movwf	___flmul@a^0,c
  2103   0001FE  0E00               	movlw	0
  2104   000200  6E06               	movwf	(___flmul@a+1)^0,c
  2105   000202  0EC8               	movlw	200
  2106   000204  6E07               	movwf	(___flmul@a+2)^0,c
  2107   000206  0E42               	movlw	66
  2108   000208  6E08               	movwf	(___flmul@a+3)^0,c
  2109   00020A  C032  F001         	movff	decide_color@brf,___flmul@b
  2110   00020E  C033  F002         	movff	decide_color@brf+1,___flmul@b+1
  2111   000212  C034  F003         	movff	decide_color@brf+2,___flmul@b+2
  2112   000216  C035  F004         	movff	decide_color@brf+3,___flmul@b+3
  2113   00021A  EC8F  F006         	call	___flmul	;wreg free
  2114   00021E  C001  F01A         	movff	?___flmul,___fltol@f1
  2115   000222  C002  F01B         	movff	?___flmul+1,___fltol@f1+1
  2116   000226  C003  F01C         	movff	?___flmul+2,___fltol@f1+2
  2117   00022A  C004  F01D         	movff	?___flmul+3,___fltol@f1+3
  2118   00022E  EC8D  F00D         	call	___fltol	;wreg free
  2119   000232  C01A  F03E         	movff	?___fltol,decide_color@br
  2120   000236  C01B  F03F         	movff	?___fltol+1,decide_color@br+1
  2121   00023A                     
  2122                           ;color.c: 115:     unsigned int gr = (int) (100*grf);
  2123   00023A  0E00               	movlw	0
  2124   00023C  6E05               	movwf	___flmul@a^0,c
  2125   00023E  0E00               	movlw	0
  2126   000240  6E06               	movwf	(___flmul@a+1)^0,c
  2127   000242  0EC8               	movlw	200
  2128   000244  6E07               	movwf	(___flmul@a+2)^0,c
  2129   000246  0E42               	movlw	66
  2130   000248  6E08               	movwf	(___flmul@a+3)^0,c
  2131   00024A  C036  F001         	movff	decide_color@grf,___flmul@b
  2132   00024E  C037  F002         	movff	decide_color@grf+1,___flmul@b+1
  2133   000252  C038  F003         	movff	decide_color@grf+2,___flmul@b+2
  2134   000256  C039  F004         	movff	decide_color@grf+3,___flmul@b+3
  2135   00025A  EC8F  F006         	call	___flmul	;wreg free
  2136   00025E  C001  F01A         	movff	?___flmul,___fltol@f1
  2137   000262  C002  F01B         	movff	?___flmul+1,___fltol@f1+1
  2138   000266  C003  F01C         	movff	?___flmul+2,___fltol@f1+2
  2139   00026A  C004  F01D         	movff	?___flmul+3,___fltol@f1+3
  2140   00026E  EC8D  F00D         	call	___fltol	;wreg free
  2141   000272  C01A  F03A         	movff	?___fltol,decide_color@gr
  2142   000276  C01B  F03B         	movff	?___fltol+1,decide_color@gr+1
  2143   00027A                     
  2144                           ;color.c: 118:     if ((150<rr) & (br<80) & (gr<40) & (200<mx->clear && mx->clear<400)) 
      +                          {return 2;}
  2145   00027A  503D               	movf	(decide_color@rr+1)^0,w,c
  2146   00027C  E109               	bnz	u2760
  2147   00027E  0E97               	movlw	151
  2148   000280  5C3C               	subwf	decide_color@rr^0,w,c
  2149   000282  A0D8               	btfss	status,0,c
  2150   000284  EF46  F001         	goto	u2761
  2151   000288  EF48  F001         	goto	u2760
  2152   00028C                     u2761:
  2153   00028C  EF84  F001         	goto	l3277
  2154   000290                     u2760:
  2155   000290  503F               	movf	(decide_color@br+1)^0,w,c
  2156   000292  E107               	bnz	u2771
  2157   000294  0E50               	movlw	80
  2158   000296  5C3E               	subwf	decide_color@br^0,w,c
  2159   000298  B0D8               	btfsc	status,0,c
  2160   00029A  EF51  F001         	goto	u2771
  2161   00029E  EF53  F001         	goto	u2770
  2162   0002A2                     u2771:
  2163   0002A2  EF84  F001         	goto	l3277
  2164   0002A6                     u2770:
  2165   0002A6  503B               	movf	(decide_color@gr+1)^0,w,c
  2166   0002A8  E107               	bnz	u2781
  2167   0002AA  0E28               	movlw	40
  2168   0002AC  5C3A               	subwf	decide_color@gr^0,w,c
  2169   0002AE  B0D8               	btfsc	status,0,c
  2170   0002B0  EF5C  F001         	goto	u2781
  2171   0002B4  EF5E  F001         	goto	u2780
  2172   0002B8                     u2781:
  2173   0002B8  EF84  F001         	goto	l3277
  2174   0002BC                     u2780:
  2175   0002BC  EE20 F006          	lfsr	2,6
  2176   0002C0  5028               	movf	decide_color@mx^0,w,c
  2177   0002C2  26D9               	addwf	fsr2l,f,c
  2178   0002C4  5029               	movf	(decide_color@mx+1)^0,w,c
  2179   0002C6  22DA               	addwfc	fsr2h,f,c
  2180   0002C8  0E01               	movlw	1
  2181   0002CA  50DB               	movf	plusw2,w,c
  2182   0002CC  E109               	bnz	u2790
  2183   0002CE  0EC9               	movlw	201
  2184   0002D0  5CDE               	subwf	postinc2,w,c
  2185   0002D2  A0D8               	btfss	status,0,c
  2186   0002D4  EF6E  F001         	goto	u2791
  2187   0002D8  EF70  F001         	goto	u2790
  2188   0002DC                     u2791:
  2189   0002DC  EF84  F001         	goto	l3277
  2190   0002E0                     u2790:
  2191   0002E0  EE20 F006          	lfsr	2,6
  2192   0002E4  5028               	movf	decide_color@mx^0,w,c
  2193   0002E6  26D9               	addwf	fsr2l,f,c
  2194   0002E8  5029               	movf	(decide_color@mx+1)^0,w,c
  2195   0002EA  22DA               	addwfc	fsr2h,f,c
  2196   0002EC  0E90               	movlw	144
  2197   0002EE  5CDE               	subwf	postinc2,w,c
  2198   0002F0  0E01               	movlw	1
  2199   0002F2  58DE               	subwfb	postinc2,w,c
  2200   0002F4  B0D8               	btfsc	status,0,c
  2201   0002F6  EF7F  F001         	goto	u2801
  2202   0002FA  EF81  F001         	goto	u2800
  2203   0002FE                     u2801:
  2204   0002FE  EF84  F001         	goto	l3277
  2205   000302                     u2800:
  2206   000302  0E02               	movlw	2
  2207   000304  EF68  F003         	goto	l446
  2208   000308                     l3277:
  2209                           
  2210                           ;color.c: 120:     if ((60<rr && rr<100) & (60<br && br<100) & (110<gr) & (mx->clear<550
      +                          )) {return 3;}
  2211   000308  503D               	movf	(decide_color@rr+1)^0,w,c
  2212   00030A  E109               	bnz	u2810
  2213   00030C  0E3D               	movlw	61
  2214   00030E  5C3C               	subwf	decide_color@rr^0,w,c
  2215   000310  A0D8               	btfss	status,0,c
  2216   000312  EF8D  F001         	goto	u2811
  2217   000316  EF8F  F001         	goto	u2810
  2218   00031A                     u2811:
  2219   00031A  EFCF  F001         	goto	l3293
  2220   00031E                     u2810:
  2221   00031E  503D               	movf	(decide_color@rr+1)^0,w,c
  2222   000320  E107               	bnz	u2821
  2223   000322  0E64               	movlw	100
  2224   000324  5C3C               	subwf	decide_color@rr^0,w,c
  2225   000326  B0D8               	btfsc	status,0,c
  2226   000328  EF98  F001         	goto	u2821
  2227   00032C  EF9A  F001         	goto	u2820
  2228   000330                     u2821:
  2229   000330  EFCF  F001         	goto	l3293
  2230   000334                     u2820:
  2231   000334  503F               	movf	(decide_color@br+1)^0,w,c
  2232   000336  E109               	bnz	u2830
  2233   000338  0E3D               	movlw	61
  2234   00033A  5C3E               	subwf	decide_color@br^0,w,c
  2235   00033C  A0D8               	btfss	status,0,c
  2236   00033E  EFA3  F001         	goto	u2831
  2237   000342  EFA5  F001         	goto	u2830
  2238   000346                     u2831:
  2239   000346  EFCF  F001         	goto	l3293
  2240   00034A                     u2830:
  2241   00034A  503F               	movf	(decide_color@br+1)^0,w,c
  2242   00034C  E107               	bnz	u2841
  2243   00034E  0E64               	movlw	100
  2244   000350  5C3E               	subwf	decide_color@br^0,w,c
  2245   000352  B0D8               	btfsc	status,0,c
  2246   000354  EFAE  F001         	goto	u2841
  2247   000358  EFB0  F001         	goto	u2840
  2248   00035C                     u2841:
  2249   00035C  EFCF  F001         	goto	l3293
  2250   000360                     u2840:
  2251   000360  503B               	movf	(decide_color@gr+1)^0,w,c
  2252   000362  E109               	bnz	u2850
  2253   000364  0E6F               	movlw	111
  2254   000366  5C3A               	subwf	decide_color@gr^0,w,c
  2255   000368  A0D8               	btfss	status,0,c
  2256   00036A  EFB9  F001         	goto	u2851
  2257   00036E  EFBB  F001         	goto	u2850
  2258   000372                     u2851:
  2259   000372  EFCF  F001         	goto	l3293
  2260   000376                     u2850:
  2261   000376  EE20 F006          	lfsr	2,6
  2262   00037A  5028               	movf	decide_color@mx^0,w,c
  2263   00037C  26D9               	addwf	fsr2l,f,c
  2264   00037E  5029               	movf	(decide_color@mx+1)^0,w,c
  2265   000380  22DA               	addwfc	fsr2h,f,c
  2266   000382  0E26               	movlw	38
  2267   000384  5CDE               	subwf	postinc2,w,c
  2268   000386  0E02               	movlw	2
  2269   000388  58DE               	subwfb	postinc2,w,c
  2270   00038A  B0D8               	btfsc	status,0,c
  2271   00038C  EFCA  F001         	goto	u2861
  2272   000390  EFCC  F001         	goto	u2860
  2273   000394                     u2861:
  2274   000394  EFCF  F001         	goto	l3293
  2275   000398                     u2860:
  2276   000398  0E03               	movlw	3
  2277   00039A  EF68  F003         	goto	l446
  2278   00039E                     l3293:
  2279                           
  2280                           ;color.c: 122:     if ((rr<70) & (100<br) & (gr<130) & (mx->clear<180)) {return 4;}
  2281   00039E  503D               	movf	(decide_color@rr+1)^0,w,c
  2282   0003A0  E107               	bnz	u2871
  2283   0003A2  0E46               	movlw	70
  2284   0003A4  5C3C               	subwf	decide_color@rr^0,w,c
  2285   0003A6  B0D8               	btfsc	status,0,c
  2286   0003A8  EFD8  F001         	goto	u2871
  2287   0003AC  EFDA  F001         	goto	u2870
  2288   0003B0                     u2871:
  2289   0003B0  EF05  F002         	goto	l3305
  2290   0003B4                     u2870:
  2291   0003B4  503F               	movf	(decide_color@br+1)^0,w,c
  2292   0003B6  E109               	bnz	u2880
  2293   0003B8  0E65               	movlw	101
  2294   0003BA  5C3E               	subwf	decide_color@br^0,w,c
  2295   0003BC  A0D8               	btfss	status,0,c
  2296   0003BE  EFE3  F001         	goto	u2881
  2297   0003C2  EFE5  F001         	goto	u2880
  2298   0003C6                     u2881:
  2299   0003C6  EF05  F002         	goto	l3305
  2300   0003CA                     u2880:
  2301   0003CA  503B               	movf	(decide_color@gr+1)^0,w,c
  2302   0003CC  E107               	bnz	u2891
  2303   0003CE  0E82               	movlw	130
  2304   0003D0  5C3A               	subwf	decide_color@gr^0,w,c
  2305   0003D2  B0D8               	btfsc	status,0,c
  2306   0003D4  EFEE  F001         	goto	u2891
  2307   0003D8  EFF0  F001         	goto	u2890
  2308   0003DC                     u2891:
  2309   0003DC  EF05  F002         	goto	l3305
  2310   0003E0                     u2890:
  2311   0003E0  EE20 F006          	lfsr	2,6
  2312   0003E4  5028               	movf	decide_color@mx^0,w,c
  2313   0003E6  26D9               	addwf	fsr2l,f,c
  2314   0003E8  5029               	movf	(decide_color@mx+1)^0,w,c
  2315   0003EA  22DA               	addwfc	fsr2h,f,c
  2316   0003EC  0E01               	movlw	1
  2317   0003EE  50DB               	movf	plusw2,w,c
  2318   0003F0  E107               	bnz	u2901
  2319   0003F2  0EB4               	movlw	180
  2320   0003F4  5CDE               	subwf	postinc2,w,c
  2321   0003F6  B0D8               	btfsc	status,0,c
  2322   0003F8  EF00  F002         	goto	u2901
  2323   0003FC  EF02  F002         	goto	u2900
  2324   000400                     u2901:
  2325   000400  EF05  F002         	goto	l3305
  2326   000404                     u2900:
  2327   000404  0E04               	movlw	4
  2328   000406  EF68  F003         	goto	l446
  2329   00040A                     l3305:
  2330                           
  2331                           ;color.c: 124:     if ((100<rr) & (br<85) & (85<gr) & (mx->clear>650) & (br<gr)) {return
      +                           5;}
  2332   00040A  503D               	movf	(decide_color@rr+1)^0,w,c
  2333   00040C  E109               	bnz	u2910
  2334   00040E  0E65               	movlw	101
  2335   000410  5C3C               	subwf	decide_color@rr^0,w,c
  2336   000412  A0D8               	btfss	status,0,c
  2337   000414  EF0E  F002         	goto	u2911
  2338   000418  EF10  F002         	goto	u2910
  2339   00041C                     u2911:
  2340   00041C  EF45  F002         	goto	l3319
  2341   000420                     u2910:
  2342   000420  503F               	movf	(decide_color@br+1)^0,w,c
  2343   000422  E107               	bnz	u2921
  2344   000424  0E55               	movlw	85
  2345   000426  5C3E               	subwf	decide_color@br^0,w,c
  2346   000428  B0D8               	btfsc	status,0,c
  2347   00042A  EF19  F002         	goto	u2921
  2348   00042E  EF1B  F002         	goto	u2920
  2349   000432                     u2921:
  2350   000432  EF45  F002         	goto	l3319
  2351   000436                     u2920:
  2352   000436  503B               	movf	(decide_color@gr+1)^0,w,c
  2353   000438  E109               	bnz	u2930
  2354   00043A  0E56               	movlw	86
  2355   00043C  5C3A               	subwf	decide_color@gr^0,w,c
  2356   00043E  A0D8               	btfss	status,0,c
  2357   000440  EF24  F002         	goto	u2931
  2358   000444  EF26  F002         	goto	u2930
  2359   000448                     u2931:
  2360   000448  EF45  F002         	goto	l3319
  2361   00044C                     u2930:
  2362   00044C  EE20 F006          	lfsr	2,6
  2363   000450  5028               	movf	decide_color@mx^0,w,c
  2364   000452  26D9               	addwf	fsr2l,f,c
  2365   000454  5029               	movf	(decide_color@mx+1)^0,w,c
  2366   000456  22DA               	addwfc	fsr2h,f,c
  2367   000458  0E8B               	movlw	139
  2368   00045A  5CDE               	subwf	postinc2,w,c
  2369   00045C  0E02               	movlw	2
  2370   00045E  58DE               	subwfb	postinc2,w,c
  2371   000460  A0D8               	btfss	status,0,c
  2372   000462  EF35  F002         	goto	u2941
  2373   000466  EF37  F002         	goto	u2940
  2374   00046A                     u2941:
  2375   00046A  EF45  F002         	goto	l3319
  2376   00046E                     u2940:
  2377   00046E  503A               	movf	decide_color@gr^0,w,c
  2378   000470  5C3E               	subwf	decide_color@br^0,w,c
  2379   000472  503B               	movf	(decide_color@gr+1)^0,w,c
  2380   000474  583F               	subwfb	(decide_color@br+1)^0,w,c
  2381   000476  B0D8               	btfsc	status,0,c
  2382   000478  EF40  F002         	goto	u2951
  2383   00047C  EF42  F002         	goto	u2950
  2384   000480                     u2951:
  2385   000480  EF45  F002         	goto	l3319
  2386   000484                     u2950:
  2387   000484  0E05               	movlw	5
  2388   000486  EF68  F003         	goto	l446
  2389   00048A                     l3319:
  2390                           
  2391                           ;color.c: 126:     if ((100<rr && rr<120) & (br>80) & (gr<95) & (mx->clear<675)) {return
      +                           6;}
  2392   00048A  503D               	movf	(decide_color@rr+1)^0,w,c
  2393   00048C  E109               	bnz	u2960
  2394   00048E  0E65               	movlw	101
  2395   000490  5C3C               	subwf	decide_color@rr^0,w,c
  2396   000492  A0D8               	btfss	status,0,c
  2397   000494  EF4E  F002         	goto	u2961
  2398   000498  EF50  F002         	goto	u2960
  2399   00049C                     u2961:
  2400   00049C  EF85  F002         	goto	l3333
  2401   0004A0                     u2960:
  2402   0004A0  503D               	movf	(decide_color@rr+1)^0,w,c
  2403   0004A2  E107               	bnz	u2971
  2404   0004A4  0E78               	movlw	120
  2405   0004A6  5C3C               	subwf	decide_color@rr^0,w,c
  2406   0004A8  B0D8               	btfsc	status,0,c
  2407   0004AA  EF59  F002         	goto	u2971
  2408   0004AE  EF5B  F002         	goto	u2970
  2409   0004B2                     u2971:
  2410   0004B2  EF85  F002         	goto	l3333
  2411   0004B6                     u2970:
  2412   0004B6  503F               	movf	(decide_color@br+1)^0,w,c
  2413   0004B8  E109               	bnz	u2980
  2414   0004BA  0E51               	movlw	81
  2415   0004BC  5C3E               	subwf	decide_color@br^0,w,c
  2416   0004BE  A0D8               	btfss	status,0,c
  2417   0004C0  EF64  F002         	goto	u2981
  2418   0004C4  EF66  F002         	goto	u2980
  2419   0004C8                     u2981:
  2420   0004C8  EF85  F002         	goto	l3333
  2421   0004CC                     u2980:
  2422   0004CC  503B               	movf	(decide_color@gr+1)^0,w,c
  2423   0004CE  E107               	bnz	u2991
  2424   0004D0  0E5F               	movlw	95
  2425   0004D2  5C3A               	subwf	decide_color@gr^0,w,c
  2426   0004D4  B0D8               	btfsc	status,0,c
  2427   0004D6  EF6F  F002         	goto	u2991
  2428   0004DA  EF71  F002         	goto	u2990
  2429   0004DE                     u2991:
  2430   0004DE  EF85  F002         	goto	l3333
  2431   0004E2                     u2990:
  2432   0004E2  EE20 F006          	lfsr	2,6
  2433   0004E6  5028               	movf	decide_color@mx^0,w,c
  2434   0004E8  26D9               	addwf	fsr2l,f,c
  2435   0004EA  5029               	movf	(decide_color@mx+1)^0,w,c
  2436   0004EC  22DA               	addwfc	fsr2h,f,c
  2437   0004EE  0EA3               	movlw	163
  2438   0004F0  5CDE               	subwf	postinc2,w,c
  2439   0004F2  0E02               	movlw	2
  2440   0004F4  58DE               	subwfb	postinc2,w,c
  2441   0004F6  B0D8               	btfsc	status,0,c
  2442   0004F8  EF80  F002         	goto	u3001
  2443   0004FC  EF82  F002         	goto	u3000
  2444   000500                     u3001:
  2445   000500  EF85  F002         	goto	l3333
  2446   000504                     u3000:
  2447   000504  0E06               	movlw	6
  2448   000506  EF68  F003         	goto	l446
  2449   00050A                     l3333:
  2450                           
  2451                           ;color.c: 128:     if ((125<rr) & (br<85) & (gr<85) & (mx->clear > 400)) {return 7;}
  2452   00050A  503D               	movf	(decide_color@rr+1)^0,w,c
  2453   00050C  E109               	bnz	u3010
  2454   00050E  0E7E               	movlw	126
  2455   000510  5C3C               	subwf	decide_color@rr^0,w,c
  2456   000512  A0D8               	btfss	status,0,c
  2457   000514  EF8E  F002         	goto	u3011
  2458   000518  EF90  F002         	goto	u3010
  2459   00051C                     u3011:
  2460   00051C  EFBA  F002         	goto	l3345
  2461   000520                     u3010:
  2462   000520  503F               	movf	(decide_color@br+1)^0,w,c
  2463   000522  E107               	bnz	u3021
  2464   000524  0E55               	movlw	85
  2465   000526  5C3E               	subwf	decide_color@br^0,w,c
  2466   000528  B0D8               	btfsc	status,0,c
  2467   00052A  EF99  F002         	goto	u3021
  2468   00052E  EF9B  F002         	goto	u3020
  2469   000532                     u3021:
  2470   000532  EFBA  F002         	goto	l3345
  2471   000536                     u3020:
  2472   000536  503B               	movf	(decide_color@gr+1)^0,w,c
  2473   000538  E107               	bnz	u3031
  2474   00053A  0E55               	movlw	85
  2475   00053C  5C3A               	subwf	decide_color@gr^0,w,c
  2476   00053E  B0D8               	btfsc	status,0,c
  2477   000540  EFA4  F002         	goto	u3031
  2478   000544  EFA6  F002         	goto	u3030
  2479   000548                     u3031:
  2480   000548  EFBA  F002         	goto	l3345
  2481   00054C                     u3030:
  2482   00054C  EE20 F006          	lfsr	2,6
  2483   000550  5028               	movf	decide_color@mx^0,w,c
  2484   000552  26D9               	addwf	fsr2l,f,c
  2485   000554  5029               	movf	(decide_color@mx+1)^0,w,c
  2486   000556  22DA               	addwfc	fsr2h,f,c
  2487   000558  0E91               	movlw	145
  2488   00055A  5CDE               	subwf	postinc2,w,c
  2489   00055C  0E01               	movlw	1
  2490   00055E  58DE               	subwfb	postinc2,w,c
  2491   000560  A0D8               	btfss	status,0,c
  2492   000562  EFB5  F002         	goto	u3041
  2493   000566  EFB7  F002         	goto	u3040
  2494   00056A                     u3041:
  2495   00056A  EFBA  F002         	goto	l3345
  2496   00056E                     u3040:
  2497   00056E  0E07               	movlw	7
  2498   000570  EF68  F003         	goto	l446
  2499   000574                     l3345:
  2500                           
  2501                           ;color.c: 130:     if ((rr<90) & (100<br) & (110<gr) & (400<mx->clear && mx->clear<700))
      +                           {return 8;}
  2502   000574  503D               	movf	(decide_color@rr+1)^0,w,c
  2503   000576  E107               	bnz	u3051
  2504   000578  0E5A               	movlw	90
  2505   00057A  5C3C               	subwf	decide_color@rr^0,w,c
  2506   00057C  B0D8               	btfsc	status,0,c
  2507   00057E  EFC3  F002         	goto	u3051
  2508   000582  EFC5  F002         	goto	u3050
  2509   000586                     u3051:
  2510   000586  EF00  F003         	goto	l3359
  2511   00058A                     u3050:
  2512   00058A  503F               	movf	(decide_color@br+1)^0,w,c
  2513   00058C  E109               	bnz	u3060
  2514   00058E  0E65               	movlw	101
  2515   000590  5C3E               	subwf	decide_color@br^0,w,c
  2516   000592  A0D8               	btfss	status,0,c
  2517   000594  EFCE  F002         	goto	u3061
  2518   000598  EFD0  F002         	goto	u3060
  2519   00059C                     u3061:
  2520   00059C  EF00  F003         	goto	l3359
  2521   0005A0                     u3060:
  2522   0005A0  503B               	movf	(decide_color@gr+1)^0,w,c
  2523   0005A2  E109               	bnz	u3070
  2524   0005A4  0E6F               	movlw	111
  2525   0005A6  5C3A               	subwf	decide_color@gr^0,w,c
  2526   0005A8  A0D8               	btfss	status,0,c
  2527   0005AA  EFD9  F002         	goto	u3071
  2528   0005AE  EFDB  F002         	goto	u3070
  2529   0005B2                     u3071:
  2530   0005B2  EF00  F003         	goto	l3359
  2531   0005B6                     u3070:
  2532   0005B6  EE20 F006          	lfsr	2,6
  2533   0005BA  5028               	movf	decide_color@mx^0,w,c
  2534   0005BC  26D9               	addwf	fsr2l,f,c
  2535   0005BE  5029               	movf	(decide_color@mx+1)^0,w,c
  2536   0005C0  22DA               	addwfc	fsr2h,f,c
  2537   0005C2  0E91               	movlw	145
  2538   0005C4  5CDE               	subwf	postinc2,w,c
  2539   0005C6  0E01               	movlw	1
  2540   0005C8  58DE               	subwfb	postinc2,w,c
  2541   0005CA  A0D8               	btfss	status,0,c
  2542   0005CC  EFEA  F002         	goto	u3081
  2543   0005D0  EFEC  F002         	goto	u3080
  2544   0005D4                     u3081:
  2545   0005D4  EF00  F003         	goto	l3359
  2546   0005D8                     u3080:
  2547   0005D8  EE20 F006          	lfsr	2,6
  2548   0005DC  5028               	movf	decide_color@mx^0,w,c
  2549   0005DE  26D9               	addwf	fsr2l,f,c
  2550   0005E0  5029               	movf	(decide_color@mx+1)^0,w,c
  2551   0005E2  22DA               	addwfc	fsr2h,f,c
  2552   0005E4  0EBC               	movlw	188
  2553   0005E6  5CDE               	subwf	postinc2,w,c
  2554   0005E8  0E02               	movlw	2
  2555   0005EA  58DE               	subwfb	postinc2,w,c
  2556   0005EC  B0D8               	btfsc	status,0,c
  2557   0005EE  EFFB  F002         	goto	u3091
  2558   0005F2  EFFD  F002         	goto	u3090
  2559   0005F6                     u3091:
  2560   0005F6  EF00  F003         	goto	l3359
  2561   0005FA                     u3090:
  2562   0005FA  0E08               	movlw	8
  2563   0005FC  EF68  F003         	goto	l446
  2564   000600                     l3359:
  2565                           
  2566                           ;color.c: 132:     if ((82<rr && rr<107) & (82<br && br<107) & (82<gr && gr<107) & (700<
      +                          mx->clear && mx->clear<1200)) {return 9;}
  2567   000600  503D               	movf	(decide_color@rr+1)^0,w,c
  2568   000602  E109               	bnz	u3100
  2569   000604  0E53               	movlw	83
  2570   000606  5C3C               	subwf	decide_color@rr^0,w,c
  2571   000608  A0D8               	btfss	status,0,c
  2572   00060A  EF09  F003         	goto	u3101
  2573   00060E  EF0B  F003         	goto	u3100
  2574   000612                     u3101:
  2575   000612  EF67  F003         	goto	l3381
  2576   000616                     u3100:
  2577   000616  503D               	movf	(decide_color@rr+1)^0,w,c
  2578   000618  E107               	bnz	u3111
  2579   00061A  0E6B               	movlw	107
  2580   00061C  5C3C               	subwf	decide_color@rr^0,w,c
  2581   00061E  B0D8               	btfsc	status,0,c
  2582   000620  EF14  F003         	goto	u3111
  2583   000624  EF16  F003         	goto	u3110
  2584   000628                     u3111:
  2585   000628  EF67  F003         	goto	l3381
  2586   00062C                     u3110:
  2587   00062C  503F               	movf	(decide_color@br+1)^0,w,c
  2588   00062E  E109               	bnz	u3120
  2589   000630  0E53               	movlw	83
  2590   000632  5C3E               	subwf	decide_color@br^0,w,c
  2591   000634  A0D8               	btfss	status,0,c
  2592   000636  EF1F  F003         	goto	u3121
  2593   00063A  EF21  F003         	goto	u3120
  2594   00063E                     u3121:
  2595   00063E  EF67  F003         	goto	l3381
  2596   000642                     u3120:
  2597   000642  503F               	movf	(decide_color@br+1)^0,w,c
  2598   000644  E107               	bnz	u3131
  2599   000646  0E6B               	movlw	107
  2600   000648  5C3E               	subwf	decide_color@br^0,w,c
  2601   00064A  B0D8               	btfsc	status,0,c
  2602   00064C  EF2A  F003         	goto	u3131
  2603   000650  EF2C  F003         	goto	u3130
  2604   000654                     u3131:
  2605   000654  EF67  F003         	goto	l3381
  2606   000658                     u3130:
  2607   000658  503B               	movf	(decide_color@gr+1)^0,w,c
  2608   00065A  E109               	bnz	u3140
  2609   00065C  0E53               	movlw	83
  2610   00065E  5C3A               	subwf	decide_color@gr^0,w,c
  2611   000660  A0D8               	btfss	status,0,c
  2612   000662  EF35  F003         	goto	u3141
  2613   000666  EF37  F003         	goto	u3140
  2614   00066A                     u3141:
  2615   00066A  EF67  F003         	goto	l3381
  2616   00066E                     u3140:
  2617   00066E  503B               	movf	(decide_color@gr+1)^0,w,c
  2618   000670  E107               	bnz	u3151
  2619   000672  0E6B               	movlw	107
  2620   000674  5C3A               	subwf	decide_color@gr^0,w,c
  2621   000676  B0D8               	btfsc	status,0,c
  2622   000678  EF40  F003         	goto	u3151
  2623   00067C  EF42  F003         	goto	u3150
  2624   000680                     u3151:
  2625   000680  EF67  F003         	goto	l3381
  2626   000684                     u3150:
  2627   000684  EE20 F006          	lfsr	2,6
  2628   000688  5028               	movf	decide_color@mx^0,w,c
  2629   00068A  26D9               	addwf	fsr2l,f,c
  2630   00068C  5029               	movf	(decide_color@mx+1)^0,w,c
  2631   00068E  22DA               	addwfc	fsr2h,f,c
  2632   000690  0EBD               	movlw	189
  2633   000692  5CDE               	subwf	postinc2,w,c
  2634   000694  0E02               	movlw	2
  2635   000696  58DE               	subwfb	postinc2,w,c
  2636   000698  A0D8               	btfss	status,0,c
  2637   00069A  EF51  F003         	goto	u3161
  2638   00069E  EF53  F003         	goto	u3160
  2639   0006A2                     u3161:
  2640   0006A2  EF67  F003         	goto	l3381
  2641   0006A6                     u3160:
  2642   0006A6  EE20 F006          	lfsr	2,6
  2643   0006AA  5028               	movf	decide_color@mx^0,w,c
  2644   0006AC  26D9               	addwf	fsr2l,f,c
  2645   0006AE  5029               	movf	(decide_color@mx+1)^0,w,c
  2646   0006B0  22DA               	addwfc	fsr2h,f,c
  2647   0006B2  0EB0               	movlw	176
  2648   0006B4  5CDE               	subwf	postinc2,w,c
  2649   0006B6  0E04               	movlw	4
  2650   0006B8  58DE               	subwfb	postinc2,w,c
  2651   0006BA  B0D8               	btfsc	status,0,c
  2652   0006BC  EF62  F003         	goto	u3171
  2653   0006C0  EF64  F003         	goto	u3170
  2654   0006C4                     u3171:
  2655   0006C4  EF67  F003         	goto	l3381
  2656   0006C8                     u3170:
  2657   0006C8  0E09               	movlw	9
  2658   0006CA  EF68  F003         	goto	l446
  2659   0006CE                     l3381:
  2660   0006CE  0E0A               	movlw	10
  2661   0006D0                     l446:
  2662   0006D0  0012               	return		;funcret
  2663   0006D2                     __end_of_decide_color:
  2664                           	callstack 0
  2665                           
  2666 ;; *************** function ___xxtofl *****************
  2667 ;; Defined at:
  2668 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  2669 ;; Parameters:    Size  Location     Type
  2670 ;;  sign            1    wreg     unsigned char 
  2671 ;;  val             4    0[COMRAM] long 
  2672 ;; Auto vars:     Size  Location     Type
  2673 ;;  sign            1    8[COMRAM] unsigned char 
  2674 ;;  arg             4   10[COMRAM] unsigned long 
  2675 ;;  exp             1    9[COMRAM] unsigned char 
  2676 ;; Return value:  Size  Location     Type
  2677 ;;                  4    0[COMRAM] unsigned char 
  2678 ;; Registers used:
  2679 ;;		wreg, status,2, status,0
  2680 ;; Tracked objects:
  2681 ;;		On entry : 0/0
  2682 ;;		On exit  : 0/0
  2683 ;;		Unchanged: 0/0
  2684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2685 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2686 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2687 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2688 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2689 ;;Total ram usage:       14 bytes
  2690 ;; Hardware stack levels used: 1
  2691 ;; Hardware stack levels required when called: 2
  2692 ;; This function calls:
  2693 ;;		Nothing
  2694 ;; This function is called by:
  2695 ;;		_decide_color
  2696 ;; This function uses a non-reentrant model
  2697 ;;
  2698                           
  2699                           	psect	text4
  2700   0016BC                     __ptext4:
  2701                           	callstack 0
  2702   0016BC                     ___xxtofl:
  2703                           	callstack 27
  2704                           
  2705                           ;incstack = 0
  2706                           ;___xxtofl@sign stored from wreg
  2707   0016BC  6E09               	movwf	___xxtofl@sign^0,c
  2708   0016BE  5009               	movf	___xxtofl@sign^0,w,c
  2709   0016C0  B4D8               	btfsc	status,2,c
  2710   0016C2  EF65  F00B         	goto	u2551
  2711   0016C6  EF67  F00B         	goto	u2550
  2712   0016CA                     u2551:
  2713   0016CA  EF89  F00B         	goto	l1133
  2714   0016CE                     u2550:
  2715   0016CE  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  2716   0016D0  EF6E  F00B         	goto	u2560
  2717   0016D4  EF6C  F00B         	goto	u2561
  2718   0016D8                     u2561:
  2719   0016D8  EF89  F00B         	goto	l1133
  2720   0016DC                     u2560:
  2721   0016DC  C001  F005         	movff	___xxtofl@val,??___xxtofl
  2722   0016E0  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  2723   0016E4  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  2724   0016E8  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  2725   0016EC  1E05               	comf	??___xxtofl^0,f,c
  2726   0016EE  1E06               	comf	(??___xxtofl+1)^0,f,c
  2727   0016F0  1E07               	comf	(??___xxtofl+2)^0,f,c
  2728   0016F2  1E08               	comf	(??___xxtofl+3)^0,f,c
  2729   0016F4  2A05               	incf	??___xxtofl^0,f,c
  2730   0016F6  0E00               	movlw	0
  2731   0016F8  2206               	addwfc	(??___xxtofl+1)^0,f,c
  2732   0016FA  2207               	addwfc	(??___xxtofl+2)^0,f,c
  2733   0016FC  2208               	addwfc	(??___xxtofl+3)^0,f,c
  2734   0016FE  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  2735   001702  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  2736   001706  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  2737   00170A  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  2738   00170E  EF91  F00B         	goto	l3053
  2739   001712                     l1133:
  2740   001712  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  2741   001716  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2742   00171A  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2743   00171E  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2744   001722                     l3053:
  2745   001722  5001               	movf	___xxtofl@val^0,w,c
  2746   001724  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  2747   001726  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  2748   001728  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  2749   00172A  A4D8               	btfss	status,2,c
  2750   00172C  EF9A  F00B         	goto	u2571
  2751   001730  EF9C  F00B         	goto	u2570
  2752   001734                     u2571:
  2753   001734  EFA6  F00B         	goto	l3059
  2754   001738                     u2570:
  2755   001738  0E00               	movlw	0
  2756   00173A  6E01               	movwf	?___xxtofl^0,c
  2757   00173C  0E00               	movlw	0
  2758   00173E  6E02               	movwf	(?___xxtofl+1)^0,c
  2759   001740  0E00               	movlw	0
  2760   001742  6E03               	movwf	(?___xxtofl+2)^0,c
  2761   001744  0E00               	movlw	0
  2762   001746  6E04               	movwf	(?___xxtofl+3)^0,c
  2763   001748  EF37  F00C         	goto	l1136
  2764   00174C                     l3059:
  2765   00174C  0E96               	movlw	150
  2766   00174E  6E0A               	movwf	___xxtofl@exp^0,c
  2767   001750  EFB0  F00B         	goto	l3063
  2768   001754                     l3061:
  2769   001754  2A0A               	incf	___xxtofl@exp^0,f,c
  2770   001756  90D8               	bcf	status,0,c
  2771   001758  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  2772   00175A  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  2773   00175C  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  2774   00175E  320B               	rrcf	___xxtofl@arg^0,f,c
  2775   001760                     l3063:
  2776   001760  0E00               	movlw	0
  2777   001762  140B               	andwf	___xxtofl@arg^0,w,c
  2778   001764  6E05               	movwf	??___xxtofl^0,c
  2779   001766  0E00               	movlw	0
  2780   001768  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  2781   00176A  6E06               	movwf	(??___xxtofl+1)^0,c
  2782   00176C  0E00               	movlw	0
  2783   00176E  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  2784   001770  6E07               	movwf	(??___xxtofl+2)^0,c
  2785   001772  0EFE               	movlw	254
  2786   001774  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  2787   001776  6E08               	movwf	(??___xxtofl+3)^0,c
  2788   001778  5005               	movf	??___xxtofl^0,w,c
  2789   00177A  1006               	iorwf	(??___xxtofl+1)^0,w,c
  2790   00177C  1007               	iorwf	(??___xxtofl+2)^0,w,c
  2791   00177E  1008               	iorwf	(??___xxtofl+3)^0,w,c
  2792   001780  A4D8               	btfss	status,2,c
  2793   001782  EFC5  F00B         	goto	u2581
  2794   001786  EFC7  F00B         	goto	u2580
  2795   00178A                     u2581:
  2796   00178A  EFAA  F00B         	goto	l3061
  2797   00178E                     u2580:
  2798   00178E  EFD5  F00B         	goto	l1140
  2799   001792                     l3065:
  2800   001792  2A0A               	incf	___xxtofl@exp^0,f,c
  2801   001794  0E01               	movlw	1
  2802   001796  260B               	addwf	___xxtofl@arg^0,f,c
  2803   001798  0E00               	movlw	0
  2804   00179A  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  2805   00179C  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  2806   00179E  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  2807   0017A0  90D8               	bcf	status,0,c
  2808   0017A2  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  2809   0017A4  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  2810   0017A6  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  2811   0017A8  320B               	rrcf	___xxtofl@arg^0,f,c
  2812   0017AA                     l1140:
  2813   0017AA  0E00               	movlw	0
  2814   0017AC  140B               	andwf	___xxtofl@arg^0,w,c
  2815   0017AE  6E05               	movwf	??___xxtofl^0,c
  2816   0017B0  0E00               	movlw	0
  2817   0017B2  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  2818   0017B4  6E06               	movwf	(??___xxtofl+1)^0,c
  2819   0017B6  0E00               	movlw	0
  2820   0017B8  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  2821   0017BA  6E07               	movwf	(??___xxtofl+2)^0,c
  2822   0017BC  0EFF               	movlw	255
  2823   0017BE  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  2824   0017C0  6E08               	movwf	(??___xxtofl+3)^0,c
  2825   0017C2  5005               	movf	??___xxtofl^0,w,c
  2826   0017C4  1006               	iorwf	(??___xxtofl+1)^0,w,c
  2827   0017C6  1007               	iorwf	(??___xxtofl+2)^0,w,c
  2828   0017C8  1008               	iorwf	(??___xxtofl+3)^0,w,c
  2829   0017CA  A4D8               	btfss	status,2,c
  2830   0017CC  EFEA  F00B         	goto	u2591
  2831   0017D0  EFEC  F00B         	goto	u2590
  2832   0017D4                     u2591:
  2833   0017D4  EFC9  F00B         	goto	l3065
  2834   0017D8                     u2590:
  2835   0017D8  EFF4  F00B         	goto	l3073
  2836   0017DC                     l3071:
  2837   0017DC  060A               	decf	___xxtofl@exp^0,f,c
  2838   0017DE  90D8               	bcf	status,0,c
  2839   0017E0  360B               	rlcf	___xxtofl@arg^0,f,c
  2840   0017E2  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  2841   0017E4  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  2842   0017E6  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  2843   0017E8                     l3073:
  2844   0017E8  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  2845   0017EA  EFF9  F00B         	goto	u2601
  2846   0017EE  EFFB  F00B         	goto	u2600
  2847   0017F2                     u2601:
  2848   0017F2  EF03  F00C         	goto	l1147
  2849   0017F6                     u2600:
  2850   0017F6  0E02               	movlw	2
  2851   0017F8  600A               	cpfslt	___xxtofl@exp^0,c
  2852   0017FA  EF01  F00C         	goto	u2611
  2853   0017FE  EF03  F00C         	goto	u2610
  2854   001802                     u2611:
  2855   001802  EFEE  F00B         	goto	l3071
  2856   001806                     u2610:
  2857   001806                     l1147:
  2858   001806  B00A               	btfsc	___xxtofl@exp^0,0,c
  2859   001808  EF08  F00C         	goto	u2621
  2860   00180C  EF0A  F00C         	goto	u2620
  2861   001810                     u2621:
  2862   001810  EF0B  F00C         	goto	l3079
  2863   001814                     u2620:
  2864   001814  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  2865   001816                     l3079:
  2866   001816  90D8               	bcf	status,0,c
  2867   001818  320A               	rrcf	___xxtofl@exp^0,f,c
  2868   00181A  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  2869   00181E  6A06               	clrf	(??___xxtofl+1)^0,c
  2870   001820  6A07               	clrf	(??___xxtofl+2)^0,c
  2871   001822  6A08               	clrf	(??___xxtofl+3)^0,c
  2872   001824  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  2873   001828  6A07               	clrf	(??___xxtofl+2)^0,c
  2874   00182A  6A06               	clrf	(??___xxtofl+1)^0,c
  2875   00182C  6A05               	clrf	??___xxtofl^0,c
  2876   00182E  5005               	movf	??___xxtofl^0,w,c
  2877   001830  120B               	iorwf	___xxtofl@arg^0,f,c
  2878   001832  5006               	movf	(??___xxtofl+1)^0,w,c
  2879   001834  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  2880   001836  5007               	movf	(??___xxtofl+2)^0,w,c
  2881   001838  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  2882   00183A  5008               	movf	(??___xxtofl+3)^0,w,c
  2883   00183C  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  2884   00183E  5009               	movf	___xxtofl@sign^0,w,c
  2885   001840  B4D8               	btfsc	status,2,c
  2886   001842  EF25  F00C         	goto	u2631
  2887   001846  EF27  F00C         	goto	u2630
  2888   00184A                     u2631:
  2889   00184A  EF2F  F00C         	goto	l3089
  2890   00184E                     u2630:
  2891   00184E  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  2892   001850  EF2E  F00C         	goto	u2640
  2893   001854  EF2C  F00C         	goto	u2641
  2894   001858                     u2641:
  2895   001858  EF2F  F00C         	goto	l3089
  2896   00185C                     u2640:
  2897   00185C  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  2898   00185E                     l3089:
  2899   00185E  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  2900   001862  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  2901   001866  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  2902   00186A  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  2903   00186E                     l1136:
  2904   00186E  0012               	return		;funcret
  2905   001870                     __end_of___xxtofl:
  2906                           	callstack 0
  2907                           
  2908 ;; *************** function ___fltol *****************
  2909 ;; Defined at:
  2910 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  2911 ;; Parameters:    Size  Location     Type
  2912 ;;  f1              4   25[COMRAM] unsigned char 
  2913 ;; Auto vars:     Size  Location     Type
  2914 ;;  exp1            1   34[COMRAM] unsigned char 
  2915 ;;  sign1           1   33[COMRAM] unsigned char 
  2916 ;; Return value:  Size  Location     Type
  2917 ;;                  4   25[COMRAM] long 
  2918 ;; Registers used:
  2919 ;;		wreg, status,2, status,0
  2920 ;; Tracked objects:
  2921 ;;		On entry : 0/0
  2922 ;;		On exit  : 0/0
  2923 ;;		Unchanged: 0/0
  2924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2925 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2926 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2927 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2928 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2929 ;;Total ram usage:       10 bytes
  2930 ;; Hardware stack levels used: 1
  2931 ;; Hardware stack levels required when called: 2
  2932 ;; This function calls:
  2933 ;;		Nothing
  2934 ;; This function is called by:
  2935 ;;		_decide_color
  2936 ;; This function uses a non-reentrant model
  2937 ;;
  2938                           
  2939                           	psect	text5
  2940   001B1A                     __ptext5:
  2941                           	callstack 0
  2942   001B1A                     ___fltol:
  2943                           	callstack 27
  2944   001B1A  341C               	rlcf	(___fltol@f1+2)^0,w,c
  2945   001B1C  341D               	rlcf	(___fltol@f1+3)^0,w,c
  2946   001B1E  6E23               	movwf	___fltol@exp1^0,c
  2947   001B20  5023               	movf	___fltol@exp1^0,w,c
  2948   001B22  A4D8               	btfss	status,2,c
  2949   001B24  EF96  F00D         	goto	u2481
  2950   001B28  EF98  F00D         	goto	u2480
  2951   001B2C                     u2481:
  2952   001B2C  EFA2  F00D         	goto	l3009
  2953   001B30                     u2480:
  2954   001B30                     l3005:
  2955   001B30  0E00               	movlw	0
  2956   001B32  6E1A               	movwf	?___fltol^0,c
  2957   001B34  0E00               	movlw	0
  2958   001B36  6E1B               	movwf	(?___fltol+1)^0,c
  2959   001B38  0E00               	movlw	0
  2960   001B3A  6E1C               	movwf	(?___fltol+2)^0,c
  2961   001B3C  0E00               	movlw	0
  2962   001B3E  6E1D               	movwf	(?___fltol+3)^0,c
  2963   001B40  EF0F  F00E         	goto	l775
  2964   001B44                     l3009:
  2965   001B44  C01A  F01E         	movff	___fltol@f1,??___fltol
  2966   001B48  C01B  F01F         	movff	___fltol@f1+1,??___fltol+1
  2967   001B4C  C01C  F020         	movff	___fltol@f1+2,??___fltol+2
  2968   001B50  C01D  F021         	movff	___fltol@f1+3,??___fltol+3
  2969   001B54  0E20               	movlw	32
  2970   001B56  EFB2  F00D         	goto	u2490
  2971   001B5A                     u2495:
  2972   001B5A  90D8               	bcf	status,0,c
  2973   001B5C  3221               	rrcf	(??___fltol+3)^0,f,c
  2974   001B5E  3220               	rrcf	(??___fltol+2)^0,f,c
  2975   001B60  321F               	rrcf	(??___fltol+1)^0,f,c
  2976   001B62  321E               	rrcf	??___fltol^0,f,c
  2977   001B64                     u2490:
  2978   001B64  2EE8               	decfsz	wreg,f,c
  2979   001B66  EFAD  F00D         	goto	u2495
  2980   001B6A  501E               	movf	??___fltol^0,w,c
  2981   001B6C  6E22               	movwf	___fltol@sign1^0,c
  2982   001B6E  8E1C               	bsf	(___fltol@f1+2)^0,7,c
  2983   001B70  0EFF               	movlw	255
  2984   001B72  161A               	andwf	___fltol@f1^0,f,c
  2985   001B74  0EFF               	movlw	255
  2986   001B76  161B               	andwf	(___fltol@f1+1)^0,f,c
  2987   001B78  0EFF               	movlw	255
  2988   001B7A  161C               	andwf	(___fltol@f1+2)^0,f,c
  2989   001B7C  0E00               	movlw	0
  2990   001B7E  161D               	andwf	(___fltol@f1+3)^0,f,c
  2991   001B80  0E96               	movlw	150
  2992   001B82  5E23               	subwf	___fltol@exp1^0,f,c
  2993   001B84  BE23               	btfsc	___fltol@exp1^0,7,c
  2994   001B86  EFC9  F00D         	goto	u2500
  2995   001B8A  EFC7  F00D         	goto	u2501
  2996   001B8E                     u2501:
  2997   001B8E  EFDF  F00D         	goto	l3029
  2998   001B92                     u2500:
  2999   001B92  5023               	movf	___fltol@exp1^0,w,c
  3000   001B94  0A80               	xorlw	128
  3001   001B96  0F97               	addlw	151
  3002   001B98  B0D8               	btfsc	status,0,c
  3003   001B9A  EFD1  F00D         	goto	u2511
  3004   001B9E  EFD3  F00D         	goto	u2510
  3005   001BA2                     u2511:
  3006   001BA2  EFD5  F00D         	goto	l3025
  3007   001BA6                     u2510:
  3008   001BA6  EF98  F00D         	goto	l3005
  3009   001BAA                     l3025:
  3010   001BAA  90D8               	bcf	status,0,c
  3011   001BAC  321D               	rrcf	(___fltol@f1+3)^0,f,c
  3012   001BAE  321C               	rrcf	(___fltol@f1+2)^0,f,c
  3013   001BB0  321B               	rrcf	(___fltol@f1+1)^0,f,c
  3014   001BB2  321A               	rrcf	___fltol@f1^0,f,c
  3015   001BB4  3E23               	incfsz	___fltol@exp1^0,f,c
  3016   001BB6  EFD5  F00D         	goto	l3025
  3017   001BBA  EFF7  F00D         	goto	l3039
  3018   001BBE                     l3029:
  3019   001BBE  0E1F               	movlw	31
  3020   001BC0  6423               	cpfsgt	___fltol@exp1^0,c
  3021   001BC2  EFE5  F00D         	goto	u2521
  3022   001BC6  EFE7  F00D         	goto	u2520
  3023   001BCA                     u2521:
  3024   001BCA  EFEF  F00D         	goto	l3037
  3025   001BCE                     u2520:
  3026   001BCE  EF98  F00D         	goto	l3005
  3027   001BD2                     l3035:
  3028   001BD2  90D8               	bcf	status,0,c
  3029   001BD4  361A               	rlcf	___fltol@f1^0,f,c
  3030   001BD6  361B               	rlcf	(___fltol@f1+1)^0,f,c
  3031   001BD8  361C               	rlcf	(___fltol@f1+2)^0,f,c
  3032   001BDA  361D               	rlcf	(___fltol@f1+3)^0,f,c
  3033   001BDC  0623               	decf	___fltol@exp1^0,f,c
  3034   001BDE                     l3037:
  3035   001BDE  5023               	movf	___fltol@exp1^0,w,c
  3036   001BE0  A4D8               	btfss	status,2,c
  3037   001BE2  EFF5  F00D         	goto	u2531
  3038   001BE6  EFF7  F00D         	goto	u2530
  3039   001BEA                     u2531:
  3040   001BEA  EFE9  F00D         	goto	l3035
  3041   001BEE                     u2530:
  3042   001BEE                     l3039:
  3043   001BEE  5022               	movf	___fltol@sign1^0,w,c
  3044   001BF0  B4D8               	btfsc	status,2,c
  3045   001BF2  EFFD  F00D         	goto	u2541
  3046   001BF6  EFFF  F00D         	goto	u2540
  3047   001BFA                     u2541:
  3048   001BFA  EF07  F00E         	goto	l3043
  3049   001BFE                     u2540:
  3050   001BFE  1E1D               	comf	(___fltol@f1+3)^0,f,c
  3051   001C00  1E1C               	comf	(___fltol@f1+2)^0,f,c
  3052   001C02  1E1B               	comf	(___fltol@f1+1)^0,f,c
  3053   001C04  6C1A               	negf	___fltol@f1^0,c
  3054   001C06  0E00               	movlw	0
  3055   001C08  221B               	addwfc	(___fltol@f1+1)^0,f,c
  3056   001C0A  221C               	addwfc	(___fltol@f1+2)^0,f,c
  3057   001C0C  221D               	addwfc	(___fltol@f1+3)^0,f,c
  3058   001C0E                     l3043:
  3059   001C0E  C01A  F01A         	movff	___fltol@f1,?___fltol
  3060   001C12  C01B  F01B         	movff	___fltol@f1+1,?___fltol+1
  3061   001C16  C01C  F01C         	movff	___fltol@f1+2,?___fltol+2
  3062   001C1A  C01D  F01D         	movff	___fltol@f1+3,?___fltol+3
  3063   001C1E                     l775:
  3064   001C1E  0012               	return		;funcret
  3065   001C20                     __end_of___fltol:
  3066                           	callstack 0
  3067                           
  3068 ;; *************** function ___flmul *****************
  3069 ;; Defined at:
  3070 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  3071 ;; Parameters:    Size  Location     Type
  3072 ;;  b               4    0[COMRAM] long 
  3073 ;;  a               4    4[COMRAM] long 
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;  prod            4   19[COMRAM] struct .
  3076 ;;  grs             4   13[COMRAM] unsigned long 
  3077 ;;  temp            2   23[COMRAM] struct .
  3078 ;;  bexp            1   18[COMRAM] unsigned char 
  3079 ;;  aexp            1   17[COMRAM] unsigned char 
  3080 ;;  sign            1   12[COMRAM] unsigned char 
  3081 ;; Return value:  Size  Location     Type
  3082 ;;                  4    0[COMRAM] unsigned char 
  3083 ;; Registers used:
  3084 ;;		wreg, status,2, status,0, prodl, prodh
  3085 ;; Tracked objects:
  3086 ;;		On entry : 0/0
  3087 ;;		On exit  : 0/0
  3088 ;;		Unchanged: 0/0
  3089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3090 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3091 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3092 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3093 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3094 ;;Total ram usage:       25 bytes
  3095 ;; Hardware stack levels used: 1
  3096 ;; Hardware stack levels required when called: 2
  3097 ;; This function calls:
  3098 ;;		Nothing
  3099 ;; This function is called by:
  3100 ;;		_decide_color
  3101 ;; This function uses a non-reentrant model
  3102 ;;
  3103                           
  3104                           	psect	text6
  3105   000D1E                     __ptext6:
  3106                           	callstack 0
  3107   000D1E                     ___flmul:
  3108                           	callstack 27
  3109   000D1E  5004               	movf	(___flmul@b+3)^0,w,c
  3110   000D20  0B80               	andlw	128
  3111   000D22  6E0D               	movwf	___flmul@sign^0,c
  3112   000D24  5004               	movf	(___flmul@b+3)^0,w,c
  3113   000D26  2404               	addwf	(___flmul@b+3)^0,w,c
  3114   000D28  6E13               	movwf	___flmul@bexp^0,c
  3115   000D2A  AE03               	btfss	(___flmul@b+2)^0,7,c
  3116   000D2C  EF9A  F006         	goto	u2291
  3117   000D30  EF9C  F006         	goto	u2290
  3118   000D34                     u2291:
  3119   000D34  EF9D  F006         	goto	l2879
  3120   000D38                     u2290:
  3121   000D38  8013               	bsf	___flmul@bexp^0,0,c
  3122   000D3A                     l2879:
  3123   000D3A  5013               	movf	___flmul@bexp^0,w,c
  3124   000D3C  B4D8               	btfsc	status,2,c
  3125   000D3E  EFA3  F006         	goto	u2301
  3126   000D42  EFA5  F006         	goto	u2300
  3127   000D46                     u2301:
  3128   000D46  EFB8  F006         	goto	l2887
  3129   000D4A                     u2300:
  3130   000D4A  2813               	incf	___flmul@bexp^0,w,c
  3131   000D4C  A4D8               	btfss	status,2,c
  3132   000D4E  EFAB  F006         	goto	u2311
  3133   000D52  EFAD  F006         	goto	u2310
  3134   000D56                     u2311:
  3135   000D56  EFB5  F006         	goto	l2885
  3136   000D5A                     u2310:
  3137   000D5A  0E00               	movlw	0
  3138   000D5C  6E01               	movwf	___flmul@b^0,c
  3139   000D5E  0E00               	movlw	0
  3140   000D60  6E02               	movwf	(___flmul@b+1)^0,c
  3141   000D62  0E00               	movlw	0
  3142   000D64  6E03               	movwf	(___flmul@b+2)^0,c
  3143   000D66  0E00               	movlw	0
  3144   000D68  6E04               	movwf	(___flmul@b+3)^0,c
  3145   000D6A                     l2885:
  3146   000D6A  8E03               	bsf	(___flmul@b+2)^0,7,c
  3147   000D6C  EFC0  F006         	goto	l2889
  3148   000D70                     l2887:
  3149   000D70  0E00               	movlw	0
  3150   000D72  6E01               	movwf	___flmul@b^0,c
  3151   000D74  0E00               	movlw	0
  3152   000D76  6E02               	movwf	(___flmul@b+1)^0,c
  3153   000D78  0E00               	movlw	0
  3154   000D7A  6E03               	movwf	(___flmul@b+2)^0,c
  3155   000D7C  0E00               	movlw	0
  3156   000D7E  6E04               	movwf	(___flmul@b+3)^0,c
  3157   000D80                     l2889:
  3158   000D80  5008               	movf	(___flmul@a+3)^0,w,c
  3159   000D82  0B80               	andlw	128
  3160   000D84  1A0D               	xorwf	___flmul@sign^0,f,c
  3161   000D86  5008               	movf	(___flmul@a+3)^0,w,c
  3162   000D88  2408               	addwf	(___flmul@a+3)^0,w,c
  3163   000D8A  6E12               	movwf	___flmul@aexp^0,c
  3164   000D8C  AE07               	btfss	(___flmul@a+2)^0,7,c
  3165   000D8E  EFCB  F006         	goto	u2321
  3166   000D92  EFCD  F006         	goto	u2320
  3167   000D96                     u2321:
  3168   000D96  EFCE  F006         	goto	l2897
  3169   000D9A                     u2320:
  3170   000D9A  8012               	bsf	___flmul@aexp^0,0,c
  3171   000D9C                     l2897:
  3172   000D9C  5012               	movf	___flmul@aexp^0,w,c
  3173   000D9E  B4D8               	btfsc	status,2,c
  3174   000DA0  EFD4  F006         	goto	u2331
  3175   000DA4  EFD6  F006         	goto	u2330
  3176   000DA8                     u2331:
  3177   000DA8  EFE9  F006         	goto	l2905
  3178   000DAC                     u2330:
  3179   000DAC  2812               	incf	___flmul@aexp^0,w,c
  3180   000DAE  A4D8               	btfss	status,2,c
  3181   000DB0  EFDC  F006         	goto	u2341
  3182   000DB4  EFDE  F006         	goto	u2340
  3183   000DB8                     u2341:
  3184   000DB8  EFE6  F006         	goto	l2903
  3185   000DBC                     u2340:
  3186   000DBC  0E00               	movlw	0
  3187   000DBE  6E05               	movwf	___flmul@a^0,c
  3188   000DC0  0E00               	movlw	0
  3189   000DC2  6E06               	movwf	(___flmul@a+1)^0,c
  3190   000DC4  0E00               	movlw	0
  3191   000DC6  6E07               	movwf	(___flmul@a+2)^0,c
  3192   000DC8  0E00               	movlw	0
  3193   000DCA  6E08               	movwf	(___flmul@a+3)^0,c
  3194   000DCC                     l2903:
  3195   000DCC  8E07               	bsf	(___flmul@a+2)^0,7,c
  3196   000DCE  EFF1  F006         	goto	l1092
  3197   000DD2                     l2905:
  3198   000DD2  0E00               	movlw	0
  3199   000DD4  6E05               	movwf	___flmul@a^0,c
  3200   000DD6  0E00               	movlw	0
  3201   000DD8  6E06               	movwf	(___flmul@a+1)^0,c
  3202   000DDA  0E00               	movlw	0
  3203   000DDC  6E07               	movwf	(___flmul@a+2)^0,c
  3204   000DDE  0E00               	movlw	0
  3205   000DE0  6E08               	movwf	(___flmul@a+3)^0,c
  3206   000DE2                     l1092:
  3207   000DE2  5012               	movf	___flmul@aexp^0,w,c
  3208   000DE4  B4D8               	btfsc	status,2,c
  3209   000DE6  EFF7  F006         	goto	u2351
  3210   000DEA  EFF9  F006         	goto	u2350
  3211   000DEE                     u2351:
  3212   000DEE  EF01  F007         	goto	l2909
  3213   000DF2                     u2350:
  3214   000DF2  5013               	movf	___flmul@bexp^0,w,c
  3215   000DF4  A4D8               	btfss	status,2,c
  3216   000DF6  EFFF  F006         	goto	u2361
  3217   000DFA  EF01  F007         	goto	u2360
  3218   000DFE                     u2361:
  3219   000DFE  EF0B  F007         	goto	l2913
  3220   000E02                     u2360:
  3221   000E02                     l2909:
  3222   000E02  0E00               	movlw	0
  3223   000E04  6E01               	movwf	?___flmul^0,c
  3224   000E06  0E00               	movlw	0
  3225   000E08  6E02               	movwf	(?___flmul+1)^0,c
  3226   000E0A  0E00               	movlw	0
  3227   000E0C  6E03               	movwf	(?___flmul+2)^0,c
  3228   000E0E  0E00               	movlw	0
  3229   000E10  6E04               	movwf	(?___flmul+3)^0,c
  3230   000E12  EFA3  F008         	goto	l1096
  3231   000E16                     l2913:
  3232   000E16  5007               	movf	(___flmul@a+2)^0,w,c
  3233   000E18  0201               	mulwf	___flmul@b^0,c
  3234   000E1A  CFF3 F018          	movff	prodl,___flmul@temp
  3235   000E1E  CFF4 F019          	movff	prodh,___flmul@temp+1
  3236   000E22  5018               	movf	___flmul@temp^0,w,c
  3237   000E24  6E0E               	movwf	___flmul@grs^0,c
  3238   000E26  6A0F               	clrf	(___flmul@grs+1)^0,c
  3239   000E28  6A10               	clrf	(___flmul@grs+2)^0,c
  3240   000E2A  6A11               	clrf	(___flmul@grs+3)^0,c
  3241   000E2C  5019               	movf	(___flmul@temp+1)^0,w,c
  3242   000E2E  6E14               	movwf	___flmul@prod^0,c
  3243   000E30  6A15               	clrf	(___flmul@prod+1)^0,c
  3244   000E32  6A16               	clrf	(___flmul@prod+2)^0,c
  3245   000E34  6A17               	clrf	(___flmul@prod+3)^0,c
  3246   000E36  5006               	movf	(___flmul@a+1)^0,w,c
  3247   000E38  0202               	mulwf	(___flmul@b+1)^0,c
  3248   000E3A  CFF3 F018          	movff	prodl,___flmul@temp
  3249   000E3E  CFF4 F019          	movff	prodh,___flmul@temp+1
  3250   000E42  5018               	movf	___flmul@temp^0,w,c
  3251   000E44  260E               	addwf	___flmul@grs^0,f,c
  3252   000E46  0E00               	movlw	0
  3253   000E48  220F               	addwfc	(___flmul@grs+1)^0,f,c
  3254   000E4A  2210               	addwfc	(___flmul@grs+2)^0,f,c
  3255   000E4C  2211               	addwfc	(___flmul@grs+3)^0,f,c
  3256   000E4E  5019               	movf	(___flmul@temp+1)^0,w,c
  3257   000E50  2614               	addwf	___flmul@prod^0,f,c
  3258   000E52  0E00               	movlw	0
  3259   000E54  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3260   000E56  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3261   000E58  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3262   000E5A  5005               	movf	___flmul@a^0,w,c
  3263   000E5C  0203               	mulwf	(___flmul@b+2)^0,c
  3264   000E5E  CFF3 F018          	movff	prodl,___flmul@temp
  3265   000E62  CFF4 F019          	movff	prodh,___flmul@temp+1
  3266   000E66  5018               	movf	___flmul@temp^0,w,c
  3267   000E68  260E               	addwf	___flmul@grs^0,f,c
  3268   000E6A  0E00               	movlw	0
  3269   000E6C  220F               	addwfc	(___flmul@grs+1)^0,f,c
  3270   000E6E  2210               	addwfc	(___flmul@grs+2)^0,f,c
  3271   000E70  2211               	addwfc	(___flmul@grs+3)^0,f,c
  3272   000E72  5019               	movf	(___flmul@temp+1)^0,w,c
  3273   000E74  2614               	addwf	___flmul@prod^0,f,c
  3274   000E76  0E00               	movlw	0
  3275   000E78  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3276   000E7A  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3277   000E7C  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3278   000E7E  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  3279   000E82  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  3280   000E86  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  3281   000E8A  6A0E               	clrf	___flmul@grs^0,c
  3282   000E8C  5005               	movf	___flmul@a^0,w,c
  3283   000E8E  0202               	mulwf	(___flmul@b+1)^0,c
  3284   000E90  CFF3 F018          	movff	prodl,___flmul@temp
  3285   000E94  CFF4 F019          	movff	prodh,___flmul@temp+1
  3286   000E98  5018               	movf	___flmul@temp^0,w,c
  3287   000E9A  260E               	addwf	___flmul@grs^0,f,c
  3288   000E9C  5019               	movf	(___flmul@temp+1)^0,w,c
  3289   000E9E  220F               	addwfc	(___flmul@grs+1)^0,f,c
  3290   000EA0  0E00               	movlw	0
  3291   000EA2  2210               	addwfc	(___flmul@grs+2)^0,f,c
  3292   000EA4  0E00               	movlw	0
  3293   000EA6  2211               	addwfc	(___flmul@grs+3)^0,f,c
  3294   000EA8  5006               	movf	(___flmul@a+1)^0,w,c
  3295   000EAA  0201               	mulwf	___flmul@b^0,c
  3296   000EAC  CFF3 F018          	movff	prodl,___flmul@temp
  3297   000EB0  CFF4 F019          	movff	prodh,___flmul@temp+1
  3298   000EB4  5018               	movf	___flmul@temp^0,w,c
  3299   000EB6  260E               	addwf	___flmul@grs^0,f,c
  3300   000EB8  5019               	movf	(___flmul@temp+1)^0,w,c
  3301   000EBA  220F               	addwfc	(___flmul@grs+1)^0,f,c
  3302   000EBC  0E00               	movlw	0
  3303   000EBE  2210               	addwfc	(___flmul@grs+2)^0,f,c
  3304   000EC0  0E00               	movlw	0
  3305   000EC2  2211               	addwfc	(___flmul@grs+3)^0,f,c
  3306   000EC4  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  3307   000EC8  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  3308   000ECC  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  3309   000ED0  6A0E               	clrf	___flmul@grs^0,c
  3310   000ED2  5005               	movf	___flmul@a^0,w,c
  3311   000ED4  0201               	mulwf	___flmul@b^0,c
  3312   000ED6  CFF3 F018          	movff	prodl,___flmul@temp
  3313   000EDA  CFF4 F019          	movff	prodh,___flmul@temp+1
  3314   000EDE  5018               	movf	___flmul@temp^0,w,c
  3315   000EE0  260E               	addwf	___flmul@grs^0,f,c
  3316   000EE2  5019               	movf	(___flmul@temp+1)^0,w,c
  3317   000EE4  220F               	addwfc	(___flmul@grs+1)^0,f,c
  3318   000EE6  0E00               	movlw	0
  3319   000EE8  2210               	addwfc	(___flmul@grs+2)^0,f,c
  3320   000EEA  0E00               	movlw	0
  3321   000EEC  2211               	addwfc	(___flmul@grs+3)^0,f,c
  3322   000EEE  5007               	movf	(___flmul@a+2)^0,w,c
  3323   000EF0  0202               	mulwf	(___flmul@b+1)^0,c
  3324   000EF2  CFF3 F018          	movff	prodl,___flmul@temp
  3325   000EF6  CFF4 F019          	movff	prodh,___flmul@temp+1
  3326   000EFA  5018               	movf	___flmul@temp^0,w,c
  3327   000EFC  2614               	addwf	___flmul@prod^0,f,c
  3328   000EFE  5019               	movf	(___flmul@temp+1)^0,w,c
  3329   000F00  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3330   000F02  0E00               	movlw	0
  3331   000F04  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3332   000F06  0E00               	movlw	0
  3333   000F08  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3334   000F0A  5006               	movf	(___flmul@a+1)^0,w,c
  3335   000F0C  0203               	mulwf	(___flmul@b+2)^0,c
  3336   000F0E  CFF3 F018          	movff	prodl,___flmul@temp
  3337   000F12  CFF4 F019          	movff	prodh,___flmul@temp+1
  3338   000F16  5018               	movf	___flmul@temp^0,w,c
  3339   000F18  2614               	addwf	___flmul@prod^0,f,c
  3340   000F1A  5019               	movf	(___flmul@temp+1)^0,w,c
  3341   000F1C  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3342   000F1E  0E00               	movlw	0
  3343   000F20  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3344   000F22  0E00               	movlw	0
  3345   000F24  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3346   000F26  5007               	movf	(___flmul@a+2)^0,w,c
  3347   000F28  0203               	mulwf	(___flmul@b+2)^0,c
  3348   000F2A  CFF3 F018          	movff	prodl,___flmul@temp
  3349   000F2E  CFF4 F019          	movff	prodh,___flmul@temp+1
  3350   000F32  5018               	movf	___flmul@temp^0,w,c
  3351   000F34  6E09               	movwf	??___flmul^0,c
  3352   000F36  5019               	movf	(___flmul@temp+1)^0,w,c
  3353   000F38  6E0A               	movwf	(??___flmul+1)^0,c
  3354   000F3A  6A0B               	clrf	(??___flmul+2)^0,c
  3355   000F3C  6A0C               	clrf	(??___flmul+3)^0,c
  3356   000F3E  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  3357   000F42  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  3358   000F46  C009  F00A         	movff	??___flmul,??___flmul+1
  3359   000F4A  6A09               	clrf	??___flmul^0,c
  3360   000F4C  5009               	movf	??___flmul^0,w,c
  3361   000F4E  2614               	addwf	___flmul@prod^0,f,c
  3362   000F50  500A               	movf	(??___flmul+1)^0,w,c
  3363   000F52  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3364   000F54  500B               	movf	(??___flmul+2)^0,w,c
  3365   000F56  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3366   000F58  500C               	movf	(??___flmul+3)^0,w,c
  3367   000F5A  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3368   000F5C  C00E  F009         	movff	___flmul@grs,??___flmul
  3369   000F60  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  3370   000F64  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  3371   000F68  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  3372   000F6C  0E19               	movlw	25
  3373   000F6E  EFBE  F007         	goto	u2370
  3374   000F72                     u2375:
  3375   000F72  90D8               	bcf	status,0,c
  3376   000F74  320C               	rrcf	(??___flmul+3)^0,f,c
  3377   000F76  320B               	rrcf	(??___flmul+2)^0,f,c
  3378   000F78  320A               	rrcf	(??___flmul+1)^0,f,c
  3379   000F7A  3209               	rrcf	??___flmul^0,f,c
  3380   000F7C                     u2370:
  3381   000F7C  2EE8               	decfsz	wreg,f,c
  3382   000F7E  EFB9  F007         	goto	u2375
  3383   000F82  5009               	movf	??___flmul^0,w,c
  3384   000F84  2614               	addwf	___flmul@prod^0,f,c
  3385   000F86  500A               	movf	(??___flmul+1)^0,w,c
  3386   000F88  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3387   000F8A  500B               	movf	(??___flmul+2)^0,w,c
  3388   000F8C  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3389   000F8E  500C               	movf	(??___flmul+3)^0,w,c
  3390   000F90  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3391   000F92  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  3392   000F96  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  3393   000F9A  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  3394   000F9E  6A0E               	clrf	___flmul@grs^0,c
  3395   000FA0  5012               	movf	___flmul@aexp^0,w,c
  3396   000FA2  C013  F009         	movff	___flmul@bexp,??___flmul
  3397   000FA6  6A0A               	clrf	(??___flmul+1)^0,c
  3398   000FA8  2609               	addwf	??___flmul^0,f,c
  3399   000FAA  0E00               	movlw	0
  3400   000FAC  220A               	addwfc	(??___flmul+1)^0,f,c
  3401   000FAE  0E82               	movlw	130
  3402   000FB0  2409               	addwf	??___flmul^0,w,c
  3403   000FB2  6E18               	movwf	___flmul@temp^0,c
  3404   000FB4  0EFF               	movlw	255
  3405   000FB6  200A               	addwfc	(??___flmul+1)^0,w,c
  3406   000FB8  6E19               	movwf	(___flmul@temp+1)^0,c
  3407   000FBA  EFF4  F007         	goto	l2961
  3408   000FBE                     l2955:
  3409   000FBE  90D8               	bcf	status,0,c
  3410   000FC0  3614               	rlcf	___flmul@prod^0,f,c
  3411   000FC2  3615               	rlcf	(___flmul@prod+1)^0,f,c
  3412   000FC4  3616               	rlcf	(___flmul@prod+2)^0,f,c
  3413   000FC6  3617               	rlcf	(___flmul@prod+3)^0,f,c
  3414   000FC8  AE11               	btfss	(___flmul@grs+3)^0,7,c
  3415   000FCA  EFE9  F007         	goto	u2381
  3416   000FCE  EFEB  F007         	goto	u2380
  3417   000FD2                     u2381:
  3418   000FD2  EFEC  F007         	goto	l1099
  3419   000FD6                     u2380:
  3420   000FD6  8014               	bsf	___flmul@prod^0,0,c
  3421   000FD8                     l1099:
  3422   000FD8  90D8               	bcf	status,0,c
  3423   000FDA  360E               	rlcf	___flmul@grs^0,f,c
  3424   000FDC  360F               	rlcf	(___flmul@grs+1)^0,f,c
  3425   000FDE  3610               	rlcf	(___flmul@grs+2)^0,f,c
  3426   000FE0  3611               	rlcf	(___flmul@grs+3)^0,f,c
  3427   000FE2  0618               	decf	___flmul@temp^0,f,c
  3428   000FE4  A0D8               	btfss	status,0,c
  3429   000FE6  0619               	decf	(___flmul@temp+1)^0,f,c
  3430   000FE8                     l2961:
  3431   000FE8  AE16               	btfss	(___flmul@prod+2)^0,7,c
  3432   000FEA  EFF9  F007         	goto	u2391
  3433   000FEE  EFFB  F007         	goto	u2390
  3434   000FF2                     u2391:
  3435   000FF2  EFDF  F007         	goto	l2955
  3436   000FF6                     u2390:
  3437   000FF6  0E00               	movlw	0
  3438   000FF8  6E12               	movwf	___flmul@aexp^0,c
  3439   000FFA  AE11               	btfss	(___flmul@grs+3)^0,7,c
  3440   000FFC  EF02  F008         	goto	u2401
  3441   001000  EF04  F008         	goto	u2400
  3442   001004                     u2401:
  3443   001004  EF28  F008         	goto	l1101
  3444   001008                     u2400:
  3445   001008  0EFF               	movlw	255
  3446   00100A  140E               	andwf	___flmul@grs^0,w,c
  3447   00100C  6E09               	movwf	??___flmul^0,c
  3448   00100E  0EFF               	movlw	255
  3449   001010  140F               	andwf	(___flmul@grs+1)^0,w,c
  3450   001012  6E0A               	movwf	(??___flmul+1)^0,c
  3451   001014  0EFF               	movlw	255
  3452   001016  1410               	andwf	(___flmul@grs+2)^0,w,c
  3453   001018  6E0B               	movwf	(??___flmul+2)^0,c
  3454   00101A  0E7F               	movlw	127
  3455   00101C  1411               	andwf	(___flmul@grs+3)^0,w,c
  3456   00101E  6E0C               	movwf	(??___flmul+3)^0,c
  3457   001020  5009               	movf	??___flmul^0,w,c
  3458   001022  100A               	iorwf	(??___flmul+1)^0,w,c
  3459   001024  100B               	iorwf	(??___flmul+2)^0,w,c
  3460   001026  100C               	iorwf	(??___flmul+3)^0,w,c
  3461   001028  B4D8               	btfsc	status,2,c
  3462   00102A  EF19  F008         	goto	u2411
  3463   00102E  EF1B  F008         	goto	u2410
  3464   001032                     u2411:
  3465   001032  EF1F  F008         	goto	l1102
  3466   001036                     u2410:
  3467   001036                     l2969:
  3468   001036  0E01               	movlw	1
  3469   001038  6E12               	movwf	___flmul@aexp^0,c
  3470   00103A  EF28  F008         	goto	l1101
  3471   00103E                     l1102:
  3472   00103E  A014               	btfss	___flmul@prod^0,0,c
  3473   001040  EF24  F008         	goto	u2421
  3474   001044  EF26  F008         	goto	u2420
  3475   001048                     u2421:
  3476   001048  EF28  F008         	goto	l1101
  3477   00104C                     u2420:
  3478   00104C  EF1B  F008         	goto	l2969
  3479   001050                     l1101:
  3480   001050  5012               	movf	___flmul@aexp^0,w,c
  3481   001052  B4D8               	btfsc	status,2,c
  3482   001054  EF2E  F008         	goto	u2431
  3483   001058  EF30  F008         	goto	u2430
  3484   00105C                     u2431:
  3485   00105C  EF54  F008         	goto	l2981
  3486   001060                     u2430:
  3487   001060  0E01               	movlw	1
  3488   001062  2614               	addwf	___flmul@prod^0,f,c
  3489   001064  0E00               	movlw	0
  3490   001066  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3491   001068  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3492   00106A  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3493   00106C  A017               	btfss	(___flmul@prod+3)^0,0,c
  3494   00106E  EF3B  F008         	goto	u2441
  3495   001072  EF3D  F008         	goto	u2440
  3496   001076                     u2441:
  3497   001076  EF54  F008         	goto	l2981
  3498   00107A                     u2440:
  3499   00107A  C014  F009         	movff	___flmul@prod,??___flmul
  3500   00107E  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  3501   001082  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  3502   001086  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  3503   00108A  340C               	rlcf	(??___flmul+3)^0,w,c
  3504   00108C  320C               	rrcf	(??___flmul+3)^0,f,c
  3505   00108E  320B               	rrcf	(??___flmul+2)^0,f,c
  3506   001090  320A               	rrcf	(??___flmul+1)^0,f,c
  3507   001092  3209               	rrcf	??___flmul^0,f,c
  3508   001094  C009  F014         	movff	??___flmul,___flmul@prod
  3509   001098  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  3510   00109C  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  3511   0010A0  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  3512   0010A4  4A18               	infsnz	___flmul@temp^0,f,c
  3513   0010A6  2A19               	incf	(___flmul@temp+1)^0,f,c
  3514   0010A8                     l2981:
  3515   0010A8  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  3516   0010AA  EF5F  F008         	goto	u2451
  3517   0010AE  5019               	movf	(___flmul@temp+1)^0,w,c
  3518   0010B0  E108               	bnz	u2450
  3519   0010B2  2818               	incf	___flmul@temp^0,w,c
  3520   0010B4  A0D8               	btfss	status,0,c
  3521   0010B6  EF5F  F008         	goto	u2451
  3522   0010BA  EF61  F008         	goto	u2450
  3523   0010BE                     u2451:
  3524   0010BE  EF6B  F008         	goto	l2985
  3525   0010C2                     u2450:
  3526   0010C2  0E00               	movlw	0
  3527   0010C4  6E14               	movwf	___flmul@prod^0,c
  3528   0010C6  0E00               	movlw	0
  3529   0010C8  6E15               	movwf	(___flmul@prod+1)^0,c
  3530   0010CA  0E80               	movlw	128
  3531   0010CC  6E16               	movwf	(___flmul@prod+2)^0,c
  3532   0010CE  0E7F               	movlw	127
  3533   0010D0  6E17               	movwf	(___flmul@prod+3)^0,c
  3534   0010D2  EF99  F008         	goto	l2997
  3535   0010D6                     l2985:
  3536   0010D6  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  3537   0010D8  EF78  F008         	goto	u2460
  3538   0010DC  5019               	movf	(___flmul@temp+1)^0,w,c
  3539   0010DE  E106               	bnz	u2461
  3540   0010E0  0418               	decf	___flmul@temp^0,w,c
  3541   0010E2  B0D8               	btfsc	status,0,c
  3542   0010E4  EF76  F008         	goto	u2461
  3543   0010E8  EF78  F008         	goto	u2460
  3544   0010EC                     u2461:
  3545   0010EC  EF84  F008         	goto	l1109
  3546   0010F0                     u2460:
  3547   0010F0  0E00               	movlw	0
  3548   0010F2  6E14               	movwf	___flmul@prod^0,c
  3549   0010F4  0E00               	movlw	0
  3550   0010F6  6E15               	movwf	(___flmul@prod+1)^0,c
  3551   0010F8  0E00               	movlw	0
  3552   0010FA  6E16               	movwf	(___flmul@prod+2)^0,c
  3553   0010FC  0E00               	movlw	0
  3554   0010FE  6E17               	movwf	(___flmul@prod+3)^0,c
  3555   001100  0E00               	movlw	0
  3556   001102  6E0D               	movwf	___flmul@sign^0,c
  3557   001104  EF99  F008         	goto	l2997
  3558   001108                     l1109:
  3559   001108  C018  F013         	movff	___flmul@temp,___flmul@bexp
  3560   00110C  0EFF               	movlw	255
  3561   00110E  1614               	andwf	___flmul@prod^0,f,c
  3562   001110  0EFF               	movlw	255
  3563   001112  1615               	andwf	(___flmul@prod+1)^0,f,c
  3564   001114  0E7F               	movlw	127
  3565   001116  1616               	andwf	(___flmul@prod+2)^0,f,c
  3566   001118  0E00               	movlw	0
  3567   00111A  1617               	andwf	(___flmul@prod+3)^0,f,c
  3568   00111C  A013               	btfss	___flmul@bexp^0,0,c
  3569   00111E  EF93  F008         	goto	u2471
  3570   001122  EF95  F008         	goto	u2470
  3571   001126                     u2471:
  3572   001126  EF96  F008         	goto	l2995
  3573   00112A                     u2470:
  3574   00112A  8E16               	bsf	(___flmul@prod+2)^0,7,c
  3575   00112C                     l2995:
  3576   00112C  90D8               	bcf	status,0,c
  3577   00112E  3013               	rrcf	___flmul@bexp^0,w,c
  3578   001130  6E17               	movwf	(___flmul@prod+3)^0,c
  3579   001132                     l2997:
  3580   001132  500D               	movf	___flmul@sign^0,w,c
  3581   001134  1217               	iorwf	(___flmul@prod+3)^0,f,c
  3582   001136  C014  F001         	movff	___flmul@prod,?___flmul
  3583   00113A  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  3584   00113E  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  3585   001142  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  3586   001146                     l1096:
  3587   001146  0012               	return		;funcret
  3588   001148                     __end_of___flmul:
  3589                           	callstack 0
  3590                           
  3591 ;; *************** function ___fldiv *****************
  3592 ;; Defined at:
  3593 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  3594 ;; Parameters:    Size  Location     Type
  3595 ;;  b               4   14[COMRAM] unsigned char 
  3596 ;;  a               4   18[COMRAM] unsigned char 
  3597 ;; Auto vars:     Size  Location     Type
  3598 ;;  grs             4   33[COMRAM] unsigned long 
  3599 ;;  rem             4   26[COMRAM] unsigned long 
  3600 ;;  new_exp         2   31[COMRAM] short 
  3601 ;;  aexp            1   38[COMRAM] unsigned char 
  3602 ;;  bexp            1   37[COMRAM] unsigned char 
  3603 ;;  sign            1   30[COMRAM] unsigned char 
  3604 ;; Return value:  Size  Location     Type
  3605 ;;                  4   14[COMRAM] unsigned char 
  3606 ;; Registers used:
  3607 ;;		wreg, status,2, status,0
  3608 ;; Tracked objects:
  3609 ;;		On entry : 0/0
  3610 ;;		On exit  : 0/0
  3611 ;;		Unchanged: 0/0
  3612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3613 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3614 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3615 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3616 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3617 ;;Total ram usage:       25 bytes
  3618 ;; Hardware stack levels used: 1
  3619 ;; Hardware stack levels required when called: 2
  3620 ;; This function calls:
  3621 ;;		Nothing
  3622 ;; This function is called by:
  3623 ;;		_decide_color
  3624 ;; This function uses a non-reentrant model
  3625 ;;
  3626                           
  3627                           	psect	text7
  3628   001148                     __ptext7:
  3629                           	callstack 0
  3630   001148                     ___fldiv:
  3631                           	callstack 27
  3632   001148  5012               	movf	(___fldiv@b+3)^0,w,c
  3633   00114A  0B80               	andlw	128
  3634   00114C  6E1F               	movwf	___fldiv@sign^0,c
  3635   00114E  5012               	movf	(___fldiv@b+3)^0,w,c
  3636   001150  2412               	addwf	(___fldiv@b+3)^0,w,c
  3637   001152  6E26               	movwf	___fldiv@bexp^0,c
  3638   001154  AE11               	btfss	(___fldiv@b+2)^0,7,c
  3639   001156  EFAF  F008         	goto	u2061
  3640   00115A  EFB1  F008         	goto	u2060
  3641   00115E                     u2061:
  3642   00115E  EFB2  F008         	goto	l2741
  3643   001162                     u2060:
  3644   001162  8026               	bsf	___fldiv@bexp^0,0,c
  3645   001164                     l2741:
  3646   001164  5026               	movf	___fldiv@bexp^0,w,c
  3647   001166  B4D8               	btfsc	status,2,c
  3648   001168  EFB8  F008         	goto	u2071
  3649   00116C  EFBA  F008         	goto	u2070
  3650   001170                     u2071:
  3651   001170  EFCF  F008         	goto	l2751
  3652   001174                     u2070:
  3653   001174  2826               	incf	___fldiv@bexp^0,w,c
  3654   001176  A4D8               	btfss	status,2,c
  3655   001178  EFC0  F008         	goto	u2081
  3656   00117C  EFC2  F008         	goto	u2080
  3657   001180                     u2081:
  3658   001180  EFCA  F008         	goto	l2747
  3659   001184                     u2080:
  3660   001184  0E00               	movlw	0
  3661   001186  6E0F               	movwf	___fldiv@b^0,c
  3662   001188  0E00               	movlw	0
  3663   00118A  6E10               	movwf	(___fldiv@b+1)^0,c
  3664   00118C  0E00               	movlw	0
  3665   00118E  6E11               	movwf	(___fldiv@b+2)^0,c
  3666   001190  0E00               	movlw	0
  3667   001192  6E12               	movwf	(___fldiv@b+3)^0,c
  3668   001194                     l2747:
  3669   001194  8E11               	bsf	(___fldiv@b+2)^0,7,c
  3670   001196  0E00               	movlw	0
  3671   001198  6E12               	movwf	(___fldiv@b+3)^0,c
  3672   00119A  EFD7  F008         	goto	l2753
  3673   00119E                     l2751:
  3674   00119E  0E00               	movlw	0
  3675   0011A0  6E0F               	movwf	___fldiv@b^0,c
  3676   0011A2  0E00               	movlw	0
  3677   0011A4  6E10               	movwf	(___fldiv@b+1)^0,c
  3678   0011A6  0E00               	movlw	0
  3679   0011A8  6E11               	movwf	(___fldiv@b+2)^0,c
  3680   0011AA  0E00               	movlw	0
  3681   0011AC  6E12               	movwf	(___fldiv@b+3)^0,c
  3682   0011AE                     l2753:
  3683   0011AE  5016               	movf	(___fldiv@a+3)^0,w,c
  3684   0011B0  0B80               	andlw	128
  3685   0011B2  1A1F               	xorwf	___fldiv@sign^0,f,c
  3686   0011B4  5016               	movf	(___fldiv@a+3)^0,w,c
  3687   0011B6  2416               	addwf	(___fldiv@a+3)^0,w,c
  3688   0011B8  6E27               	movwf	___fldiv@aexp^0,c
  3689   0011BA  AE15               	btfss	(___fldiv@a+2)^0,7,c
  3690   0011BC  EFE2  F008         	goto	u2091
  3691   0011C0  EFE4  F008         	goto	u2090
  3692   0011C4                     u2091:
  3693   0011C4  EFE5  F008         	goto	l2761
  3694   0011C8                     u2090:
  3695   0011C8  8027               	bsf	___fldiv@aexp^0,0,c
  3696   0011CA                     l2761:
  3697   0011CA  5027               	movf	___fldiv@aexp^0,w,c
  3698   0011CC  B4D8               	btfsc	status,2,c
  3699   0011CE  EFEB  F008         	goto	u2101
  3700   0011D2  EFED  F008         	goto	u2100
  3701   0011D6                     u2101:
  3702   0011D6  EF02  F009         	goto	l2771
  3703   0011DA                     u2100:
  3704   0011DA  2827               	incf	___fldiv@aexp^0,w,c
  3705   0011DC  A4D8               	btfss	status,2,c
  3706   0011DE  EFF3  F008         	goto	u2111
  3707   0011E2  EFF5  F008         	goto	u2110
  3708   0011E6                     u2111:
  3709   0011E6  EFFD  F008         	goto	l2767
  3710   0011EA                     u2110:
  3711   0011EA  0E00               	movlw	0
  3712   0011EC  6E13               	movwf	___fldiv@a^0,c
  3713   0011EE  0E00               	movlw	0
  3714   0011F0  6E14               	movwf	(___fldiv@a+1)^0,c
  3715   0011F2  0E00               	movlw	0
  3716   0011F4  6E15               	movwf	(___fldiv@a+2)^0,c
  3717   0011F6  0E00               	movlw	0
  3718   0011F8  6E16               	movwf	(___fldiv@a+3)^0,c
  3719   0011FA                     l2767:
  3720   0011FA  8E15               	bsf	(___fldiv@a+2)^0,7,c
  3721   0011FC  0E00               	movlw	0
  3722   0011FE  6E16               	movwf	(___fldiv@a+3)^0,c
  3723   001200  EF0A  F009         	goto	l2773
  3724   001204                     l2771:
  3725   001204  0E00               	movlw	0
  3726   001206  6E13               	movwf	___fldiv@a^0,c
  3727   001208  0E00               	movlw	0
  3728   00120A  6E14               	movwf	(___fldiv@a+1)^0,c
  3729   00120C  0E00               	movlw	0
  3730   00120E  6E15               	movwf	(___fldiv@a+2)^0,c
  3731   001210  0E00               	movlw	0
  3732   001212  6E16               	movwf	(___fldiv@a+3)^0,c
  3733   001214                     l2773:
  3734   001214  5013               	movf	___fldiv@a^0,w,c
  3735   001216  1014               	iorwf	(___fldiv@a+1)^0,w,c
  3736   001218  1015               	iorwf	(___fldiv@a+2)^0,w,c
  3737   00121A  1016               	iorwf	(___fldiv@a+3)^0,w,c
  3738   00121C  A4D8               	btfss	status,2,c
  3739   00121E  EF13  F009         	goto	u2121
  3740   001222  EF15  F009         	goto	u2120
  3741   001226                     u2121:
  3742   001226  EF2D  F009         	goto	l2785
  3743   00122A                     u2120:
  3744   00122A  0E00               	movlw	0
  3745   00122C  6E0F               	movwf	___fldiv@b^0,c
  3746   00122E  0E00               	movlw	0
  3747   001230  6E10               	movwf	(___fldiv@b+1)^0,c
  3748   001232  0E00               	movlw	0
  3749   001234  6E11               	movwf	(___fldiv@b+2)^0,c
  3750   001236  0E00               	movlw	0
  3751   001238  6E12               	movwf	(___fldiv@b+3)^0,c
  3752   00123A  0E80               	movlw	128
  3753   00123C  1211               	iorwf	(___fldiv@b+2)^0,f,c
  3754   00123E  0E7F               	movlw	127
  3755   001240  1212               	iorwf	(___fldiv@b+3)^0,f,c
  3756   001242                     l2779:
  3757   001242  501F               	movf	___fldiv@sign^0,w,c
  3758   001244  1212               	iorwf	(___fldiv@b+3)^0,f,c
  3759   001246  C00F  F00F         	movff	___fldiv@b,?___fldiv
  3760   00124A  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  3761   00124E  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  3762   001252  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  3763   001256  EF70  F00A         	goto	l1060
  3764   00125A                     l2785:
  3765   00125A  5026               	movf	___fldiv@bexp^0,w,c
  3766   00125C  A4D8               	btfss	status,2,c
  3767   00125E  EF33  F009         	goto	u2131
  3768   001262  EF35  F009         	goto	u2130
  3769   001266                     u2131:
  3770   001266  EF3F  F009         	goto	l2793
  3771   00126A                     u2130:
  3772   00126A  0E00               	movlw	0
  3773   00126C  6E0F               	movwf	?___fldiv^0,c
  3774   00126E  0E00               	movlw	0
  3775   001270  6E10               	movwf	(?___fldiv+1)^0,c
  3776   001272  0E00               	movlw	0
  3777   001274  6E11               	movwf	(?___fldiv+2)^0,c
  3778   001276  0E00               	movlw	0
  3779   001278  6E12               	movwf	(?___fldiv+3)^0,c
  3780   00127A  EF70  F00A         	goto	l1060
  3781   00127E                     l2793:
  3782   00127E  5027               	movf	___fldiv@aexp^0,w,c
  3783   001280  C026  F017         	movff	___fldiv@bexp,??___fldiv
  3784   001284  6A18               	clrf	(??___fldiv+1)^0,c
  3785   001286  5E17               	subwf	??___fldiv^0,f,c
  3786   001288  0E00               	movlw	0
  3787   00128A  5A18               	subwfb	(??___fldiv+1)^0,f,c
  3788   00128C  0E7F               	movlw	127
  3789   00128E  2417               	addwf	??___fldiv^0,w,c
  3790   001290  6E20               	movwf	___fldiv@new_exp^0,c
  3791   001292  0E00               	movlw	0
  3792   001294  2018               	addwfc	(??___fldiv+1)^0,w,c
  3793   001296  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  3794   001298  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  3795   00129C  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  3796   0012A0  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  3797   0012A4  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  3798   0012A8  0E00               	movlw	0
  3799   0012AA  6E0F               	movwf	___fldiv@b^0,c
  3800   0012AC  0E00               	movlw	0
  3801   0012AE  6E10               	movwf	(___fldiv@b+1)^0,c
  3802   0012B0  0E00               	movlw	0
  3803   0012B2  6E11               	movwf	(___fldiv@b+2)^0,c
  3804   0012B4  0E00               	movlw	0
  3805   0012B6  6E12               	movwf	(___fldiv@b+3)^0,c
  3806   0012B8  0E00               	movlw	0
  3807   0012BA  6E22               	movwf	___fldiv@grs^0,c
  3808   0012BC  0E00               	movlw	0
  3809   0012BE  6E23               	movwf	(___fldiv@grs+1)^0,c
  3810   0012C0  0E00               	movlw	0
  3811   0012C2  6E24               	movwf	(___fldiv@grs+2)^0,c
  3812   0012C4  0E00               	movlw	0
  3813   0012C6  6E25               	movwf	(___fldiv@grs+3)^0,c
  3814   0012C8  0E00               	movlw	0
  3815   0012CA  6E27               	movwf	___fldiv@aexp^0,c
  3816   0012CC  EFA0  F009         	goto	l1062
  3817   0012D0                     l2803:
  3818   0012D0  5027               	movf	___fldiv@aexp^0,w,c
  3819   0012D2  B4D8               	btfsc	status,2,c
  3820   0012D4  EF6E  F009         	goto	u2141
  3821   0012D8  EF70  F009         	goto	u2140
  3822   0012DC                     u2141:
  3823   0012DC  EF87  F009         	goto	l2811
  3824   0012E0                     u2140:
  3825   0012E0  90D8               	bcf	status,0,c
  3826   0012E2  361B               	rlcf	___fldiv@rem^0,f,c
  3827   0012E4  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  3828   0012E6  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  3829   0012E8  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  3830   0012EA  90D8               	bcf	status,0,c
  3831   0012EC  360F               	rlcf	___fldiv@b^0,f,c
  3832   0012EE  3610               	rlcf	(___fldiv@b+1)^0,f,c
  3833   0012F0  3611               	rlcf	(___fldiv@b+2)^0,f,c
  3834   0012F2  3612               	rlcf	(___fldiv@b+3)^0,f,c
  3835   0012F4  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  3836   0012F6  EF7F  F009         	goto	u2151
  3837   0012FA  EF81  F009         	goto	u2150
  3838   0012FE                     u2151:
  3839   0012FE  EF82  F009         	goto	l1065
  3840   001302                     u2150:
  3841   001302  800F               	bsf	___fldiv@b^0,0,c
  3842   001304                     l1065:
  3843   001304  90D8               	bcf	status,0,c
  3844   001306  3622               	rlcf	___fldiv@grs^0,f,c
  3845   001308  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  3846   00130A  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  3847   00130C  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  3848   00130E                     l2811:
  3849   00130E  5013               	movf	___fldiv@a^0,w,c
  3850   001310  5C1B               	subwf	___fldiv@rem^0,w,c
  3851   001312  5014               	movf	(___fldiv@a+1)^0,w,c
  3852   001314  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  3853   001316  5015               	movf	(___fldiv@a+2)^0,w,c
  3854   001318  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  3855   00131A  5016               	movf	(___fldiv@a+3)^0,w,c
  3856   00131C  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  3857   00131E  A0D8               	btfss	status,0,c
  3858   001320  EF94  F009         	goto	u2161
  3859   001324  EF96  F009         	goto	u2160
  3860   001328                     u2161:
  3861   001328  EF9F  F009         	goto	l2817
  3862   00132C                     u2160:
  3863   00132C  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  3864   00132E  5013               	movf	___fldiv@a^0,w,c
  3865   001330  5E1B               	subwf	___fldiv@rem^0,f,c
  3866   001332  5014               	movf	(___fldiv@a+1)^0,w,c
  3867   001334  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  3868   001336  5015               	movf	(___fldiv@a+2)^0,w,c
  3869   001338  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  3870   00133A  5016               	movf	(___fldiv@a+3)^0,w,c
  3871   00133C  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  3872   00133E                     l2817:
  3873   00133E  2A27               	incf	___fldiv@aexp^0,f,c
  3874   001340                     l1062:
  3875   001340  0E19               	movlw	25
  3876   001342  6427               	cpfsgt	___fldiv@aexp^0,c
  3877   001344  EFA6  F009         	goto	u2171
  3878   001348  EFA8  F009         	goto	u2170
  3879   00134C                     u2171:
  3880   00134C  EF68  F009         	goto	l2803
  3881   001350                     u2170:
  3882   001350  501B               	movf	___fldiv@rem^0,w,c
  3883   001352  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  3884   001354  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  3885   001356  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  3886   001358  B4D8               	btfsc	status,2,c
  3887   00135A  EFB1  F009         	goto	u2181
  3888   00135E  EFB3  F009         	goto	u2180
  3889   001362                     u2181:
  3890   001362  EFCB  F009         	goto	l2829
  3891   001366                     u2180:
  3892   001366  8022               	bsf	___fldiv@grs^0,0,c
  3893   001368  EFCB  F009         	goto	l2829
  3894   00136C                     l2823:
  3895   00136C  90D8               	bcf	status,0,c
  3896   00136E  360F               	rlcf	___fldiv@b^0,f,c
  3897   001370  3610               	rlcf	(___fldiv@b+1)^0,f,c
  3898   001372  3611               	rlcf	(___fldiv@b+2)^0,f,c
  3899   001374  3612               	rlcf	(___fldiv@b+3)^0,f,c
  3900   001376  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  3901   001378  EFC0  F009         	goto	u2191
  3902   00137C  EFC2  F009         	goto	u2190
  3903   001380                     u2191:
  3904   001380  EFC3  F009         	goto	l1071
  3905   001384                     u2190:
  3906   001384  800F               	bsf	___fldiv@b^0,0,c
  3907   001386                     l1071:
  3908   001386  90D8               	bcf	status,0,c
  3909   001388  3622               	rlcf	___fldiv@grs^0,f,c
  3910   00138A  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  3911   00138C  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  3912   00138E  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  3913   001390  0620               	decf	___fldiv@new_exp^0,f,c
  3914   001392  A0D8               	btfss	status,0,c
  3915   001394  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  3916   001396                     l2829:
  3917   001396  AE11               	btfss	(___fldiv@b+2)^0,7,c
  3918   001398  EFD0  F009         	goto	u2201
  3919   00139C  EFD2  F009         	goto	u2200
  3920   0013A0                     u2201:
  3921   0013A0  EFB6  F009         	goto	l2823
  3922   0013A4                     u2200:
  3923   0013A4  0E00               	movlw	0
  3924   0013A6  6E27               	movwf	___fldiv@aexp^0,c
  3925   0013A8  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  3926   0013AA  EFD9  F009         	goto	u2211
  3927   0013AE  EFDB  F009         	goto	u2210
  3928   0013B2                     u2211:
  3929   0013B2  EFFF  F009         	goto	l1073
  3930   0013B6                     u2210:
  3931   0013B6  0EFF               	movlw	255
  3932   0013B8  1422               	andwf	___fldiv@grs^0,w,c
  3933   0013BA  6E17               	movwf	??___fldiv^0,c
  3934   0013BC  0EFF               	movlw	255
  3935   0013BE  1423               	andwf	(___fldiv@grs+1)^0,w,c
  3936   0013C0  6E18               	movwf	(??___fldiv+1)^0,c
  3937   0013C2  0EFF               	movlw	255
  3938   0013C4  1424               	andwf	(___fldiv@grs+2)^0,w,c
  3939   0013C6  6E19               	movwf	(??___fldiv+2)^0,c
  3940   0013C8  0E7F               	movlw	127
  3941   0013CA  1425               	andwf	(___fldiv@grs+3)^0,w,c
  3942   0013CC  6E1A               	movwf	(??___fldiv+3)^0,c
  3943   0013CE  5017               	movf	??___fldiv^0,w,c
  3944   0013D0  1018               	iorwf	(??___fldiv+1)^0,w,c
  3945   0013D2  1019               	iorwf	(??___fldiv+2)^0,w,c
  3946   0013D4  101A               	iorwf	(??___fldiv+3)^0,w,c
  3947   0013D6  B4D8               	btfsc	status,2,c
  3948   0013D8  EFF0  F009         	goto	u2221
  3949   0013DC  EFF2  F009         	goto	u2220
  3950   0013E0                     u2221:
  3951   0013E0  EFF6  F009         	goto	l1074
  3952   0013E4                     u2220:
  3953   0013E4                     l2837:
  3954   0013E4  0E01               	movlw	1
  3955   0013E6  6E27               	movwf	___fldiv@aexp^0,c
  3956   0013E8  EFFF  F009         	goto	l1073
  3957   0013EC                     l1074:
  3958   0013EC  A00F               	btfss	___fldiv@b^0,0,c
  3959   0013EE  EFFB  F009         	goto	u2231
  3960   0013F2  EFFD  F009         	goto	u2230
  3961   0013F6                     u2231:
  3962   0013F6  EFFF  F009         	goto	l1073
  3963   0013FA                     u2230:
  3964   0013FA  EFF2  F009         	goto	l2837
  3965   0013FE                     l1073:
  3966   0013FE  5027               	movf	___fldiv@aexp^0,w,c
  3967   001400  B4D8               	btfsc	status,2,c
  3968   001402  EF05  F00A         	goto	u2241
  3969   001406  EF07  F00A         	goto	u2240
  3970   00140A                     u2241:
  3971   00140A  EF2B  F00A         	goto	l2849
  3972   00140E                     u2240:
  3973   00140E  0E01               	movlw	1
  3974   001410  260F               	addwf	___fldiv@b^0,f,c
  3975   001412  0E00               	movlw	0
  3976   001414  2210               	addwfc	(___fldiv@b+1)^0,f,c
  3977   001416  2211               	addwfc	(___fldiv@b+2)^0,f,c
  3978   001418  2212               	addwfc	(___fldiv@b+3)^0,f,c
  3979   00141A  A012               	btfss	(___fldiv@b+3)^0,0,c
  3980   00141C  EF12  F00A         	goto	u2251
  3981   001420  EF14  F00A         	goto	u2250
  3982   001424                     u2251:
  3983   001424  EF2B  F00A         	goto	l2849
  3984   001428                     u2250:
  3985   001428  C00F  F017         	movff	___fldiv@b,??___fldiv
  3986   00142C  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  3987   001430  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  3988   001434  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  3989   001438  341A               	rlcf	(??___fldiv+3)^0,w,c
  3990   00143A  321A               	rrcf	(??___fldiv+3)^0,f,c
  3991   00143C  3219               	rrcf	(??___fldiv+2)^0,f,c
  3992   00143E  3218               	rrcf	(??___fldiv+1)^0,f,c
  3993   001440  3217               	rrcf	??___fldiv^0,f,c
  3994   001442  C017  F00F         	movff	??___fldiv,___fldiv@b
  3995   001446  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  3996   00144A  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  3997   00144E  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  3998   001452  4A20               	infsnz	___fldiv@new_exp^0,f,c
  3999   001454  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  4000   001456                     l2849:
  4001   001456  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4002   001458  EF36  F00A         	goto	u2261
  4003   00145C  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  4004   00145E  E108               	bnz	u2260
  4005   001460  2820               	incf	___fldiv@new_exp^0,w,c
  4006   001462  A0D8               	btfss	status,0,c
  4007   001464  EF36  F00A         	goto	u2261
  4008   001468  EF38  F00A         	goto	u2260
  4009   00146C                     u2261:
  4010   00146C  EF43  F00A         	goto	l2853
  4011   001470                     u2260:
  4012   001470  0E00               	movlw	0
  4013   001472  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  4014   001474  6820               	setf	___fldiv@new_exp^0,c
  4015   001476  0E00               	movlw	0
  4016   001478  6E0F               	movwf	___fldiv@b^0,c
  4017   00147A  0E00               	movlw	0
  4018   00147C  6E10               	movwf	(___fldiv@b+1)^0,c
  4019   00147E  0E00               	movlw	0
  4020   001480  6E11               	movwf	(___fldiv@b+2)^0,c
  4021   001482  0E00               	movlw	0
  4022   001484  6E12               	movwf	(___fldiv@b+3)^0,c
  4023   001486                     l2853:
  4024   001486  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4025   001488  EF50  F00A         	goto	u2270
  4026   00148C  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  4027   00148E  E106               	bnz	u2271
  4028   001490  0420               	decf	___fldiv@new_exp^0,w,c
  4029   001492  B0D8               	btfsc	status,0,c
  4030   001494  EF4E  F00A         	goto	u2271
  4031   001498  EF50  F00A         	goto	u2270
  4032   00149C                     u2271:
  4033   00149C  EF5E  F00A         	goto	l2857
  4034   0014A0                     u2270:
  4035   0014A0  0E00               	movlw	0
  4036   0014A2  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  4037   0014A4  0E00               	movlw	0
  4038   0014A6  6E20               	movwf	___fldiv@new_exp^0,c
  4039   0014A8  0E00               	movlw	0
  4040   0014AA  6E0F               	movwf	___fldiv@b^0,c
  4041   0014AC  0E00               	movlw	0
  4042   0014AE  6E10               	movwf	(___fldiv@b+1)^0,c
  4043   0014B0  0E00               	movlw	0
  4044   0014B2  6E11               	movwf	(___fldiv@b+2)^0,c
  4045   0014B4  0E00               	movlw	0
  4046   0014B6  6E12               	movwf	(___fldiv@b+3)^0,c
  4047   0014B8  0E00               	movlw	0
  4048   0014BA  6E1F               	movwf	___fldiv@sign^0,c
  4049   0014BC                     l2857:
  4050   0014BC  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  4051   0014C0  A026               	btfss	___fldiv@bexp^0,0,c
  4052   0014C2  EF65  F00A         	goto	u2281
  4053   0014C6  EF67  F00A         	goto	u2280
  4054   0014CA                     u2281:
  4055   0014CA  EF6A  F00A         	goto	l2863
  4056   0014CE                     u2280:
  4057   0014CE  8E11               	bsf	(___fldiv@b+2)^0,7,c
  4058   0014D0  EF6B  F00A         	goto	l2865
  4059   0014D4                     l2863:
  4060   0014D4  9E11               	bcf	(___fldiv@b+2)^0,7,c
  4061   0014D6                     l2865:
  4062   0014D6  90D8               	bcf	status,0,c
  4063   0014D8  3026               	rrcf	___fldiv@bexp^0,w,c
  4064   0014DA  6E12               	movwf	(___fldiv@b+3)^0,c
  4065   0014DC  EF21  F009         	goto	l2779
  4066   0014E0                     l1060:
  4067   0014E0  0012               	return		;funcret
  4068   0014E2                     __end_of___fldiv:
  4069                           	callstack 0
  4070                           
  4071 ;; *************** function _color_read_Red *****************
  4072 ;; Defined at:
  4073 ;;		line 48 in file "color.c"
  4074 ;; Parameters:    Size  Location     Type
  4075 ;;		None
  4076 ;; Auto vars:     Size  Location     Type
  4077 ;;  tmp             2    9[COMRAM] unsigned int 
  4078 ;; Return value:  Size  Location     Type
  4079 ;;                  2    4[COMRAM] unsigned int 
  4080 ;; Registers used:
  4081 ;;		wreg, status,2, status,0, cstack
  4082 ;; Tracked objects:
  4083 ;;		On entry : 0/0
  4084 ;;		On exit  : 0/0
  4085 ;;		Unchanged: 0/0
  4086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4087 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4088 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4089 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4090 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4091 ;;Total ram usage:        7 bytes
  4092 ;; Hardware stack levels used: 1
  4093 ;; Hardware stack levels required when called: 4
  4094 ;; This function calls:
  4095 ;;		_I2C_2_Master_Read
  4096 ;;		_I2C_2_Master_RepStart
  4097 ;;		_I2C_2_Master_Start
  4098 ;;		_I2C_2_Master_Stop
  4099 ;;		_I2C_2_Master_Write
  4100 ;; This function is called by:
  4101 ;;		_main
  4102 ;; This function uses a non-reentrant model
  4103 ;;
  4104                           
  4105                           	psect	text8
  4106   002534                     __ptext8:
  4107                           	callstack 0
  4108   002534                     _color_read_Red:
  4109                           	callstack 26
  4110   002534                     
  4111                           ;color.c: 50:  unsigned int tmp;;color.c: 51:  I2C_2_Master_Start();
  4112   002534  EC43  F014         	call	_I2C_2_Master_Start	;wreg free
  4113                           
  4114                           ;color.c: 52:  I2C_2_Master_Write(0x52 | 0x00);
  4115   002538  0E52               	movlw	82
  4116   00253A  EC2D  F014         	call	_I2C_2_Master_Write
  4117                           
  4118                           ;color.c: 53:  I2C_2_Master_Write(0xA0 | 0x16);
  4119   00253E  0EB6               	movlw	182
  4120   002540  EC2D  F014         	call	_I2C_2_Master_Write
  4121                           
  4122                           ;color.c: 55:  I2C_2_Master_RepStart();
  4123   002544  EC39  F014         	call	_I2C_2_Master_RepStart	;wreg free
  4124                           
  4125                           ;color.c: 56:  I2C_2_Master_Write(0x52 | 0x01);
  4126   002548  0E53               	movlw	83
  4127   00254A  EC2D  F014         	call	_I2C_2_Master_Write
  4128                           
  4129                           ;color.c: 57:  tmp=I2C_2_Master_Read(1);
  4130   00254E  0E01               	movlw	1
  4131   002550  EC3A  F013         	call	_I2C_2_Master_Read
  4132   002554  6E07               	movwf	??_color_read_Red^0,c
  4133   002556  5007               	movf	??_color_read_Red^0,w,c
  4134   002558  6E0A               	movwf	color_read_Red@tmp^0,c
  4135   00255A  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  4136                           
  4137                           ;color.c: 58:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4138   00255C  0E00               	movlw	0
  4139   00255E  EC3A  F013         	call	_I2C_2_Master_Read
  4140   002562  6E07               	movwf	??_color_read_Red^0,c
  4141   002564  5007               	movf	??_color_read_Red^0,w,c
  4142   002566  6E09               	movwf	(??_color_read_Red+2)^0,c
  4143   002568  6A08               	clrf	(??_color_read_Red+1)^0,c
  4144   00256A  500A               	movf	color_read_Red@tmp^0,w,c
  4145   00256C  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  4146   00256E  6E0A               	movwf	color_read_Red@tmp^0,c
  4147   002570  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  4148   002572  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  4149   002574  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  4150                           
  4151                           ;color.c: 59:  I2C_2_Master_Stop();
  4152   002576  EC3E  F014         	call	_I2C_2_Master_Stop	;wreg free
  4153   00257A                     
  4154                           ;color.c: 60:  return tmp;
  4155   00257A  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  4156   00257E  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  4157   002582  0012               	return		;funcret
  4158   002584                     __end_of_color_read_Red:
  4159                           	callstack 0
  4160                           
  4161 ;; *************** function _color_read_Green *****************
  4162 ;; Defined at:
  4163 ;;		line 63 in file "color.c"
  4164 ;; Parameters:    Size  Location     Type
  4165 ;;		None
  4166 ;; Auto vars:     Size  Location     Type
  4167 ;;  tmp             2    9[COMRAM] unsigned int 
  4168 ;; Return value:  Size  Location     Type
  4169 ;;                  2    4[COMRAM] unsigned int 
  4170 ;; Registers used:
  4171 ;;		wreg, status,2, status,0, cstack
  4172 ;; Tracked objects:
  4173 ;;		On entry : 0/0
  4174 ;;		On exit  : 0/0
  4175 ;;		Unchanged: 0/0
  4176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4177 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4178 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4179 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4180 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4181 ;;Total ram usage:        7 bytes
  4182 ;; Hardware stack levels used: 1
  4183 ;; Hardware stack levels required when called: 4
  4184 ;; This function calls:
  4185 ;;		_I2C_2_Master_Read
  4186 ;;		_I2C_2_Master_RepStart
  4187 ;;		_I2C_2_Master_Start
  4188 ;;		_I2C_2_Master_Stop
  4189 ;;		_I2C_2_Master_Write
  4190 ;; This function is called by:
  4191 ;;		_main
  4192 ;; This function uses a non-reentrant model
  4193 ;;
  4194                           
  4195                           	psect	text9
  4196   002584                     __ptext9:
  4197                           	callstack 0
  4198   002584                     _color_read_Green:
  4199                           	callstack 26
  4200   002584                     
  4201                           ;color.c: 65:  unsigned int tmp;;color.c: 66:  I2C_2_Master_Start();
  4202   002584  EC43  F014         	call	_I2C_2_Master_Start	;wreg free
  4203                           
  4204                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x00);
  4205   002588  0E52               	movlw	82
  4206   00258A  EC2D  F014         	call	_I2C_2_Master_Write
  4207                           
  4208                           ;color.c: 68:  I2C_2_Master_Write(0xA0 | 0x18);
  4209   00258E  0EB8               	movlw	184
  4210   002590  EC2D  F014         	call	_I2C_2_Master_Write
  4211                           
  4212                           ;color.c: 69:  I2C_2_Master_RepStart();
  4213   002594  EC39  F014         	call	_I2C_2_Master_RepStart	;wreg free
  4214                           
  4215                           ;color.c: 70:  I2C_2_Master_Write(0x52 | 0x01);
  4216   002598  0E53               	movlw	83
  4217   00259A  EC2D  F014         	call	_I2C_2_Master_Write
  4218                           
  4219                           ;color.c: 71:  tmp=I2C_2_Master_Read(1);
  4220   00259E  0E01               	movlw	1
  4221   0025A0  EC3A  F013         	call	_I2C_2_Master_Read
  4222   0025A4  6E07               	movwf	??_color_read_Green^0,c
  4223   0025A6  5007               	movf	??_color_read_Green^0,w,c
  4224   0025A8  6E0A               	movwf	color_read_Green@tmp^0,c
  4225   0025AA  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  4226                           
  4227                           ;color.c: 72:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4228   0025AC  0E00               	movlw	0
  4229   0025AE  EC3A  F013         	call	_I2C_2_Master_Read
  4230   0025B2  6E07               	movwf	??_color_read_Green^0,c
  4231   0025B4  5007               	movf	??_color_read_Green^0,w,c
  4232   0025B6  6E09               	movwf	(??_color_read_Green+2)^0,c
  4233   0025B8  6A08               	clrf	(??_color_read_Green+1)^0,c
  4234   0025BA  500A               	movf	color_read_Green@tmp^0,w,c
  4235   0025BC  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  4236   0025BE  6E0A               	movwf	color_read_Green@tmp^0,c
  4237   0025C0  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  4238   0025C2  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  4239   0025C4  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  4240                           
  4241                           ;color.c: 73:  I2C_2_Master_Stop();
  4242   0025C6  EC3E  F014         	call	_I2C_2_Master_Stop	;wreg free
  4243   0025CA                     
  4244                           ;color.c: 74:  return tmp;
  4245   0025CA  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  4246   0025CE  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  4247   0025D2  0012               	return		;funcret
  4248   0025D4                     __end_of_color_read_Green:
  4249                           	callstack 0
  4250                           
  4251 ;; *************** function _color_read_Clear *****************
  4252 ;; Defined at:
  4253 ;;		line 91 in file "color.c"
  4254 ;; Parameters:    Size  Location     Type
  4255 ;;		None
  4256 ;; Auto vars:     Size  Location     Type
  4257 ;;  tmp             2    9[COMRAM] unsigned int 
  4258 ;; Return value:  Size  Location     Type
  4259 ;;                  2    4[COMRAM] unsigned int 
  4260 ;; Registers used:
  4261 ;;		wreg, status,2, status,0, cstack
  4262 ;; Tracked objects:
  4263 ;;		On entry : 0/0
  4264 ;;		On exit  : 0/0
  4265 ;;		Unchanged: 0/0
  4266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4267 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4268 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4269 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4270 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4271 ;;Total ram usage:        7 bytes
  4272 ;; Hardware stack levels used: 1
  4273 ;; Hardware stack levels required when called: 4
  4274 ;; This function calls:
  4275 ;;		_I2C_2_Master_Read
  4276 ;;		_I2C_2_Master_RepStart
  4277 ;;		_I2C_2_Master_Start
  4278 ;;		_I2C_2_Master_Stop
  4279 ;;		_I2C_2_Master_Write
  4280 ;; This function is called by:
  4281 ;;		_main
  4282 ;; This function uses a non-reentrant model
  4283 ;;
  4284                           
  4285                           	psect	text10
  4286   0025D4                     __ptext10:
  4287                           	callstack 0
  4288   0025D4                     _color_read_Clear:
  4289                           	callstack 26
  4290   0025D4                     
  4291                           ;color.c: 93:  unsigned int tmp;;color.c: 94:  I2C_2_Master_Start();
  4292   0025D4  EC43  F014         	call	_I2C_2_Master_Start	;wreg free
  4293                           
  4294                           ;color.c: 95:  I2C_2_Master_Write(0x52 | 0x00);
  4295   0025D8  0E52               	movlw	82
  4296   0025DA  EC2D  F014         	call	_I2C_2_Master_Write
  4297                           
  4298                           ;color.c: 96:  I2C_2_Master_Write(0xA0 | 0x14);
  4299   0025DE  0EB4               	movlw	180
  4300   0025E0  EC2D  F014         	call	_I2C_2_Master_Write
  4301                           
  4302                           ;color.c: 97:  I2C_2_Master_RepStart();
  4303   0025E4  EC39  F014         	call	_I2C_2_Master_RepStart	;wreg free
  4304                           
  4305                           ;color.c: 98:  I2C_2_Master_Write(0x52 | 0x01);
  4306   0025E8  0E53               	movlw	83
  4307   0025EA  EC2D  F014         	call	_I2C_2_Master_Write
  4308                           
  4309                           ;color.c: 99:  tmp=I2C_2_Master_Read(1);
  4310   0025EE  0E01               	movlw	1
  4311   0025F0  EC3A  F013         	call	_I2C_2_Master_Read
  4312   0025F4  6E07               	movwf	??_color_read_Clear^0,c
  4313   0025F6  5007               	movf	??_color_read_Clear^0,w,c
  4314   0025F8  6E0A               	movwf	color_read_Clear@tmp^0,c
  4315   0025FA  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  4316                           
  4317                           ;color.c: 100:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4318   0025FC  0E00               	movlw	0
  4319   0025FE  EC3A  F013         	call	_I2C_2_Master_Read
  4320   002602  6E07               	movwf	??_color_read_Clear^0,c
  4321   002604  5007               	movf	??_color_read_Clear^0,w,c
  4322   002606  6E09               	movwf	(??_color_read_Clear+2)^0,c
  4323   002608  6A08               	clrf	(??_color_read_Clear+1)^0,c
  4324   00260A  500A               	movf	color_read_Clear@tmp^0,w,c
  4325   00260C  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  4326   00260E  6E0A               	movwf	color_read_Clear@tmp^0,c
  4327   002610  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  4328   002612  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  4329   002614  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  4330                           
  4331                           ;color.c: 101:  I2C_2_Master_Stop();
  4332   002616  EC3E  F014         	call	_I2C_2_Master_Stop	;wreg free
  4333   00261A                     
  4334                           ;color.c: 102:  return tmp;
  4335   00261A  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  4336   00261E  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  4337   002622  0012               	return		;funcret
  4338   002624                     __end_of_color_read_Clear:
  4339                           	callstack 0
  4340                           
  4341 ;; *************** function _color_read_Blue *****************
  4342 ;; Defined at:
  4343 ;;		line 77 in file "color.c"
  4344 ;; Parameters:    Size  Location     Type
  4345 ;;		None
  4346 ;; Auto vars:     Size  Location     Type
  4347 ;;  tmp             2    9[COMRAM] unsigned int 
  4348 ;; Return value:  Size  Location     Type
  4349 ;;                  2    4[COMRAM] unsigned int 
  4350 ;; Registers used:
  4351 ;;		wreg, status,2, status,0, cstack
  4352 ;; Tracked objects:
  4353 ;;		On entry : 0/0
  4354 ;;		On exit  : 0/0
  4355 ;;		Unchanged: 0/0
  4356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4357 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4358 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4359 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4360 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4361 ;;Total ram usage:        7 bytes
  4362 ;; Hardware stack levels used: 1
  4363 ;; Hardware stack levels required when called: 4
  4364 ;; This function calls:
  4365 ;;		_I2C_2_Master_Read
  4366 ;;		_I2C_2_Master_RepStart
  4367 ;;		_I2C_2_Master_Start
  4368 ;;		_I2C_2_Master_Stop
  4369 ;;		_I2C_2_Master_Write
  4370 ;; This function is called by:
  4371 ;;		_main
  4372 ;; This function uses a non-reentrant model
  4373 ;;
  4374                           
  4375                           	psect	text11
  4376   002624                     __ptext11:
  4377                           	callstack 0
  4378   002624                     _color_read_Blue:
  4379                           	callstack 26
  4380   002624                     
  4381                           ;color.c: 79:  unsigned int tmp;;color.c: 80:  I2C_2_Master_Start();
  4382   002624  EC43  F014         	call	_I2C_2_Master_Start	;wreg free
  4383                           
  4384                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x00);
  4385   002628  0E52               	movlw	82
  4386   00262A  EC2D  F014         	call	_I2C_2_Master_Write
  4387                           
  4388                           ;color.c: 82:  I2C_2_Master_Write(0xA0 | 0x1A);
  4389   00262E  0EBA               	movlw	186
  4390   002630  EC2D  F014         	call	_I2C_2_Master_Write
  4391                           
  4392                           ;color.c: 83:  I2C_2_Master_RepStart();
  4393   002634  EC39  F014         	call	_I2C_2_Master_RepStart	;wreg free
  4394                           
  4395                           ;color.c: 84:  I2C_2_Master_Write(0x52 | 0x01);
  4396   002638  0E53               	movlw	83
  4397   00263A  EC2D  F014         	call	_I2C_2_Master_Write
  4398                           
  4399                           ;color.c: 85:  tmp=I2C_2_Master_Read(1);
  4400   00263E  0E01               	movlw	1
  4401   002640  EC3A  F013         	call	_I2C_2_Master_Read
  4402   002644  6E07               	movwf	??_color_read_Blue^0,c
  4403   002646  5007               	movf	??_color_read_Blue^0,w,c
  4404   002648  6E0A               	movwf	color_read_Blue@tmp^0,c
  4405   00264A  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  4406                           
  4407                           ;color.c: 86:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4408   00264C  0E00               	movlw	0
  4409   00264E  EC3A  F013         	call	_I2C_2_Master_Read
  4410   002652  6E07               	movwf	??_color_read_Blue^0,c
  4411   002654  5007               	movf	??_color_read_Blue^0,w,c
  4412   002656  6E09               	movwf	(??_color_read_Blue+2)^0,c
  4413   002658  6A08               	clrf	(??_color_read_Blue+1)^0,c
  4414   00265A  500A               	movf	color_read_Blue@tmp^0,w,c
  4415   00265C  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  4416   00265E  6E0A               	movwf	color_read_Blue@tmp^0,c
  4417   002660  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  4418   002662  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  4419   002664  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  4420                           
  4421                           ;color.c: 87:  I2C_2_Master_Stop();
  4422   002666  EC3E  F014         	call	_I2C_2_Master_Stop	;wreg free
  4423   00266A                     
  4424                           ;color.c: 88:  return tmp;
  4425   00266A  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  4426   00266E  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  4427   002672  0012               	return		;funcret
  4428   002674                     __end_of_color_read_Blue:
  4429                           	callstack 0
  4430                           
  4431 ;; *************** function _I2C_2_Master_RepStart *****************
  4432 ;; Defined at:
  4433 ;;		line 33 in file "i2c.c"
  4434 ;; Parameters:    Size  Location     Type
  4435 ;;		None
  4436 ;; Auto vars:     Size  Location     Type
  4437 ;;		None
  4438 ;; Return value:  Size  Location     Type
  4439 ;;                  1    wreg      void 
  4440 ;; Registers used:
  4441 ;;		wreg, status,2, status,0, cstack
  4442 ;; Tracked objects:
  4443 ;;		On entry : 0/0
  4444 ;;		On exit  : 0/0
  4445 ;;		Unchanged: 0/0
  4446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4451 ;;Total ram usage:        0 bytes
  4452 ;; Hardware stack levels used: 1
  4453 ;; Hardware stack levels required when called: 3
  4454 ;; This function calls:
  4455 ;;		_I2C_2_Master_Idle
  4456 ;; This function is called by:
  4457 ;;		_color_read_Red
  4458 ;;		_color_read_Green
  4459 ;;		_color_read_Blue
  4460 ;;		_color_read_Clear
  4461 ;; This function uses a non-reentrant model
  4462 ;;
  4463                           
  4464                           	psect	text12
  4465   002872                     __ptext12:
  4466                           	callstack 0
  4467   002872                     _I2C_2_Master_RepStart:
  4468                           	callstack 26
  4469   002872                     
  4470                           ;i2c.c: 35:   I2C_2_Master_Idle();
  4471   002872  ECC1  F013         	call	_I2C_2_Master_Idle	;wreg free
  4472   002876                     
  4473                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  4474   002876  010E               	movlb	14	; () banked
  4475   002878  83DA               	bsf	218,1,b	;volatile
  4476   00287A                     
  4477                           ; BSR set to: 14
  4478   00287A  0012               	return		;funcret
  4479   00287C                     __end_of_I2C_2_Master_RepStart:
  4480                           	callstack 0
  4481                           
  4482 ;; *************** function _I2C_2_Master_Read *****************
  4483 ;; Defined at:
  4484 ;;		line 51 in file "i2c.c"
  4485 ;; Parameters:    Size  Location     Type
  4486 ;;  ack             1    wreg     unsigned char 
  4487 ;; Auto vars:     Size  Location     Type
  4488 ;;  ack             1    2[COMRAM] unsigned char 
  4489 ;;  tmp             1    3[COMRAM] unsigned char 
  4490 ;; Return value:  Size  Location     Type
  4491 ;;                  1    wreg      unsigned char 
  4492 ;; Registers used:
  4493 ;;		wreg, status,2, status,0, cstack
  4494 ;; Tracked objects:
  4495 ;;		On entry : 0/0
  4496 ;;		On exit  : 0/0
  4497 ;;		Unchanged: 0/0
  4498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4500 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4501 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4502 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4503 ;;Total ram usage:        3 bytes
  4504 ;; Hardware stack levels used: 1
  4505 ;; Hardware stack levels required when called: 3
  4506 ;; This function calls:
  4507 ;;		_I2C_2_Master_Idle
  4508 ;; This function is called by:
  4509 ;;		_color_read_Red
  4510 ;;		_color_read_Green
  4511 ;;		_color_read_Blue
  4512 ;;		_color_read_Clear
  4513 ;; This function uses a non-reentrant model
  4514 ;;
  4515                           
  4516                           	psect	text13
  4517   002674                     __ptext13:
  4518                           	callstack 0
  4519   002674                     _I2C_2_Master_Read:
  4520                           	callstack 26
  4521                           
  4522                           ; BSR set to: 14
  4523                           ;incstack = 0
  4524                           ;I2C_2_Master_Read@ack stored from wreg
  4525   002674  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  4526   002676                     
  4527                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  4528   002676  ECC1  F013         	call	_I2C_2_Master_Idle	;wreg free
  4529   00267A                     
  4530                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  4531   00267A  010E               	movlb	14	; () banked
  4532   00267C  87DA               	bsf	218,3,b	;volatile
  4533                           
  4534                           ;i2c.c: 56:   I2C_2_Master_Idle();
  4535   00267E  ECC1  F013         	call	_I2C_2_Master_Idle	;wreg free
  4536   002682                     
  4537                           ;i2c.c: 57:   tmp = SSP2BUF;
  4538   002682  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  4539                           
  4540                           ;i2c.c: 58:   I2C_2_Master_Idle();
  4541   002686  ECC1  F013         	call	_I2C_2_Master_Idle	;wreg free
  4542   00268A                     
  4543                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  4544   00268A  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  4545   00268C  B4D8               	btfsc	status,2,c
  4546   00268E  EF4B  F013         	goto	u1961
  4547   002692  EF4F  F013         	goto	u1960
  4548   002696                     u1961:
  4549   002696  6A02               	clrf	??_I2C_2_Master_Read^0,c
  4550   002698  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  4551   00269A  EF50  F013         	goto	u1978
  4552   00269E                     u1960:
  4553   00269E  6A02               	clrf	??_I2C_2_Master_Read^0,c
  4554   0026A0                     u1978:
  4555   0026A0  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  4556   0026A2  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  4557   0026A4  010E               	movlb	14	; () banked
  4558   0026A6  51DA               	movf	218,w,b	;volatile
  4559   0026A8  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  4560   0026AA  0BDF               	andlw	-33
  4561   0026AC  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  4562   0026AE  6FDA               	movwf	218,b	;volatile
  4563   0026B0                     
  4564                           ; BSR set to: 14
  4565                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  4566   0026B0  89DA               	bsf	218,4,b	;volatile
  4567   0026B2                     
  4568                           ; BSR set to: 14
  4569                           ;i2c.c: 61:   return tmp;
  4570   0026B2  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  4571   0026B4                     
  4572                           ; BSR set to: 14
  4573   0026B4  0012               	return		;funcret
  4574   0026B6                     __end_of_I2C_2_Master_Read:
  4575                           	callstack 0
  4576                           
  4577 ;; *************** function _color_click_init *****************
  4578 ;; Defined at:
  4579 ;;		line 6 in file "color.c"
  4580 ;; Parameters:    Size  Location     Type
  4581 ;;		None
  4582 ;; Auto vars:     Size  Location     Type
  4583 ;;		None
  4584 ;; Return value:  Size  Location     Type
  4585 ;;                  1    wreg      void 
  4586 ;; Registers used:
  4587 ;;		wreg, status,2, status,0, cstack
  4588 ;; Tracked objects:
  4589 ;;		On entry : 0/0
  4590 ;;		On exit  : 0/0
  4591 ;;		Unchanged: 0/0
  4592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4595 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4596 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4597 ;;Total ram usage:        1 bytes
  4598 ;; Hardware stack levels used: 1
  4599 ;; Hardware stack levels required when called: 5
  4600 ;; This function calls:
  4601 ;;		_I2C_2_Master_Init
  4602 ;;		_color_writetoaddr
  4603 ;; This function is called by:
  4604 ;;		_main
  4605 ;; This function uses a non-reentrant model
  4606 ;;
  4607                           
  4608                           	psect	text14
  4609   0026B6                     __ptext14:
  4610                           	callstack 0
  4611   0026B6                     _color_click_init:
  4612                           	callstack 25
  4613   0026B6                     
  4614                           ;color.c: 9:     I2C_2_Master_Init();
  4615   0026B6  ECAC  F013         	call	_I2C_2_Master_Init	;wreg free
  4616   0026BA                     
  4617                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  4618   0026BA  0E01               	movlw	1
  4619   0026BC  6E03               	movwf	color_writetoaddr@value^0,c
  4620   0026BE  0E00               	movlw	0
  4621   0026C0  ECF8  F013         	call	_color_writetoaddr
  4622   0026C4                     
  4623                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  4624   0026C4  0E3F               	movlw	63
  4625   0026C6  6E05               	movwf	??_color_click_init^0,c
  4626   0026C8  0E55               	movlw	85
  4627   0026CA                     u3387:
  4628   0026CA  2EE8               	decfsz	wreg,f,c
  4629   0026CC  D7FE               	bra	u3387
  4630   0026CE  2E05               	decfsz	??_color_click_init^0,f,c
  4631   0026D0  D7FC               	bra	u3387
  4632   0026D2  F000               	nop	
  4633   0026D4                     
  4634                           ;color.c: 16:  color_writetoaddr(0x00, 0x03);
  4635   0026D4  0E03               	movlw	3
  4636   0026D6  6E03               	movwf	color_writetoaddr@value^0,c
  4637   0026D8  0E00               	movlw	0
  4638   0026DA  ECF8  F013         	call	_color_writetoaddr
  4639   0026DE                     
  4640                           ;color.c: 19:  color_writetoaddr(0x01, 0xD5);
  4641   0026DE  0ED5               	movlw	213
  4642   0026E0  6E03               	movwf	color_writetoaddr@value^0,c
  4643   0026E2  0E01               	movlw	1
  4644   0026E4  ECF8  F013         	call	_color_writetoaddr
  4645   0026E8                     
  4646                           ;color.c: 22:     LATFbits.LATF7 = 0;
  4647   0026E8  9E7E               	bcf	126,7,c	;volatile
  4648   0026EA                     
  4649                           ;color.c: 23:     LATGbits.LATG1 = 0;
  4650   0026EA  927F               	bcf	127,1,c	;volatile
  4651   0026EC                     
  4652                           ;color.c: 24:     LATAbits.LATA4 = 0;
  4653   0026EC  9879               	bcf	121,4,c	;volatile
  4654   0026EE                     
  4655                           ;color.c: 26:     TRISFbits.TRISF7 = 0;
  4656   0026EE  9E86               	bcf	134,7,c	;volatile
  4657   0026F0                     
  4658                           ;color.c: 27:     TRISGbits.TRISG1 = 0;
  4659   0026F0  9287               	bcf	135,1,c	;volatile
  4660   0026F2                     
  4661                           ;color.c: 28:     TRISAbits.TRISA4 = 0;
  4662   0026F2  9881               	bcf	129,4,c	;volatile
  4663   0026F4  0012               	return		;funcret
  4664   0026F6                     __end_of_color_click_init:
  4665                           	callstack 0
  4666                           
  4667 ;; *************** function _color_writetoaddr *****************
  4668 ;; Defined at:
  4669 ;;		line 33 in file "color.c"
  4670 ;; Parameters:    Size  Location     Type
  4671 ;;  address         1    wreg     unsigned char 
  4672 ;;  value           1    2[COMRAM] unsigned char 
  4673 ;; Auto vars:     Size  Location     Type
  4674 ;;  address         1    3[COMRAM] unsigned char 
  4675 ;; Return value:  Size  Location     Type
  4676 ;;                  1    wreg      void 
  4677 ;; Registers used:
  4678 ;;		wreg, status,2, status,0, cstack
  4679 ;; Tracked objects:
  4680 ;;		On entry : 0/0
  4681 ;;		On exit  : 0/0
  4682 ;;		Unchanged: 0/0
  4683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4684 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4685 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4687 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4688 ;;Total ram usage:        2 bytes
  4689 ;; Hardware stack levels used: 1
  4690 ;; Hardware stack levels required when called: 4
  4691 ;; This function calls:
  4692 ;;		_I2C_2_Master_Start
  4693 ;;		_I2C_2_Master_Stop
  4694 ;;		_I2C_2_Master_Write
  4695 ;; This function is called by:
  4696 ;;		_color_click_init
  4697 ;; This function uses a non-reentrant model
  4698 ;;
  4699                           
  4700                           	psect	text15
  4701   0027F0                     __ptext15:
  4702                           	callstack 0
  4703   0027F0                     _color_writetoaddr:
  4704                           	callstack 25
  4705                           
  4706                           ;incstack = 0
  4707                           ;color_writetoaddr@address stored from wreg
  4708   0027F0  6E04               	movwf	color_writetoaddr@address^0,c
  4709   0027F2                     
  4710                           ;color.c: 34:     I2C_2_Master_Start();
  4711   0027F2  EC43  F014         	call	_I2C_2_Master_Start	;wreg free
  4712                           
  4713                           ;color.c: 35:     I2C_2_Master_Write(0x52 | 0x00);
  4714   0027F6  0E52               	movlw	82
  4715   0027F8  EC2D  F014         	call	_I2C_2_Master_Write
  4716                           
  4717                           ;color.c: 36:     I2C_2_Master_Write(0x80 | address);
  4718   0027FC  5004               	movf	color_writetoaddr@address^0,w,c
  4719   0027FE  0980               	iorlw	128
  4720   002800  EC2D  F014         	call	_I2C_2_Master_Write
  4721                           
  4722                           ;color.c: 37:     I2C_2_Master_Write(value);
  4723   002804  5003               	movf	color_writetoaddr@value^0,w,c
  4724   002806  EC2D  F014         	call	_I2C_2_Master_Write
  4725                           
  4726                           ;color.c: 38:     I2C_2_Master_Stop();
  4727   00280A  EC3E  F014         	call	_I2C_2_Master_Stop	;wreg free
  4728   00280E  0012               	return		;funcret
  4729   002810                     __end_of_color_writetoaddr:
  4730                           	callstack 0
  4731                           
  4732 ;; *************** function _I2C_2_Master_Write *****************
  4733 ;; Defined at:
  4734 ;;		line 45 in file "i2c.c"
  4735 ;; Parameters:    Size  Location     Type
  4736 ;;  data_byte       1    wreg     unsigned char 
  4737 ;; Auto vars:     Size  Location     Type
  4738 ;;  data_byte       1    1[COMRAM] unsigned char 
  4739 ;; Return value:  Size  Location     Type
  4740 ;;                  1    wreg      void 
  4741 ;; Registers used:
  4742 ;;		wreg, status,2, status,0, cstack
  4743 ;; Tracked objects:
  4744 ;;		On entry : 0/0
  4745 ;;		On exit  : 0/0
  4746 ;;		Unchanged: 0/0
  4747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4749 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4751 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4752 ;;Total ram usage:        1 bytes
  4753 ;; Hardware stack levels used: 1
  4754 ;; Hardware stack levels required when called: 3
  4755 ;; This function calls:
  4756 ;;		_I2C_2_Master_Idle
  4757 ;; This function is called by:
  4758 ;;		_color_writetoaddr
  4759 ;;		_color_read_Red
  4760 ;;		_color_read_Green
  4761 ;;		_color_read_Blue
  4762 ;;		_color_read_Clear
  4763 ;; This function uses a non-reentrant model
  4764 ;;
  4765                           
  4766                           	psect	text16
  4767   00285A                     __ptext16:
  4768                           	callstack 0
  4769   00285A                     _I2C_2_Master_Write:
  4770                           	callstack 26
  4771                           
  4772                           ;incstack = 0
  4773                           ;I2C_2_Master_Write@data_byte stored from wreg
  4774   00285A  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  4775   00285C                     
  4776                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  4777   00285C  ECC1  F013         	call	_I2C_2_Master_Idle	;wreg free
  4778   002860                     
  4779                           ;i2c.c: 48:   SSP2BUF = data_byte;
  4780   002860  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  4781   002864  0012               	return		;funcret
  4782   002866                     __end_of_I2C_2_Master_Write:
  4783                           	callstack 0
  4784                           
  4785 ;; *************** function _I2C_2_Master_Stop *****************
  4786 ;; Defined at:
  4787 ;;		line 39 in file "i2c.c"
  4788 ;; Parameters:    Size  Location     Type
  4789 ;;		None
  4790 ;; Auto vars:     Size  Location     Type
  4791 ;;		None
  4792 ;; Return value:  Size  Location     Type
  4793 ;;                  1    wreg      void 
  4794 ;; Registers used:
  4795 ;;		wreg, status,2, status,0, cstack
  4796 ;; Tracked objects:
  4797 ;;		On entry : 0/0
  4798 ;;		On exit  : 0/0
  4799 ;;		Unchanged: 0/0
  4800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4805 ;;Total ram usage:        0 bytes
  4806 ;; Hardware stack levels used: 1
  4807 ;; Hardware stack levels required when called: 3
  4808 ;; This function calls:
  4809 ;;		_I2C_2_Master_Idle
  4810 ;; This function is called by:
  4811 ;;		_color_writetoaddr
  4812 ;;		_color_read_Red
  4813 ;;		_color_read_Green
  4814 ;;		_color_read_Blue
  4815 ;;		_color_read_Clear
  4816 ;; This function uses a non-reentrant model
  4817 ;;
  4818                           
  4819                           	psect	text17
  4820   00287C                     __ptext17:
  4821                           	callstack 0
  4822   00287C                     _I2C_2_Master_Stop:
  4823                           	callstack 26
  4824   00287C                     
  4825                           ;i2c.c: 41:   I2C_2_Master_Idle();
  4826   00287C  ECC1  F013         	call	_I2C_2_Master_Idle	;wreg free
  4827   002880                     
  4828                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  4829   002880  010E               	movlb	14	; () banked
  4830   002882  85DA               	bsf	218,2,b	;volatile
  4831   002884                     
  4832                           ; BSR set to: 14
  4833   002884  0012               	return		;funcret
  4834   002886                     __end_of_I2C_2_Master_Stop:
  4835                           	callstack 0
  4836                           
  4837 ;; *************** function _I2C_2_Master_Start *****************
  4838 ;; Defined at:
  4839 ;;		line 27 in file "i2c.c"
  4840 ;; Parameters:    Size  Location     Type
  4841 ;;		None
  4842 ;; Auto vars:     Size  Location     Type
  4843 ;;		None
  4844 ;; Return value:  Size  Location     Type
  4845 ;;                  1    wreg      void 
  4846 ;; Registers used:
  4847 ;;		wreg, status,2, status,0, cstack
  4848 ;; Tracked objects:
  4849 ;;		On entry : 0/0
  4850 ;;		On exit  : 0/0
  4851 ;;		Unchanged: 0/0
  4852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4857 ;;Total ram usage:        0 bytes
  4858 ;; Hardware stack levels used: 1
  4859 ;; Hardware stack levels required when called: 3
  4860 ;; This function calls:
  4861 ;;		_I2C_2_Master_Idle
  4862 ;; This function is called by:
  4863 ;;		_color_writetoaddr
  4864 ;;		_color_read_Red
  4865 ;;		_color_read_Green
  4866 ;;		_color_read_Blue
  4867 ;;		_color_read_Clear
  4868 ;; This function uses a non-reentrant model
  4869 ;;
  4870                           
  4871                           	psect	text18
  4872   002886                     __ptext18:
  4873                           	callstack 0
  4874   002886                     _I2C_2_Master_Start:
  4875                           	callstack 26
  4876   002886                     
  4877                           ;i2c.c: 29:   I2C_2_Master_Idle();
  4878   002886  ECC1  F013         	call	_I2C_2_Master_Idle	;wreg free
  4879   00288A                     
  4880                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  4881   00288A  010E               	movlb	14	; () banked
  4882   00288C  81DA               	bsf	218,0,b	;volatile
  4883   00288E                     
  4884                           ; BSR set to: 14
  4885   00288E  0012               	return		;funcret
  4886   002890                     __end_of_I2C_2_Master_Start:
  4887                           	callstack 0
  4888                           
  4889 ;; *************** function _I2C_2_Master_Idle *****************
  4890 ;; Defined at:
  4891 ;;		line 22 in file "i2c.c"
  4892 ;; Parameters:    Size  Location     Type
  4893 ;;		None
  4894 ;; Auto vars:     Size  Location     Type
  4895 ;;		None
  4896 ;; Return value:  Size  Location     Type
  4897 ;;                  1    wreg      void 
  4898 ;; Registers used:
  4899 ;;		wreg, status,2, status,0
  4900 ;; Tracked objects:
  4901 ;;		On entry : 0/0
  4902 ;;		On exit  : 0/0
  4903 ;;		Unchanged: 0/0
  4904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4907 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4908 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4909 ;;Total ram usage:        1 bytes
  4910 ;; Hardware stack levels used: 1
  4911 ;; Hardware stack levels required when called: 2
  4912 ;; This function calls:
  4913 ;;		Nothing
  4914 ;; This function is called by:
  4915 ;;		_I2C_2_Master_Start
  4916 ;;		_I2C_2_Master_RepStart
  4917 ;;		_I2C_2_Master_Stop
  4918 ;;		_I2C_2_Master_Write
  4919 ;;		_I2C_2_Master_Read
  4920 ;; This function uses a non-reentrant model
  4921 ;;
  4922                           
  4923                           	psect	text19
  4924   002782                     __ptext19:
  4925                           	callstack 0
  4926   002782                     _I2C_2_Master_Idle:
  4927                           	callstack 26
  4928   002782                     l30:
  4929   002782  010E               	movlb	14	; () banked
  4930   002784  B5D8               	btfsc	216,2,b	;volatile
  4931   002786  EFC7  F013         	goto	u1741
  4932   00278A  EFC9  F013         	goto	u1740
  4933   00278E                     u1741:
  4934   00278E  EFC1  F013         	goto	l30
  4935   002792                     u1740:
  4936   002792                     
  4937                           ; BSR set to: 14
  4938   002792  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  4939   002796  0E1F               	movlw	31
  4940   002798  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  4941   00279A  A4D8               	btfss	status,2,c
  4942   00279C  EFD2  F013         	goto	u1751
  4943   0027A0  EFD4  F013         	goto	u1750
  4944   0027A4                     u1751:
  4945   0027A4  EFC1  F013         	goto	l30
  4946   0027A8                     u1750:
  4947   0027A8                     
  4948                           ; BSR set to: 14
  4949   0027A8  0012               	return		;funcret
  4950   0027AA                     __end_of_I2C_2_Master_Idle:
  4951                           	callstack 0
  4952                           
  4953 ;; *************** function _I2C_2_Master_Init *****************
  4954 ;; Defined at:
  4955 ;;		line 4 in file "i2c.c"
  4956 ;; Parameters:    Size  Location     Type
  4957 ;;		None
  4958 ;; Auto vars:     Size  Location     Type
  4959 ;;		None
  4960 ;; Return value:  Size  Location     Type
  4961 ;;                  1    wreg      void 
  4962 ;; Registers used:
  4963 ;;		wreg, status,2
  4964 ;; Tracked objects:
  4965 ;;		On entry : 0/0
  4966 ;;		On exit  : 0/0
  4967 ;;		Unchanged: 0/0
  4968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4973 ;;Total ram usage:        0 bytes
  4974 ;; Hardware stack levels used: 1
  4975 ;; Hardware stack levels required when called: 2
  4976 ;; This function calls:
  4977 ;;		Nothing
  4978 ;; This function is called by:
  4979 ;;		_main
  4980 ;;		_color_click_init
  4981 ;; This function uses a non-reentrant model
  4982 ;;
  4983                           
  4984                           	psect	text20
  4985   002758                     __ptext20:
  4986                           	callstack 0
  4987   002758                     _I2C_2_Master_Init:
  4988                           	callstack 27
  4989   002758                     
  4990                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  4991   002758  010E               	movlb	14	; () banked
  4992   00275A  51D9               	movf	217,w,b	;volatile
  4993   00275C  0BF0               	andlw	-16
  4994   00275E  0908               	iorlw	8
  4995   002760  6FD9               	movwf	217,b	;volatile
  4996   002762                     
  4997                           ; BSR set to: 14
  4998                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  4999   002762  8BD9               	bsf	217,5,b	;volatile
  5000                           
  5001                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  5002   002764  0E9F               	movlw	159
  5003   002766  6FD6               	movwf	214,b	;volatile
  5004   002768                     
  5005                           ; BSR set to: 14
  5006                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  5007   002768  8A84               	bsf	132,5,c	;volatile
  5008   00276A                     
  5009                           ; BSR set to: 14
  5010                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  5011   00276A  8C84               	bsf	132,6,c	;volatile
  5012   00276C                     
  5013                           ; BSR set to: 14
  5014                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  5015   00276C  9BA7               	bcf	167,5,b	;volatile
  5016   00276E                     
  5017                           ; BSR set to: 14
  5018                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  5019   00276E  9DA7               	bcf	167,6,b	;volatile
  5020                           
  5021                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  5022   002770  0E1D               	movlw	29
  5023   002772  6F1D               	movwf	29,b	;volatile
  5024                           
  5025                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  5026   002774  0E1E               	movlw	30
  5027   002776  6F1C               	movwf	28,b	;volatile
  5028                           
  5029                           ;i2c.c: 18:   RD5PPS=0x1C;
  5030   002778  0E1C               	movlw	28
  5031   00277A  6F6F               	movwf	111,b	;volatile
  5032                           
  5033                           ;i2c.c: 19:   RD6PPS=0x1B;
  5034   00277C  0E1B               	movlw	27
  5035   00277E  6F70               	movwf	112,b	;volatile
  5036   002780                     
  5037                           ; BSR set to: 14
  5038   002780  0012               	return		;funcret
  5039   002782                     __end_of_I2C_2_Master_Init:
  5040                           	callstack 0
  5041                           
  5042 ;; *************** function _carryoutstep *****************
  5043 ;; Defined at:
  5044 ;;		line 263 in file "dc_motor.c"
  5045 ;; Parameters:    Size  Location     Type
  5046 ;;  motorL          9    0[BANK0 ] struct DC_motor
  5047 ;;  motorR          9    9[BANK0 ] struct DC_motor
  5048 ;;  read            2   18[BANK0 ] PTR struct colors
  5049 ;;		 -> main@reading(8), 
  5050 ;;  mx              2   20[BANK0 ] PTR struct colors
  5051 ;;		 -> main@max(8), 
  5052 ;;  amb             2   22[BANK0 ] PTR struct colors
  5053 ;;		 -> main@ambient(8), 
  5054 ;;  step            1   24[BANK0 ] unsigned char 
  5055 ;; Auto vars:     Size  Location     Type
  5056 ;;		None
  5057 ;; Return value:  Size  Location     Type
  5058 ;;                  1    wreg      void 
  5059 ;; Registers used:
  5060 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5061 ;; Tracked objects:
  5062 ;;		On entry : 0/0
  5063 ;;		On exit  : 0/0
  5064 ;;		Unchanged: 0/0
  5065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5066 ;;      Params:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5069 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5070 ;;Total ram usage:       25 bytes
  5071 ;; Hardware stack levels used: 1
  5072 ;; Hardware stack levels required when called: 8
  5073 ;; This function calls:
  5074 ;;		_returnhome
  5075 ;;		_savepath
  5076 ;;		_smallmovement
  5077 ;;		_square
  5078 ;;		_turn180
  5079 ;;		_turnLeft135
  5080 ;;		_turnLeft90
  5081 ;;		_turnRight135
  5082 ;;		_turnRight90
  5083 ;; This function is called by:
  5084 ;;		_main
  5085 ;; This function uses a non-reentrant model
  5086 ;;
  5087                           
  5088                           	psect	text21
  5089   0014E2                     __ptext21:
  5090                           	callstack 0
  5091   0014E2                     _carryoutstep:
  5092                           	callstack 22
  5093   0014E2                     
  5094                           ;dc_motor.c: 263: void carryoutstep(DC_motor motorL, DC_motor motorR, struct colors *rea
      +                          d, struct colors *mx, struct colors *amb, char step);dc_motor.c: 264: {;dc_motor.c: 265:
      +                               if (step == 2){
  5095   0014E2  0E02               	movlw	2
  5096   0014E4  0100               	movlb	0	; () banked
  5097   0014E6  1978               	xorwf	carryoutstep@step& (0+255),w,b
  5098   0014E8  A4D8               	btfss	status,2,c
  5099   0014EA  EF79  F00A         	goto	u2651
  5100   0014EE  EF7B  F00A         	goto	u2650
  5101   0014F2                     u2651:
  5102   0014F2  EF89  F00A         	goto	l3123
  5103   0014F6                     u2650:
  5104   0014F6                     
  5105                           ; BSR set to: 0
  5106                           ;dc_motor.c: 266:     turnRight90(&motorL,&motorR);
  5107   0014F6  0E60               	movlw	low carryoutstep@motorL
  5108   0014F8  6E1E               	movwf	turnRight90@mL^0,c
  5109   0014FA  0E00               	movlw	high carryoutstep@motorL
  5110   0014FC  6E1F               	movwf	(turnRight90@mL+1)^0,c
  5111   0014FE  0E69               	movlw	low carryoutstep@motorR
  5112   001500  6E20               	movwf	turnRight90@mR^0,c
  5113   001502  0E00               	movlw	high carryoutstep@motorR
  5114   001504  6E21               	movwf	(turnRight90@mR+1)^0,c
  5115   001506  EC87  F00E         	call	_turnRight90	;wreg free
  5116   00150A                     
  5117                           ;dc_motor.c: 267:     LATHbits.LATH1=1;
  5118   00150A  8280               	bsf	128,1,c	;volatile
  5119   00150C                     
  5120                           ;dc_motor.c: 268:     savepath(2);}
  5121   00150C  0E02               	movlw	2
  5122   00150E  EC22  F014         	call	_savepath
  5123   001512                     l3123:
  5124                           
  5125                           ;dc_motor.c: 270:     if (step == 3){
  5126   001512  0E03               	movlw	3
  5127   001514  0100               	movlb	0	; () banked
  5128   001516  1978               	xorwf	carryoutstep@step& (0+255),w,b
  5129   001518  A4D8               	btfss	status,2,c
  5130   00151A  EF91  F00A         	goto	u2661
  5131   00151E  EF93  F00A         	goto	u2660
  5132   001522                     u2661:
  5133   001522  EFA0  F00A         	goto	l3129
  5134   001526                     u2660:
  5135   001526                     
  5136                           ; BSR set to: 0
  5137                           ;dc_motor.c: 271:     turnLeft90(&motorL,&motorR);
  5138   001526  0E60               	movlw	low carryoutstep@motorL
  5139   001528  6E1E               	movwf	turnLeft90@mL^0,c
  5140   00152A  0E00               	movlw	high carryoutstep@motorL
  5141   00152C  6E1F               	movwf	(turnLeft90@mL+1)^0,c
  5142   00152E  0E69               	movlw	low carryoutstep@motorR
  5143   001530  6E20               	movwf	turnLeft90@mR^0,c
  5144   001532  0E00               	movlw	high carryoutstep@motorR
  5145   001534  6E21               	movwf	(turnLeft90@mR+1)^0,c
  5146   001536  EC10  F00E         	call	_turnLeft90	;wreg free
  5147   00153A                     
  5148                           ;dc_motor.c: 272:     savepath(3);}
  5149   00153A  0E03               	movlw	3
  5150   00153C  EC22  F014         	call	_savepath
  5151   001540                     l3129:
  5152                           
  5153                           ;dc_motor.c: 274:     if (step == 4){
  5154   001540  0E04               	movlw	4
  5155   001542  0100               	movlb	0	; () banked
  5156   001544  1978               	xorwf	carryoutstep@step& (0+255),w,b
  5157   001546  A4D8               	btfss	status,2,c
  5158   001548  EFA8  F00A         	goto	u2671
  5159   00154C  EFAA  F00A         	goto	u2670
  5160   001550                     u2671:
  5161   001550  EFB7  F00A         	goto	l3135
  5162   001554                     u2670:
  5163   001554                     
  5164                           ; BSR set to: 0
  5165                           ;dc_motor.c: 275:     turn180(&motorL,&motorR);
  5166   001554  0E60               	movlw	low carryoutstep@motorL
  5167   001556  6E1E               	movwf	turn180@mL^0,c
  5168   001558  0E00               	movlw	high carryoutstep@motorL
  5169   00155A  6E1F               	movwf	(turn180@mL+1)^0,c
  5170   00155C  0E69               	movlw	low carryoutstep@motorR
  5171   00155E  6E20               	movwf	turn180@mR^0,c
  5172   001560  0E00               	movlw	high carryoutstep@motorR
  5173   001562  6E21               	movwf	(turn180@mR+1)^0,c
  5174   001564  EC70  F00F         	call	_turn180	;wreg free
  5175   001568                     
  5176                           ;dc_motor.c: 276:     savepath(4);}
  5177   001568  0E04               	movlw	4
  5178   00156A  EC22  F014         	call	_savepath
  5179   00156E                     l3135:
  5180                           
  5181                           ;dc_motor.c: 278:     if (step == 5){
  5182   00156E  0E05               	movlw	5
  5183   001570  0100               	movlb	0	; () banked
  5184   001572  1978               	xorwf	carryoutstep@step& (0+255),w,b
  5185   001574  A4D8               	btfss	status,2,c
  5186   001576  EFBF  F00A         	goto	u2681
  5187   00157A  EFC1  F00A         	goto	u2680
  5188   00157E                     u2681:
  5189   00157E  EFDD  F00A         	goto	l3143
  5190   001582                     u2680:
  5191   001582                     
  5192                           ; BSR set to: 0
  5193                           ;dc_motor.c: 279:     square(&motorL,&motorR, 0);
  5194   001582  0E60               	movlw	low carryoutstep@motorL
  5195   001584  6E1E               	movwf	square@mL^0,c
  5196   001586  0E00               	movlw	high carryoutstep@motorL
  5197   001588  6E1F               	movwf	(square@mL+1)^0,c
  5198   00158A  0E69               	movlw	low carryoutstep@motorR
  5199   00158C  6E20               	movwf	square@mR^0,c
  5200   00158E  0E00               	movlw	high carryoutstep@motorR
  5201   001590  6E21               	movwf	(square@mR+1)^0,c
  5202   001592  0E00               	movlw	0
  5203   001594  6E22               	movwf	square@dir^0,c
  5204   001596  EC81  F011         	call	_square	;wreg free
  5205                           
  5206                           ;dc_motor.c: 280:     turnRight90(&motorL,&motorR);
  5207   00159A  0E60               	movlw	low carryoutstep@motorL
  5208   00159C  6E1E               	movwf	turnRight90@mL^0,c
  5209   00159E  0E00               	movlw	high carryoutstep@motorL
  5210   0015A0  6E1F               	movwf	(turnRight90@mL+1)^0,c
  5211   0015A2  0E69               	movlw	low carryoutstep@motorR
  5212   0015A4  6E20               	movwf	turnRight90@mR^0,c
  5213   0015A6  0E00               	movlw	high carryoutstep@motorR
  5214   0015A8  6E21               	movwf	(turnRight90@mR+1)^0,c
  5215   0015AA  EC87  F00E         	call	_turnRight90	;wreg free
  5216   0015AE                     
  5217                           ;dc_motor.c: 281:     savepath(7);
  5218   0015AE  0E07               	movlw	7
  5219   0015B0  EC22  F014         	call	_savepath
  5220   0015B4                     
  5221                           ;dc_motor.c: 282:     savepath(2);
  5222   0015B4  0E02               	movlw	2
  5223   0015B6  EC22  F014         	call	_savepath
  5224   0015BA                     l3143:
  5225                           
  5226                           ;dc_motor.c: 285:     if (step == 6){
  5227   0015BA  0E06               	movlw	6
  5228   0015BC  0100               	movlb	0	; () banked
  5229   0015BE  1978               	xorwf	carryoutstep@step& (0+255),w,b
  5230   0015C0  A4D8               	btfss	status,2,c
  5231   0015C2  EFE5  F00A         	goto	u2691
  5232   0015C6  EFE7  F00A         	goto	u2690
  5233   0015CA                     u2691:
  5234   0015CA  EF03  F00B         	goto	l3151
  5235   0015CE                     u2690:
  5236   0015CE                     
  5237                           ; BSR set to: 0
  5238                           ;dc_motor.c: 286:     square(&motorL,&motorR, 0);
  5239   0015CE  0E60               	movlw	low carryoutstep@motorL
  5240   0015D0  6E1E               	movwf	square@mL^0,c
  5241   0015D2  0E00               	movlw	high carryoutstep@motorL
  5242   0015D4  6E1F               	movwf	(square@mL+1)^0,c
  5243   0015D6  0E69               	movlw	low carryoutstep@motorR
  5244   0015D8  6E20               	movwf	square@mR^0,c
  5245   0015DA  0E00               	movlw	high carryoutstep@motorR
  5246   0015DC  6E21               	movwf	(square@mR+1)^0,c
  5247   0015DE  0E00               	movlw	0
  5248   0015E0  6E22               	movwf	square@dir^0,c
  5249   0015E2  EC81  F011         	call	_square	;wreg free
  5250                           
  5251                           ;dc_motor.c: 287:     turnLeft90(&motorL,&motorR);
  5252   0015E6  0E60               	movlw	low carryoutstep@motorL
  5253   0015E8  6E1E               	movwf	turnLeft90@mL^0,c
  5254   0015EA  0E00               	movlw	high carryoutstep@motorL
  5255   0015EC  6E1F               	movwf	(turnLeft90@mL+1)^0,c
  5256   0015EE  0E69               	movlw	low carryoutstep@motorR
  5257   0015F0  6E20               	movwf	turnLeft90@mR^0,c
  5258   0015F2  0E00               	movlw	high carryoutstep@motorR
  5259   0015F4  6E21               	movwf	(turnLeft90@mR+1)^0,c
  5260   0015F6  EC10  F00E         	call	_turnLeft90	;wreg free
  5261   0015FA                     
  5262                           ;dc_motor.c: 288:     savepath(7);
  5263   0015FA  0E07               	movlw	7
  5264   0015FC  EC22  F014         	call	_savepath
  5265   001600                     
  5266                           ;dc_motor.c: 289:     savepath(3);
  5267   001600  0E03               	movlw	3
  5268   001602  EC22  F014         	call	_savepath
  5269   001606                     l3151:
  5270                           
  5271                           ;dc_motor.c: 292:     if (step == 7){
  5272   001606  0E07               	movlw	7
  5273   001608  0100               	movlb	0	; () banked
  5274   00160A  1978               	xorwf	carryoutstep@step& (0+255),w,b
  5275   00160C  A4D8               	btfss	status,2,c
  5276   00160E  EF0B  F00B         	goto	u2701
  5277   001612  EF0D  F00B         	goto	u2700
  5278   001616                     u2701:
  5279   001616  EF1A  F00B         	goto	l3157
  5280   00161A                     u2700:
  5281   00161A                     
  5282                           ; BSR set to: 0
  5283                           ;dc_motor.c: 293:     turnRight135(&motorL,&motorR);
  5284   00161A  0E60               	movlw	low carryoutstep@motorL
  5285   00161C  6E1E               	movwf	turnRight135@mL^0,c
  5286   00161E  0E00               	movlw	high carryoutstep@motorL
  5287   001620  6E1F               	movwf	(turnRight135@mL+1)^0,c
  5288   001622  0E69               	movlw	low carryoutstep@motorR
  5289   001624  6E20               	movwf	turnRight135@mR^0,c
  5290   001626  0E00               	movlw	high carryoutstep@motorR
  5291   001628  6E21               	movwf	(turnRight135@mR+1)^0,c
  5292   00162A  ECFC  F00E         	call	_turnRight135	;wreg free
  5293   00162E                     
  5294                           ;dc_motor.c: 294:     savepath(5);
  5295   00162E  0E05               	movlw	5
  5296   001630  EC22  F014         	call	_savepath
  5297   001634                     l3157:
  5298                           
  5299                           ;dc_motor.c: 297:     if (step == 8){
  5300   001634  0E08               	movlw	8
  5301   001636  0100               	movlb	0	; () banked
  5302   001638  1978               	xorwf	carryoutstep@step& (0+255),w,b
  5303   00163A  A4D8               	btfss	status,2,c
  5304   00163C  EF22  F00B         	goto	u2711
  5305   001640  EF24  F00B         	goto	u2710
  5306   001644                     u2711:
  5307   001644  EF31  F00B         	goto	l3163
  5308   001648                     u2710:
  5309   001648                     
  5310                           ; BSR set to: 0
  5311                           ;dc_motor.c: 298:     turnLeft135(&motorL,&motorR);
  5312   001648  0E60               	movlw	low carryoutstep@motorL
  5313   00164A  6E1E               	movwf	turnLeft135@mL^0,c
  5314   00164C  0E00               	movlw	high carryoutstep@motorL
  5315   00164E  6E1F               	movwf	(turnLeft135@mL+1)^0,c
  5316   001650  0E69               	movlw	low carryoutstep@motorR
  5317   001652  6E20               	movwf	turnLeft135@mR^0,c
  5318   001654  0E00               	movlw	high carryoutstep@motorR
  5319   001656  6E21               	movwf	(turnLeft135@mR+1)^0,c
  5320   001658  ECE4  F00F         	call	_turnLeft135	;wreg free
  5321   00165C                     
  5322                           ;dc_motor.c: 299:     savepath(6);
  5323   00165C  0E06               	movlw	6
  5324   00165E  EC22  F014         	call	_savepath
  5325   001662                     l3163:
  5326                           
  5327                           ;dc_motor.c: 302:     if (step == 9) {
  5328   001662  0E09               	movlw	9
  5329   001664  0100               	movlb	0	; () banked
  5330   001666  1978               	xorwf	carryoutstep@step& (0+255),w,b
  5331   001668  A4D8               	btfss	status,2,c
  5332   00166A  EF39  F00B         	goto	u2721
  5333   00166E  EF3B  F00B         	goto	u2720
  5334   001672                     u2721:
  5335   001672  EF5D  F00B         	goto	l210
  5336   001676                     u2720:
  5337   001676                     
  5338                           ; BSR set to: 0
  5339                           ;dc_motor.c: 305:         LATDbits.LATD3=1;
  5340   001676  867C               	bsf	124,3,c	;volatile
  5341                           
  5342                           ;dc_motor.c: 306:         LATDbits.LATD4=1;
  5343   001678  887C               	bsf	124,4,c	;volatile
  5344   00167A                     
  5345                           ; BSR set to: 0
  5346                           ;dc_motor.c: 307:         smallmovement(&motorL, &motorR, 1);
  5347   00167A  0E60               	movlw	low carryoutstep@motorL
  5348   00167C  6E1E               	movwf	smallmovement@mL^0,c
  5349   00167E  0E00               	movlw	high carryoutstep@motorL
  5350   001680  6E1F               	movwf	(smallmovement@mL+1)^0,c
  5351   001682  0E69               	movlw	low carryoutstep@motorR
  5352   001684  6E20               	movwf	smallmovement@mR^0,c
  5353   001686  0E00               	movlw	high carryoutstep@motorR
  5354   001688  6E21               	movwf	(smallmovement@mR+1)^0,c
  5355   00168A  0E01               	movlw	1
  5356   00168C  6E22               	movwf	smallmovement@dir^0,c
  5357   00168E  ECBD  F010         	call	_smallmovement	;wreg free
  5358   001692                     
  5359                           ;dc_motor.c: 308:         returnhome(motorL, motorR);
  5360   001692  EE20  F060         	lfsr	2,carryoutstep@motorL
  5361   001696  EE00  F037         	lfsr	0,returnhome@motorL
  5362   00169A  0E08               	movlw	8
  5363   00169C                     u2731:
  5364   00169C  CFDB FFEB          	movff	plusw2,plusw0
  5365   0016A0  06E8               	decf	wreg,f,c
  5366   0016A2  E2FC               	bc	u2731
  5367   0016A4  EE20  F069         	lfsr	2,carryoutstep@motorR
  5368   0016A8  EE00  F040         	lfsr	0,returnhome@motorR
  5369   0016AC  0E08               	movlw	8
  5370   0016AE                     u2741:
  5371   0016AE  CFDB FFEB          	movff	plusw2,plusw0
  5372   0016B2  06E8               	decf	wreg,f,c
  5373   0016B4  E2FC               	bc	u2741
  5374   0016B6  ECEE  F00C         	call	_returnhome	;wreg free
  5375   0016BA                     l210:
  5376   0016BA  0012               	return		;funcret
  5377   0016BC                     __end_of_carryoutstep:
  5378                           	callstack 0
  5379                           
  5380 ;; *************** function _smallmovement *****************
  5381 ;; Defined at:
  5382 ;;		line 245 in file "dc_motor.c"
  5383 ;; Parameters:    Size  Location     Type
  5384 ;;  mL              2   29[COMRAM] PTR struct DC_motor
  5385 ;;		 -> main@motorL(9), carryoutstep@motorL(9), 
  5386 ;;  mR              2   31[COMRAM] PTR struct DC_motor
  5387 ;;		 -> main@motorR(9), carryoutstep@motorR(9), 
  5388 ;;  dir             1   33[COMRAM] unsigned char 
  5389 ;; Auto vars:     Size  Location     Type
  5390 ;;		None
  5391 ;; Return value:  Size  Location     Type
  5392 ;;                  1    wreg      void 
  5393 ;; Registers used:
  5394 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5395 ;; Tracked objects:
  5396 ;;		On entry : 0/0
  5397 ;;		On exit  : 0/0
  5398 ;;		Unchanged: 0/0
  5399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5400 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5402 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5403 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5404 ;;Total ram usage:        6 bytes
  5405 ;; Hardware stack levels used: 1
  5406 ;; Hardware stack levels required when called: 5
  5407 ;; This function calls:
  5408 ;;		_setMotorPWM
  5409 ;;		_stop
  5410 ;; This function is called by:
  5411 ;;		_carryoutstep
  5412 ;;		_main
  5413 ;; This function uses a non-reentrant model
  5414 ;;
  5415                           
  5416                           	psect	text22
  5417   00217A                     __ptext22:
  5418                           	callstack 0
  5419   00217A                     _smallmovement:
  5420                           	callstack 25
  5421   00217A                     
  5422                           ;dc_motor.c: 245: void smallmovement(DC_motor *mL, DC_motor *mR, char dir);dc_motor.c: 2
      +                          46: {;dc_motor.c: 247:     stop(mL, mR);
  5423   00217A  C01E  F019         	movff	smallmovement@mL,stop@mL
  5424   00217E  C01F  F01A         	movff	smallmovement@mL+1,stop@mL+1
  5425   002182  C020  F01B         	movff	smallmovement@mR,stop@mR
  5426   002186  C021  F01C         	movff	smallmovement@mR+1,stop@mR+1
  5427   00218A  EC61  F012         	call	_stop	;wreg free
  5428   00218E                     
  5429                           ;dc_motor.c: 248:     mL->direction = dir;
  5430   00218E  EE20 F001          	lfsr	2,1
  5431   002192  501E               	movf	smallmovement@mL^0,w,c
  5432   002194  26D9               	addwf	fsr2l,f,c
  5433   002196  501F               	movf	(smallmovement@mL+1)^0,w,c
  5434   002198  22DA               	addwfc	fsr2h,f,c
  5435   00219A  C022  FFDF         	movff	smallmovement@dir,indf2
  5436   00219E                     
  5437                           ;dc_motor.c: 249:     mR->direction = dir;
  5438   00219E  EE20 F001          	lfsr	2,1
  5439   0021A2  5020               	movf	smallmovement@mR^0,w,c
  5440   0021A4  26D9               	addwf	fsr2l,f,c
  5441   0021A6  5021               	movf	(smallmovement@mR+1)^0,w,c
  5442   0021A8  22DA               	addwfc	fsr2h,f,c
  5443   0021AA  C022  FFDF         	movff	smallmovement@dir,indf2
  5444                           
  5445                           ;dc_motor.c: 251:     while (mL->power <= 55 || mR->power <= 55 ) {
  5446   0021AE  EFF6  F010         	goto	l2689
  5447   0021B2                     l2679:
  5448                           
  5449                           ;dc_motor.c: 252:         _delay((unsigned long)((10)*(64000000/4000.0)));
  5450   0021B2  0ED0               	movlw	208
  5451   0021B4  6E23               	movwf	??_smallmovement^0,c
  5452   0021B6  0ECA               	movlw	202
  5453   0021B8                     u3397:
  5454   0021B8  2EE8               	decfsz	wreg,f,c
  5455   0021BA  D7FE               	bra	u3397
  5456   0021BC  2E23               	decfsz	??_smallmovement^0,f,c
  5457   0021BE  D7FC               	bra	u3397
  5458   0021C0                     
  5459                           ;dc_motor.c: 253:         mL->power++;
  5460   0021C0  C01E  FFD9         	movff	smallmovement@mL,fsr2l
  5461   0021C4  C01F  FFDA         	movff	smallmovement@mL+1,fsr2h
  5462   0021C8  2ADF               	incf	indf2,f,c
  5463   0021CA                     
  5464                           ;dc_motor.c: 254:         mR->power++;
  5465   0021CA  C020  FFD9         	movff	smallmovement@mR,fsr2l
  5466   0021CE  C021  FFDA         	movff	smallmovement@mR+1,fsr2h
  5467   0021D2  2ADF               	incf	indf2,f,c
  5468   0021D4                     
  5469                           ;dc_motor.c: 255:         setMotorPWM(mL);
  5470   0021D4  C01E  F013         	movff	smallmovement@mL,setMotorPWM@m
  5471   0021D8  C01F  F014         	movff	smallmovement@mL+1,setMotorPWM@m+1
  5472   0021DC  EC38  F00C         	call	_setMotorPWM	;wreg free
  5473   0021E0                     
  5474                           ;dc_motor.c: 256:         setMotorPWM(mR);
  5475   0021E0  C020  F013         	movff	smallmovement@mR,setMotorPWM@m
  5476   0021E4  C021  F014         	movff	smallmovement@mR+1,setMotorPWM@m+1
  5477   0021E8  EC38  F00C         	call	_setMotorPWM	;wreg free
  5478   0021EC                     l2689:
  5479                           
  5480                           ;dc_motor.c: 251:     while (mL->power <= 55 || mR->power <= 55 ) {
  5481   0021EC  C01E  FFD9         	movff	smallmovement@mL,fsr2l
  5482   0021F0  C01F  FFDA         	movff	smallmovement@mL+1,fsr2h
  5483   0021F4  0E37               	movlw	55
  5484   0021F6  64DF               	cpfsgt	indf2,c
  5485   0021F8  EF00  F011         	goto	u1981
  5486   0021FC  EF02  F011         	goto	u1980
  5487   002200                     u1981:
  5488   002200  EFD9  F010         	goto	l2679
  5489   002204                     u1980:
  5490   002204  C020  FFD9         	movff	smallmovement@mR,fsr2l
  5491   002208  C021  FFDA         	movff	smallmovement@mR+1,fsr2h
  5492   00220C  0E37               	movlw	55
  5493   00220E  64DF               	cpfsgt	indf2,c
  5494   002210  EF0C  F011         	goto	u1991
  5495   002214  EF0E  F011         	goto	u1990
  5496   002218                     u1991:
  5497   002218  EFD9  F010         	goto	l2679
  5498   00221C                     u1990:
  5499   00221C                     
  5500                           ;dc_motor.c: 258:     _delay((unsigned long)((10)*(64000000/4000.0)));
  5501   00221C  0ED0               	movlw	208
  5502   00221E  6E23               	movwf	??_smallmovement^0,c
  5503   002220  0ECA               	movlw	202
  5504   002222                     u3407:
  5505   002222  2EE8               	decfsz	wreg,f,c
  5506   002224  D7FE               	bra	u3407
  5507   002226  2E23               	decfsz	??_smallmovement^0,f,c
  5508   002228  D7FC               	bra	u3407
  5509   00222A                     
  5510                           ;dc_motor.c: 259:     stop(mL, mR);
  5511   00222A  C01E  F019         	movff	smallmovement@mL,stop@mL
  5512   00222E  C01F  F01A         	movff	smallmovement@mL+1,stop@mL+1
  5513   002232  C020  F01B         	movff	smallmovement@mR,stop@mR
  5514   002236  C021  F01C         	movff	smallmovement@mR+1,stop@mR+1
  5515   00223A  EC61  F012         	call	_stop	;wreg free
  5516   00223E  0012               	return		;funcret
  5517   002240                     __end_of_smallmovement:
  5518                           	callstack 0
  5519                           
  5520 ;; *************** function _savepath *****************
  5521 ;; Defined at:
  5522 ;;		line 326 in file "dc_motor.c"
  5523 ;; Parameters:    Size  Location     Type
  5524 ;;  instruction     1    wreg     unsigned char 
  5525 ;; Auto vars:     Size  Location     Type
  5526 ;;  instruction     1    0[COMRAM] unsigned char 
  5527 ;; Return value:  Size  Location     Type
  5528 ;;                  1    wreg      void 
  5529 ;; Registers used:
  5530 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5531 ;; Tracked objects:
  5532 ;;		On entry : 0/0
  5533 ;;		On exit  : 0/0
  5534 ;;		Unchanged: 0/0
  5535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5537 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5539 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5540 ;;Total ram usage:        1 bytes
  5541 ;; Hardware stack levels used: 1
  5542 ;; Hardware stack levels required when called: 2
  5543 ;; This function calls:
  5544 ;;		Nothing
  5545 ;; This function is called by:
  5546 ;;		_carryoutstep
  5547 ;;		_main
  5548 ;; This function uses a non-reentrant model
  5549 ;;
  5550                           
  5551                           	psect	text23
  5552   002844                     __ptext23:
  5553                           	callstack 0
  5554   002844                     _savepath:
  5555                           	callstack 28
  5556                           
  5557                           ;incstack = 0
  5558                           ;savepath@instruction stored from wreg
  5559   002844  6E01               	movwf	savepath@instruction^0,c
  5560   002846                     
  5561                           ;dc_motor.c: 326: void savepath(char instruction);dc_motor.c: 327: {;dc_motor.c: 328:   
      +                            path[pathposition] = instruction;
  5562   002846  0E00               	movlw	low _path
  5563   002848  2455               	addwf	_pathposition^0,w,c
  5564   00284A  6ED9               	movwf	fsr2l,c
  5565   00284C  6ADA               	clrf	fsr2h,c
  5566   00284E  0E01               	movlw	high _path
  5567   002850  22DA               	addwfc	fsr2h,f,c
  5568   002852  C001  FFDF         	movff	savepath@instruction,indf2
  5569   002856                     
  5570                           ;dc_motor.c: 329:     pathposition++;
  5571   002856  2A55               	incf	_pathposition^0,f,c
  5572   002858  0012               	return		;funcret
  5573   00285A                     __end_of_savepath:
  5574                           	callstack 0
  5575                           
  5576 ;; *************** function _returnhome *****************
  5577 ;; Defined at:
  5578 ;;		line 340 in file "dc_motor.c"
  5579 ;; Parameters:    Size  Location     Type
  5580 ;;  motorL          9   54[COMRAM] struct DC_motor
  5581 ;;  motorR          9   63[COMRAM] struct DC_motor
  5582 ;; Auto vars:     Size  Location     Type
  5583 ;;		None
  5584 ;; Return value:  Size  Location     Type
  5585 ;;                  1    wreg      void 
  5586 ;; Registers used:
  5587 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5588 ;; Tracked objects:
  5589 ;;		On entry : 0/0
  5590 ;;		On exit  : 0/0
  5591 ;;		Unchanged: 0/0
  5592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5593 ;;      Params:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5595 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5596 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5597 ;;Total ram usage:       21 bytes
  5598 ;; Hardware stack levels used: 1
  5599 ;; Hardware stack levels required when called: 7
  5600 ;; This function calls:
  5601 ;;		_fullSpeedAhead
  5602 ;;		_returnstep
  5603 ;;		_square
  5604 ;;		_stop
  5605 ;; This function is called by:
  5606 ;;		_carryoutstep
  5607 ;;		_main
  5608 ;; This function uses a non-reentrant model
  5609 ;;
  5610                           
  5611                           	psect	text24
  5612   0019DC                     __ptext24:
  5613                           	callstack 0
  5614   0019DC                     _returnhome:
  5615                           	callstack 23
  5616   0019DC                     
  5617                           ;dc_motor.c: 340: void returnhome(DC_motor motorL, DC_motor motorR);dc_motor.c: 341: {;d
      +                          c_motor.c: 343:     LATFbits.LATF7 = 0;
  5618   0019DC  9E7E               	bcf	126,7,c	;volatile
  5619                           
  5620                           ;dc_motor.c: 344:     LATGbits.LATG1 = 0;
  5621   0019DE  927F               	bcf	127,1,c	;volatile
  5622                           
  5623                           ;dc_motor.c: 345:     LATAbits.LATA4 = 0;
  5624   0019E0  9879               	bcf	121,4,c	;volatile
  5625   0019E2                     
  5626                           ;dc_motor.c: 348:     pathposition--;
  5627   0019E2  0655               	decf	_pathposition^0,f,c
  5628                           
  5629                           ;dc_motor.c: 349:     timeposition--;
  5630   0019E4  0656               	decf	_timeposition^0,f,c
  5631                           
  5632                           ;dc_motor.c: 351:     while (pathposition >= 0) {
  5633   0019E6  EF77  F00D         	goto	l2729
  5634   0019EA                     l2705:
  5635                           
  5636                           ;dc_motor.c: 354:         if (path[pathposition] == 1) {
  5637   0019EA  0E00               	movlw	low _path
  5638   0019EC  2455               	addwf	_pathposition^0,w,c
  5639   0019EE  6ED9               	movwf	fsr2l,c
  5640   0019F0  6ADA               	clrf	fsr2h,c
  5641   0019F2  0E01               	movlw	high _path
  5642   0019F4  22DA               	addwfc	fsr2h,f,c
  5643   0019F6  04DE               	decf	postinc2,w,c
  5644   0019F8  A4D8               	btfss	status,2,c
  5645   0019FA  EF01  F00D         	goto	u2001
  5646   0019FE  EF03  F00D         	goto	u2000
  5647   001A02                     u2001:
  5648   001A02  EF41  F00D         	goto	l2721
  5649   001A06                     u2000:
  5650   001A06                     
  5651                           ;dc_motor.c: 355:             stop(&motorL, &motorR);
  5652   001A06  0E37               	movlw	low returnhome@motorL
  5653   001A08  6E19               	movwf	stop@mL^0,c
  5654   001A0A  0E00               	movlw	high returnhome@motorL
  5655   001A0C  6E1A               	movwf	(stop@mL+1)^0,c
  5656   001A0E  0E40               	movlw	low returnhome@motorR
  5657   001A10  6E1B               	movwf	stop@mR^0,c
  5658   001A12  0E00               	movlw	high returnhome@motorR
  5659   001A14  6E1C               	movwf	(stop@mR+1)^0,c
  5660   001A16  EC61  F012         	call	_stop	;wreg free
  5661   001A1A                     
  5662                           ;dc_motor.c: 356:             interruptenable = 0;
  5663   001A1A  0E00               	movlw	0
  5664   001A1C  6E54               	movwf	_interruptenable^0,c
  5665   001A1E                     
  5666                           ;dc_motor.c: 357:             fullSpeedAhead(&motorL, &motorR, 0);
  5667   001A1E  0E37               	movlw	low returnhome@motorL
  5668   001A20  6E19               	movwf	fullSpeedAhead@mL^0,c
  5669   001A22  0E00               	movlw	high returnhome@motorL
  5670   001A24  6E1A               	movwf	(fullSpeedAhead@mL+1)^0,c
  5671   001A26  0E40               	movlw	low returnhome@motorR
  5672   001A28  6E1B               	movwf	fullSpeedAhead@mR^0,c
  5673   001A2A  0E00               	movlw	high returnhome@motorR
  5674   001A2C  6E1C               	movwf	(fullSpeedAhead@mR+1)^0,c
  5675   001A2E  0E00               	movlw	0
  5676   001A30  6E1D               	movwf	fullSpeedAhead@dir^0,c
  5677   001A32  EC57  F010         	call	_fullSpeedAhead	;wreg free
  5678   001A36                     
  5679                           ;dc_motor.c: 358:             pathposition=pathposition-1;
  5680   001A36  0455               	decf	_pathposition^0,w,c
  5681   001A38  6E55               	movwf	_pathposition^0,c
  5682   001A3A                     l2715:
  5683   001A3A  5056               	movf	_timeposition^0,w,c
  5684   001A3C  0D02               	mullw	2
  5685   001A3E  0E00               	movlw	low _timearray
  5686   001A40  24F3               	addwf	243,w,c
  5687   001A42  6ED9               	movwf	fsr2l,c
  5688   001A44  0E02               	movlw	high _timearray
  5689   001A46  20F4               	addwfc	prodh,w,c
  5690   001A48  6EDA               	movwf	fsr2h,c
  5691   001A4A  50DE               	movf	postinc2,w,c
  5692   001A4C  5C52               	subwf	_timercount^0,w,c
  5693   001A4E  5053               	movf	(_timercount+1)^0,w,c
  5694   001A50  0A80               	xorlw	128
  5695   001A52  6E4B               	movwf	(??_returnhome+2)^0,c
  5696   001A54  50DE               	movf	postinc2,w,c
  5697   001A56  0A80               	xorlw	128
  5698   001A58  584B               	subwfb	(??_returnhome+2)^0,w,c
  5699   001A5A  A0D8               	btfss	status,0,c
  5700   001A5C  EF32  F00D         	goto	u2011
  5701   001A60  EF34  F00D         	goto	u2010
  5702   001A64                     u2011:
  5703   001A64  EF1D  F00D         	goto	l2715
  5704   001A68                     u2010:
  5705   001A68                     
  5706                           ;dc_motor.c: 363:             timeposition--;
  5707   001A68  0656               	decf	_timeposition^0,f,c
  5708   001A6A                     
  5709                           ;dc_motor.c: 364:             stop(&motorL, &motorR);
  5710   001A6A  0E37               	movlw	low returnhome@motorL
  5711   001A6C  6E19               	movwf	stop@mL^0,c
  5712   001A6E  0E00               	movlw	high returnhome@motorL
  5713   001A70  6E1A               	movwf	(stop@mL+1)^0,c
  5714   001A72  0E40               	movlw	low returnhome@motorR
  5715   001A74  6E1B               	movwf	stop@mR^0,c
  5716   001A76  0E00               	movlw	high returnhome@motorR
  5717   001A78  6E1C               	movwf	(stop@mR+1)^0,c
  5718   001A7A  EC61  F012         	call	_stop	;wreg free
  5719                           
  5720                           ;dc_motor.c: 365:             }
  5721   001A7E  EF77  F00D         	goto	l2729
  5722   001A82                     l2721:
  5723   001A82  0E00               	movlw	low _path
  5724   001A84  2455               	addwf	_pathposition^0,w,c
  5725   001A86  6ED9               	movwf	fsr2l,c
  5726   001A88  6ADA               	clrf	fsr2h,c
  5727   001A8A  0E01               	movlw	high _path
  5728   001A8C  22DA               	addwfc	fsr2h,f,c
  5729   001A8E  04DE               	decf	postinc2,w,c
  5730   001A90  B4D8               	btfsc	status,2,c
  5731   001A92  EF4D  F00D         	goto	u2021
  5732   001A96  EF4F  F00D         	goto	u2020
  5733   001A9A                     u2021:
  5734   001A9A  EF77  F00D         	goto	l2729
  5735   001A9E                     u2020:
  5736   001A9E                     
  5737                           ;dc_motor.c: 369:             returnstep(path[pathposition], motorL, motorR);
  5738   001A9E  EE20  F037         	lfsr	2,returnhome@motorL
  5739   001AA2  EE00  F024         	lfsr	0,returnstep@motorL
  5740   001AA6  0E08               	movlw	8
  5741   001AA8                     u2031:
  5742   001AA8  CFDB FFEB          	movff	plusw2,plusw0
  5743   001AAC  06E8               	decf	wreg,f,c
  5744   001AAE  E2FC               	bc	u2031
  5745   001AB0  EE20  F040         	lfsr	2,returnhome@motorR
  5746   001AB4  EE00  F02D         	lfsr	0,returnstep@motorR
  5747   001AB8  0E08               	movlw	8
  5748   001ABA                     u2041:
  5749   001ABA  CFDB FFEB          	movff	plusw2,plusw0
  5750   001ABE  06E8               	decf	wreg,f,c
  5751   001AC0  E2FC               	bc	u2041
  5752   001AC2  0E00               	movlw	low _path
  5753   001AC4  2455               	addwf	_pathposition^0,w,c
  5754   001AC6  6ED9               	movwf	fsr2l,c
  5755   001AC8  6ADA               	clrf	fsr2h,c
  5756   001ACA  0E01               	movlw	high _path
  5757   001ACC  22DA               	addwfc	fsr2h,f,c
  5758   001ACE  50DF               	movf	indf2,w,c
  5759   001AD0  EC20  F011         	call	_returnstep
  5760   001AD4                     
  5761                           ;dc_motor.c: 370:             square(&motorL, &motorR, 1);
  5762   001AD4  0E37               	movlw	low returnhome@motorL
  5763   001AD6  6E1E               	movwf	square@mL^0,c
  5764   001AD8  0E00               	movlw	high returnhome@motorL
  5765   001ADA  6E1F               	movwf	(square@mL+1)^0,c
  5766   001ADC  0E40               	movlw	low returnhome@motorR
  5767   001ADE  6E20               	movwf	square@mR^0,c
  5768   001AE0  0E00               	movlw	high returnhome@motorR
  5769   001AE2  6E21               	movwf	(square@mR+1)^0,c
  5770   001AE4  0E01               	movlw	1
  5771   001AE6  6E22               	movwf	square@dir^0,c
  5772   001AE8  EC81  F011         	call	_square	;wreg free
  5773   001AEC                     
  5774                           ;dc_motor.c: 371:             pathposition--;
  5775   001AEC  0655               	decf	_pathposition^0,f,c
  5776   001AEE                     l2729:
  5777                           
  5778                           ;dc_motor.c: 351:     while (pathposition >= 0) {
  5779   001AEE  BE55               	btfsc	_pathposition^0,7,c
  5780   001AF0  EF7E  F00D         	goto	u2050
  5781   001AF4  EF7C  F00D         	goto	u2051
  5782   001AF8                     u2051:
  5783   001AF8  EFF5  F00C         	goto	l2705
  5784   001AFC                     u2050:
  5785   001AFC                     
  5786                           ;dc_motor.c: 375:     LATDbits.LATD7 = 1;
  5787   001AFC  8E7C               	bsf	124,7,c	;volatile
  5788   001AFE                     
  5789                           ;dc_motor.c: 376:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5790   001AFE  0E29               	movlw	41
  5791   001B00  6E4A               	movwf	(??_returnhome+1)^0,c
  5792   001B02  0E96               	movlw	150
  5793   001B04  6E49               	movwf	??_returnhome^0,c
  5794   001B06  0E7F               	movlw	127
  5795   001B08                     u3417:
  5796   001B08  2EE8               	decfsz	wreg,f,c
  5797   001B0A  D7FE               	bra	u3417
  5798   001B0C  2E49               	decfsz	??_returnhome^0,f,c
  5799   001B0E  D7FC               	bra	u3417
  5800   001B10  2E4A               	decfsz	(??_returnhome+1)^0,f,c
  5801   001B12  D7FA               	bra	u3417
  5802   001B14  F000               	nop	
  5803   001B16  0003               	sleep		;# 
  5804   001B18  0012               	return		;funcret
  5805   001B1A                     __end_of_returnhome:
  5806                           	callstack 0
  5807                           
  5808 ;; *************** function _square *****************
  5809 ;; Defined at:
  5810 ;;		line 230 in file "dc_motor.c"
  5811 ;; Parameters:    Size  Location     Type
  5812 ;;  mL              2   29[COMRAM] PTR struct DC_motor
  5813 ;;		 -> main@motorL(9), returnhome@motorL(9), carryoutstep@motorL(9), 
  5814 ;;  mR              2   31[COMRAM] PTR struct DC_motor
  5815 ;;		 -> main@motorR(9), returnhome@motorR(9), carryoutstep@motorR(9), 
  5816 ;;  dir             1   33[COMRAM] unsigned char 
  5817 ;; Auto vars:     Size  Location     Type
  5818 ;;		None
  5819 ;; Return value:  Size  Location     Type
  5820 ;;                  1    wreg      void 
  5821 ;; Registers used:
  5822 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5823 ;; Tracked objects:
  5824 ;;		On entry : 0/0
  5825 ;;		On exit  : 0/0
  5826 ;;		Unchanged: 0/0
  5827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5828 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5830 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5831 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5832 ;;Total ram usage:        7 bytes
  5833 ;; Hardware stack levels used: 1
  5834 ;; Hardware stack levels required when called: 5
  5835 ;; This function calls:
  5836 ;;		_setMotorPWM
  5837 ;;		_stop
  5838 ;; This function is called by:
  5839 ;;		_carryoutstep
  5840 ;;		_returnhome
  5841 ;;		_main
  5842 ;; This function uses a non-reentrant model
  5843 ;;
  5844                           
  5845                           	psect	text25
  5846   002302                     __ptext25:
  5847                           	callstack 0
  5848   002302                     _square:
  5849                           	callstack 25
  5850   002302                     
  5851                           ;dc_motor.c: 230: void square(DC_motor *mL, DC_motor *mR, char dir);dc_motor.c: 231: {;d
      +                          c_motor.c: 232:     mL->direction = dir;
  5852   002302  EE20 F001          	lfsr	2,1
  5853   002306  501E               	movf	square@mL^0,w,c
  5854   002308  26D9               	addwf	fsr2l,f,c
  5855   00230A  501F               	movf	(square@mL+1)^0,w,c
  5856   00230C  22DA               	addwfc	fsr2h,f,c
  5857   00230E  C022  FFDF         	movff	square@dir,indf2
  5858                           
  5859                           ;dc_motor.c: 233:     mR->direction = dir;
  5860   002312  EE20 F001          	lfsr	2,1
  5861   002316  5020               	movf	square@mR^0,w,c
  5862   002318  26D9               	addwf	fsr2l,f,c
  5863   00231A  5021               	movf	(square@mR+1)^0,w,c
  5864   00231C  22DA               	addwfc	fsr2h,f,c
  5865   00231E  C022  FFDF         	movff	square@dir,indf2
  5866                           
  5867                           ;dc_motor.c: 234:     while (mL->power <= 60 || mR->power <= 60 ) {
  5868   002322  EFB0  F011         	goto	l2613
  5869   002326                     l2603:
  5870                           
  5871                           ;dc_motor.c: 235:         _delay((unsigned long)((10)*(64000000/4000.0)));
  5872   002326  0ED0               	movlw	208
  5873   002328  6E23               	movwf	??_square^0,c
  5874   00232A  0ECA               	movlw	202
  5875   00232C                     u3427:
  5876   00232C  2EE8               	decfsz	wreg,f,c
  5877   00232E  D7FE               	bra	u3427
  5878   002330  2E23               	decfsz	??_square^0,f,c
  5879   002332  D7FC               	bra	u3427
  5880   002334                     
  5881                           ;dc_motor.c: 236:         mL->power++;
  5882   002334  C01E  FFD9         	movff	square@mL,fsr2l
  5883   002338  C01F  FFDA         	movff	square@mL+1,fsr2h
  5884   00233C  2ADF               	incf	indf2,f,c
  5885   00233E                     
  5886                           ;dc_motor.c: 237:         mR->power++;
  5887   00233E  C020  FFD9         	movff	square@mR,fsr2l
  5888   002342  C021  FFDA         	movff	square@mR+1,fsr2h
  5889   002346  2ADF               	incf	indf2,f,c
  5890   002348                     
  5891                           ;dc_motor.c: 238:         setMotorPWM(mL);
  5892   002348  C01E  F013         	movff	square@mL,setMotorPWM@m
  5893   00234C  C01F  F014         	movff	square@mL+1,setMotorPWM@m+1
  5894   002350  EC38  F00C         	call	_setMotorPWM	;wreg free
  5895   002354                     
  5896                           ;dc_motor.c: 239:         setMotorPWM(mR);
  5897   002354  C020  F013         	movff	square@mR,setMotorPWM@m
  5898   002358  C021  F014         	movff	square@mR+1,setMotorPWM@m+1
  5899   00235C  EC38  F00C         	call	_setMotorPWM	;wreg free
  5900   002360                     l2613:
  5901                           
  5902                           ;dc_motor.c: 234:     while (mL->power <= 60 || mR->power <= 60 ) {
  5903   002360  C01E  FFD9         	movff	square@mL,fsr2l
  5904   002364  C01F  FFDA         	movff	square@mL+1,fsr2h
  5905   002368  0E3C               	movlw	60
  5906   00236A  64DF               	cpfsgt	indf2,c
  5907   00236C  EFBA  F011         	goto	u1891
  5908   002370  EFBC  F011         	goto	u1890
  5909   002374                     u1891:
  5910   002374  EF93  F011         	goto	l2603
  5911   002378                     u1890:
  5912   002378  C020  FFD9         	movff	square@mR,fsr2l
  5913   00237C  C021  FFDA         	movff	square@mR+1,fsr2h
  5914   002380  0E3C               	movlw	60
  5915   002382  64DF               	cpfsgt	indf2,c
  5916   002384  EFC6  F011         	goto	u1901
  5917   002388  EFC8  F011         	goto	u1900
  5918   00238C                     u1901:
  5919   00238C  EF93  F011         	goto	l2603
  5920   002390                     u1900:
  5921   002390                     
  5922                           ;dc_motor.c: 241:     _delay((unsigned long)((455)*(64000000/4000.0)));
  5923   002390  0E25               	movlw	37
  5924   002392  6E24               	movwf	(??_square+1)^0,c
  5925   002394  0EEF               	movlw	239
  5926   002396  6E23               	movwf	??_square^0,c
  5927   002398  0E71               	movlw	113
  5928   00239A                     u3437:
  5929   00239A  2EE8               	decfsz	wreg,f,c
  5930   00239C  D7FE               	bra	u3437
  5931   00239E  2E23               	decfsz	??_square^0,f,c
  5932   0023A0  D7FC               	bra	u3437
  5933   0023A2  2E24               	decfsz	(??_square+1)^0,f,c
  5934   0023A4  D7FA               	bra	u3437
  5935   0023A6  F000               	nop	
  5936   0023A8                     
  5937                           ;dc_motor.c: 242:     stop(mL, mR);
  5938   0023A8  C01E  F019         	movff	square@mL,stop@mL
  5939   0023AC  C01F  F01A         	movff	square@mL+1,stop@mL+1
  5940   0023B0  C020  F01B         	movff	square@mR,stop@mR
  5941   0023B4  C021  F01C         	movff	square@mR+1,stop@mR+1
  5942   0023B8  EC61  F012         	call	_stop	;wreg free
  5943   0023BC  0012               	return		;funcret
  5944   0023BE                     __end_of_square:
  5945                           	callstack 0
  5946                           
  5947 ;; *************** function _returnstep *****************
  5948 ;; Defined at:
  5949 ;;		line 381 in file "dc_motor.c"
  5950 ;; Parameters:    Size  Location     Type
  5951 ;;  instruction     1    wreg     unsigned char 
  5952 ;;  motorL          9   35[COMRAM] struct DC_motor
  5953 ;;  motorR          9   44[COMRAM] struct DC_motor
  5954 ;; Auto vars:     Size  Location     Type
  5955 ;;  instruction     1   53[COMRAM] unsigned char 
  5956 ;; Return value:  Size  Location     Type
  5957 ;;                  1    wreg      void 
  5958 ;; Registers used:
  5959 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5960 ;; Tracked objects:
  5961 ;;		On entry : 0/0
  5962 ;;		On exit  : 0/0
  5963 ;;		Unchanged: 0/0
  5964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5965 ;;      Params:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5966 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5968 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5969 ;;Total ram usage:       19 bytes
  5970 ;; Hardware stack levels used: 1
  5971 ;; Hardware stack levels required when called: 6
  5972 ;; This function calls:
  5973 ;;		_turn180
  5974 ;;		_turnLeft135
  5975 ;;		_turnLeft90
  5976 ;;		_turnRight135
  5977 ;;		_turnRight90
  5978 ;; This function is called by:
  5979 ;;		_returnhome
  5980 ;; This function uses a non-reentrant model
  5981 ;;
  5982                           
  5983                           	psect	text26
  5984   002240                     __ptext26:
  5985                           	callstack 0
  5986   002240                     _returnstep:
  5987                           	callstack 23
  5988                           
  5989                           ;incstack = 0
  5990                           ;returnstep@instruction stored from wreg
  5991   002240  6E36               	movwf	returnstep@instruction^0,c
  5992   002242                     
  5993                           ;dc_motor.c: 382:     if (instruction == 2) {turnLeft90(&motorL,&motorR);}
  5994   002242  0E02               	movlw	2
  5995   002244  1836               	xorwf	returnstep@instruction^0,w,c
  5996   002246  A4D8               	btfss	status,2,c
  5997   002248  EF28  F011         	goto	u1911
  5998   00224C  EF2A  F011         	goto	u1910
  5999   002250                     u1911:
  6000   002250  EF34  F011         	goto	l2625
  6001   002254                     u1910:
  6002   002254  0E24               	movlw	low returnstep@motorL
  6003   002256  6E1E               	movwf	turnLeft90@mL^0,c
  6004   002258  0E00               	movlw	high returnstep@motorL
  6005   00225A  6E1F               	movwf	(turnLeft90@mL+1)^0,c
  6006   00225C  0E2D               	movlw	low returnstep@motorR
  6007   00225E  6E20               	movwf	turnLeft90@mR^0,c
  6008   002260  0E00               	movlw	high returnstep@motorR
  6009   002262  6E21               	movwf	(turnLeft90@mR+1)^0,c
  6010   002264  EC10  F00E         	call	_turnLeft90	;wreg free
  6011   002268                     l2625:
  6012                           
  6013                           ;dc_motor.c: 383:     if (instruction == 3) {turnRight90(&motorL,&motorR);}
  6014   002268  0E03               	movlw	3
  6015   00226A  1836               	xorwf	returnstep@instruction^0,w,c
  6016   00226C  A4D8               	btfss	status,2,c
  6017   00226E  EF3B  F011         	goto	u1921
  6018   002272  EF3D  F011         	goto	u1920
  6019   002276                     u1921:
  6020   002276  EF47  F011         	goto	l2629
  6021   00227A                     u1920:
  6022   00227A  0E24               	movlw	low returnstep@motorL
  6023   00227C  6E1E               	movwf	turnRight90@mL^0,c
  6024   00227E  0E00               	movlw	high returnstep@motorL
  6025   002280  6E1F               	movwf	(turnRight90@mL+1)^0,c
  6026   002282  0E2D               	movlw	low returnstep@motorR
  6027   002284  6E20               	movwf	turnRight90@mR^0,c
  6028   002286  0E00               	movlw	high returnstep@motorR
  6029   002288  6E21               	movwf	(turnRight90@mR+1)^0,c
  6030   00228A  EC87  F00E         	call	_turnRight90	;wreg free
  6031   00228E                     l2629:
  6032                           
  6033                           ;dc_motor.c: 384:     if (instruction == 4) {turn180(&motorL,&motorR);}
  6034   00228E  0E04               	movlw	4
  6035   002290  1836               	xorwf	returnstep@instruction^0,w,c
  6036   002292  A4D8               	btfss	status,2,c
  6037   002294  EF4E  F011         	goto	u1931
  6038   002298  EF50  F011         	goto	u1930
  6039   00229C                     u1931:
  6040   00229C  EF5A  F011         	goto	l2633
  6041   0022A0                     u1930:
  6042   0022A0  0E24               	movlw	low returnstep@motorL
  6043   0022A2  6E1E               	movwf	turn180@mL^0,c
  6044   0022A4  0E00               	movlw	high returnstep@motorL
  6045   0022A6  6E1F               	movwf	(turn180@mL+1)^0,c
  6046   0022A8  0E2D               	movlw	low returnstep@motorR
  6047   0022AA  6E20               	movwf	turn180@mR^0,c
  6048   0022AC  0E00               	movlw	high returnstep@motorR
  6049   0022AE  6E21               	movwf	(turn180@mR+1)^0,c
  6050   0022B0  EC70  F00F         	call	_turn180	;wreg free
  6051   0022B4                     l2633:
  6052                           
  6053                           ;dc_motor.c: 385:     if (instruction == 5) {turnLeft135(&motorL,&motorR);}
  6054   0022B4  0E05               	movlw	5
  6055   0022B6  1836               	xorwf	returnstep@instruction^0,w,c
  6056   0022B8  A4D8               	btfss	status,2,c
  6057   0022BA  EF61  F011         	goto	u1941
  6058   0022BE  EF63  F011         	goto	u1940
  6059   0022C2                     u1941:
  6060   0022C2  EF6D  F011         	goto	l2637
  6061   0022C6                     u1940:
  6062   0022C6  0E24               	movlw	low returnstep@motorL
  6063   0022C8  6E1E               	movwf	turnLeft135@mL^0,c
  6064   0022CA  0E00               	movlw	high returnstep@motorL
  6065   0022CC  6E1F               	movwf	(turnLeft135@mL+1)^0,c
  6066   0022CE  0E2D               	movlw	low returnstep@motorR
  6067   0022D0  6E20               	movwf	turnLeft135@mR^0,c
  6068   0022D2  0E00               	movlw	high returnstep@motorR
  6069   0022D4  6E21               	movwf	(turnLeft135@mR+1)^0,c
  6070   0022D6  ECE4  F00F         	call	_turnLeft135	;wreg free
  6071   0022DA                     l2637:
  6072                           
  6073                           ;dc_motor.c: 386:     if (instruction == 6) {turnRight135(&motorL,&motorR);}
  6074   0022DA  0E06               	movlw	6
  6075   0022DC  1836               	xorwf	returnstep@instruction^0,w,c
  6076   0022DE  A4D8               	btfss	status,2,c
  6077   0022E0  EF74  F011         	goto	u1951
  6078   0022E4  EF76  F011         	goto	u1950
  6079   0022E8                     u1951:
  6080   0022E8  EF80  F011         	goto	l237
  6081   0022EC                     u1950:
  6082   0022EC  0E24               	movlw	low returnstep@motorL
  6083   0022EE  6E1E               	movwf	turnRight135@mL^0,c
  6084   0022F0  0E00               	movlw	high returnstep@motorL
  6085   0022F2  6E1F               	movwf	(turnRight135@mL+1)^0,c
  6086   0022F4  0E2D               	movlw	low returnstep@motorR
  6087   0022F6  6E20               	movwf	turnRight135@mR^0,c
  6088   0022F8  0E00               	movlw	high returnstep@motorR
  6089   0022FA  6E21               	movwf	(turnRight135@mR+1)^0,c
  6090   0022FC  ECFC  F00E         	call	_turnRight135	;wreg free
  6091   002300                     l237:
  6092   002300  0012               	return		;funcret
  6093   002302                     __end_of_returnstep:
  6094                           	callstack 0
  6095                           
  6096 ;; *************** function _turnRight90 *****************
  6097 ;; Defined at:
  6098 ;;		line 128 in file "dc_motor.c"
  6099 ;; Parameters:    Size  Location     Type
  6100 ;;  mL              2   29[COMRAM] PTR struct DC_motor
  6101 ;;		 -> returnstep@motorL(9), carryoutstep@motorL(9), 
  6102 ;;  mR              2   31[COMRAM] PTR struct DC_motor
  6103 ;;		 -> returnstep@motorR(9), carryoutstep@motorR(9), 
  6104 ;; Auto vars:     Size  Location     Type
  6105 ;;		None
  6106 ;; Return value:  Size  Location     Type
  6107 ;;                  1    wreg      void 
  6108 ;; Registers used:
  6109 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6110 ;; Tracked objects:
  6111 ;;		On entry : 0/0
  6112 ;;		On exit  : 0/0
  6113 ;;		Unchanged: 0/0
  6114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6115 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6117 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6118 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6119 ;;Total ram usage:        6 bytes
  6120 ;; Hardware stack levels used: 1
  6121 ;; Hardware stack levels required when called: 5
  6122 ;; This function calls:
  6123 ;;		_setMotorPWM
  6124 ;;		_stop
  6125 ;; This function is called by:
  6126 ;;		_carryoutstep
  6127 ;;		_returnstep
  6128 ;; This function uses a non-reentrant model
  6129 ;;
  6130                           
  6131                           	psect	text27
  6132   001D0E                     __ptext27:
  6133                           	callstack 0
  6134   001D0E                     _turnRight90:
  6135                           	callstack 23
  6136   001D0E                     
  6137                           ;dc_motor.c: 128: void turnRight90(DC_motor *mL, DC_motor *mR);dc_motor.c: 129: { stop(m
      +                          L, mR);
  6138   001D0E  C01E  F019         	movff	turnRight90@mL,stop@mL
  6139   001D12  C01F  F01A         	movff	turnRight90@mL+1,stop@mL+1
  6140   001D16  C020  F01B         	movff	turnRight90@mR,stop@mR
  6141   001D1A  C021  F01C         	movff	turnRight90@mR+1,stop@mR+1
  6142   001D1E  EC61  F012         	call	_stop	;wreg free
  6143   001D22                     
  6144                           ;dc_motor.c: 130:     mL->direction = 1;
  6145   001D22  EE20 F001          	lfsr	2,1
  6146   001D26  501E               	movf	turnRight90@mL^0,w,c
  6147   001D28  26D9               	addwf	fsr2l,f,c
  6148   001D2A  501F               	movf	(turnRight90@mL+1)^0,w,c
  6149   001D2C  22DA               	addwfc	fsr2h,f,c
  6150   001D2E  0E01               	movlw	1
  6151   001D30  6EDF               	movwf	indf2,c
  6152   001D32                     
  6153                           ;dc_motor.c: 131:     mR->direction = 0;
  6154   001D32  EE20 F001          	lfsr	2,1
  6155   001D36  5020               	movf	turnRight90@mR^0,w,c
  6156   001D38  26D9               	addwf	fsr2l,f,c
  6157   001D3A  5021               	movf	(turnRight90@mR+1)^0,w,c
  6158   001D3C  22DA               	addwfc	fsr2h,f,c
  6159   001D3E  0E00               	movlw	0
  6160   001D40  6EDF               	movwf	indf2,c
  6161   001D42                     
  6162                           ;dc_motor.c: 132:     mL->power = 20;
  6163   001D42  C01E  FFD9         	movff	turnRight90@mL,fsr2l
  6164   001D46  C01F  FFDA         	movff	turnRight90@mL+1,fsr2h
  6165   001D4A  0E14               	movlw	20
  6166   001D4C  6EDF               	movwf	indf2,c
  6167   001D4E                     
  6168                           ;dc_motor.c: 133:     mR->power = 20;
  6169   001D4E  C020  FFD9         	movff	turnRight90@mR,fsr2l
  6170   001D52  C021  FFDA         	movff	turnRight90@mR+1,fsr2h
  6171   001D56  0E14               	movlw	20
  6172   001D58  6EDF               	movwf	indf2,c
  6173                           
  6174                           ;dc_motor.c: 135:     while (mL->power <= 50 && mR->power <= 50 ) {
  6175   001D5A  EFCD  F00E         	goto	l2477
  6176   001D5E                     l2467:
  6177                           
  6178                           ;dc_motor.c: 136:         _delay((unsigned long)((5)*(64000000/4000.0)));
  6179   001D5E  0E68               	movlw	104
  6180   001D60  6E22               	movwf	??_turnRight90^0,c
  6181   001D62  0EE4               	movlw	228
  6182   001D64                     u3447:
  6183   001D64  2EE8               	decfsz	wreg,f,c
  6184   001D66  D7FE               	bra	u3447
  6185   001D68  2E22               	decfsz	??_turnRight90^0,f,c
  6186   001D6A  D7FC               	bra	u3447
  6187   001D6C  D000               	nop2	
  6188   001D6E                     
  6189                           ;dc_motor.c: 137:         mL->power++;
  6190   001D6E  C01E  FFD9         	movff	turnRight90@mL,fsr2l
  6191   001D72  C01F  FFDA         	movff	turnRight90@mL+1,fsr2h
  6192   001D76  2ADF               	incf	indf2,f,c
  6193   001D78                     
  6194                           ;dc_motor.c: 138:         mR->power++;
  6195   001D78  C020  FFD9         	movff	turnRight90@mR,fsr2l
  6196   001D7C  C021  FFDA         	movff	turnRight90@mR+1,fsr2h
  6197   001D80  2ADF               	incf	indf2,f,c
  6198   001D82                     
  6199                           ;dc_motor.c: 139:         setMotorPWM(mL);
  6200   001D82  C01E  F013         	movff	turnRight90@mL,setMotorPWM@m
  6201   001D86  C01F  F014         	movff	turnRight90@mL+1,setMotorPWM@m+1
  6202   001D8A  EC38  F00C         	call	_setMotorPWM	;wreg free
  6203   001D8E                     
  6204                           ;dc_motor.c: 140:         setMotorPWM(mR);
  6205   001D8E  C020  F013         	movff	turnRight90@mR,setMotorPWM@m
  6206   001D92  C021  F014         	movff	turnRight90@mR+1,setMotorPWM@m+1
  6207   001D96  EC38  F00C         	call	_setMotorPWM	;wreg free
  6208   001D9A                     l2477:
  6209                           
  6210                           ;dc_motor.c: 135:     while (mL->power <= 50 && mR->power <= 50 ) {
  6211   001D9A  C01E  FFD9         	movff	turnRight90@mL,fsr2l
  6212   001D9E  C01F  FFDA         	movff	turnRight90@mL+1,fsr2h
  6213   001DA2  0E33               	movlw	51
  6214   001DA4  60DF               	cpfslt	indf2,c
  6215   001DA6  EFD7  F00E         	goto	u1781
  6216   001DAA  EFD9  F00E         	goto	u1780
  6217   001DAE                     u1781:
  6218   001DAE  EFE5  F00E         	goto	l2481
  6219   001DB2                     u1780:
  6220   001DB2  C020  FFD9         	movff	turnRight90@mR,fsr2l
  6221   001DB6  C021  FFDA         	movff	turnRight90@mR+1,fsr2h
  6222   001DBA  0E32               	movlw	50
  6223   001DBC  64DF               	cpfsgt	indf2,c
  6224   001DBE  EFE3  F00E         	goto	u1791
  6225   001DC2  EFE5  F00E         	goto	u1790
  6226   001DC6                     u1791:
  6227   001DC6  EFAF  F00E         	goto	l2467
  6228   001DCA                     u1790:
  6229   001DCA                     l2481:
  6230                           
  6231                           ;dc_motor.c: 142:     _delay((unsigned long)((210)*(64000000/4000.0)));
  6232   001DCA  0E12               	movlw	18
  6233   001DCC  6E23               	movwf	(??_turnRight90+1)^0,c
  6234   001DCE  0E0C               	movlw	12
  6235   001DD0  6E22               	movwf	??_turnRight90^0,c
  6236   001DD2  0E95               	movlw	149
  6237   001DD4                     u3457:
  6238   001DD4  2EE8               	decfsz	wreg,f,c
  6239   001DD6  D7FE               	bra	u3457
  6240   001DD8  2E22               	decfsz	??_turnRight90^0,f,c
  6241   001DDA  D7FC               	bra	u3457
  6242   001DDC  2E23               	decfsz	(??_turnRight90+1)^0,f,c
  6243   001DDE  D7FA               	bra	u3457
  6244   001DE0  F000               	nop	
  6245   001DE2                     
  6246                           ;dc_motor.c: 143:     stop(mL, mR);
  6247   001DE2  C01E  F019         	movff	turnRight90@mL,stop@mL
  6248   001DE6  C01F  F01A         	movff	turnRight90@mL+1,stop@mL+1
  6249   001DEA  C020  F01B         	movff	turnRight90@mR,stop@mR
  6250   001DEE  C021  F01C         	movff	turnRight90@mR+1,stop@mR+1
  6251   001DF2  EC61  F012         	call	_stop	;wreg free
  6252   001DF6  0012               	return		;funcret
  6253   001DF8                     __end_of_turnRight90:
  6254                           	callstack 0
  6255                           
  6256 ;; *************** function _turnRight135 *****************
  6257 ;; Defined at:
  6258 ;;		line 168 in file "dc_motor.c"
  6259 ;; Parameters:    Size  Location     Type
  6260 ;;  mL              2   29[COMRAM] PTR struct DC_motor
  6261 ;;		 -> returnstep@motorL(9), carryoutstep@motorL(9), 
  6262 ;;  mR              2   31[COMRAM] PTR struct DC_motor
  6263 ;;		 -> returnstep@motorR(9), carryoutstep@motorR(9), 
  6264 ;; Auto vars:     Size  Location     Type
  6265 ;;		None
  6266 ;; Return value:  Size  Location     Type
  6267 ;;                  1    wreg      void 
  6268 ;; Registers used:
  6269 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6270 ;; Tracked objects:
  6271 ;;		On entry : 0/0
  6272 ;;		On exit  : 0/0
  6273 ;;		Unchanged: 0/0
  6274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6275 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6277 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6278 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6279 ;;Total ram usage:        6 bytes
  6280 ;; Hardware stack levels used: 1
  6281 ;; Hardware stack levels required when called: 5
  6282 ;; This function calls:
  6283 ;;		_setMotorPWM
  6284 ;;		_stop
  6285 ;; This function is called by:
  6286 ;;		_carryoutstep
  6287 ;;		_returnstep
  6288 ;; This function uses a non-reentrant model
  6289 ;;
  6290                           
  6291                           	psect	text28
  6292   001DF8                     __ptext28:
  6293                           	callstack 0
  6294   001DF8                     _turnRight135:
  6295                           	callstack 23
  6296   001DF8                     
  6297                           ;dc_motor.c: 168: void turnRight135(DC_motor *mL, DC_motor *mR);dc_motor.c: 169: {;dc_mo
      +                          tor.c: 170:     stop(mL, mR);
  6298   001DF8  C01E  F019         	movff	turnRight135@mL,stop@mL
  6299   001DFC  C01F  F01A         	movff	turnRight135@mL+1,stop@mL+1
  6300   001E00  C020  F01B         	movff	turnRight135@mR,stop@mR
  6301   001E04  C021  F01C         	movff	turnRight135@mR+1,stop@mR+1
  6302   001E08  EC61  F012         	call	_stop	;wreg free
  6303   001E0C                     
  6304                           ;dc_motor.c: 171:     mL->direction = 1;
  6305   001E0C  EE20 F001          	lfsr	2,1
  6306   001E10  501E               	movf	turnRight135@mL^0,w,c
  6307   001E12  26D9               	addwf	fsr2l,f,c
  6308   001E14  501F               	movf	(turnRight135@mL+1)^0,w,c
  6309   001E16  22DA               	addwfc	fsr2h,f,c
  6310   001E18  0E01               	movlw	1
  6311   001E1A  6EDF               	movwf	indf2,c
  6312   001E1C                     
  6313                           ;dc_motor.c: 172:     mR->direction = 0;
  6314   001E1C  EE20 F001          	lfsr	2,1
  6315   001E20  5020               	movf	turnRight135@mR^0,w,c
  6316   001E22  26D9               	addwf	fsr2l,f,c
  6317   001E24  5021               	movf	(turnRight135@mR+1)^0,w,c
  6318   001E26  22DA               	addwfc	fsr2h,f,c
  6319   001E28  0E00               	movlw	0
  6320   001E2A  6EDF               	movwf	indf2,c
  6321   001E2C                     
  6322                           ;dc_motor.c: 173:     mL->power = 20;
  6323   001E2C  C01E  FFD9         	movff	turnRight135@mL,fsr2l
  6324   001E30  C01F  FFDA         	movff	turnRight135@mL+1,fsr2h
  6325   001E34  0E14               	movlw	20
  6326   001E36  6EDF               	movwf	indf2,c
  6327   001E38                     
  6328                           ;dc_motor.c: 174:     mR->power = 20;
  6329   001E38  C020  FFD9         	movff	turnRight135@mR,fsr2l
  6330   001E3C  C021  FFDA         	movff	turnRight135@mR+1,fsr2h
  6331   001E40  0E14               	movlw	20
  6332   001E42  6EDF               	movwf	indf2,c
  6333                           
  6334                           ;dc_motor.c: 176:     while (mL->power <= 50 || mR->power <= 50) {
  6335   001E44  EF41  F00F         	goto	l2533
  6336   001E48                     l2523:
  6337                           
  6338                           ;dc_motor.c: 177:         _delay((unsigned long)((10)*(64000000/4000.0)));
  6339   001E48  0ED0               	movlw	208
  6340   001E4A  6E22               	movwf	??_turnRight135^0,c
  6341   001E4C  0ECA               	movlw	202
  6342   001E4E                     u3467:
  6343   001E4E  2EE8               	decfsz	wreg,f,c
  6344   001E50  D7FE               	bra	u3467
  6345   001E52  2E22               	decfsz	??_turnRight135^0,f,c
  6346   001E54  D7FC               	bra	u3467
  6347   001E56                     
  6348                           ;dc_motor.c: 178:         mL->power++;
  6349   001E56  C01E  FFD9         	movff	turnRight135@mL,fsr2l
  6350   001E5A  C01F  FFDA         	movff	turnRight135@mL+1,fsr2h
  6351   001E5E  2ADF               	incf	indf2,f,c
  6352   001E60                     
  6353                           ;dc_motor.c: 179:         mR->power++;
  6354   001E60  C020  FFD9         	movff	turnRight135@mR,fsr2l
  6355   001E64  C021  FFDA         	movff	turnRight135@mR+1,fsr2h
  6356   001E68  2ADF               	incf	indf2,f,c
  6357   001E6A                     
  6358                           ;dc_motor.c: 180:         setMotorPWM(mL);
  6359   001E6A  C01E  F013         	movff	turnRight135@mL,setMotorPWM@m
  6360   001E6E  C01F  F014         	movff	turnRight135@mL+1,setMotorPWM@m+1
  6361   001E72  EC38  F00C         	call	_setMotorPWM	;wreg free
  6362   001E76                     
  6363                           ;dc_motor.c: 181:         setMotorPWM(mR);
  6364   001E76  C020  F013         	movff	turnRight135@mR,setMotorPWM@m
  6365   001E7A  C021  F014         	movff	turnRight135@mR+1,setMotorPWM@m+1
  6366   001E7E  EC38  F00C         	call	_setMotorPWM	;wreg free
  6367   001E82                     l2533:
  6368                           
  6369                           ;dc_motor.c: 176:     while (mL->power <= 50 || mR->power <= 50) {
  6370   001E82  C01E  FFD9         	movff	turnRight135@mL,fsr2l
  6371   001E86  C01F  FFDA         	movff	turnRight135@mL+1,fsr2h
  6372   001E8A  0E32               	movlw	50
  6373   001E8C  64DF               	cpfsgt	indf2,c
  6374   001E8E  EF4B  F00F         	goto	u1821
  6375   001E92  EF4D  F00F         	goto	u1820
  6376   001E96                     u1821:
  6377   001E96  EF24  F00F         	goto	l2523
  6378   001E9A                     u1820:
  6379   001E9A  C020  FFD9         	movff	turnRight135@mR,fsr2l
  6380   001E9E  C021  FFDA         	movff	turnRight135@mR+1,fsr2h
  6381   001EA2  0E32               	movlw	50
  6382   001EA4  64DF               	cpfsgt	indf2,c
  6383   001EA6  EF57  F00F         	goto	u1831
  6384   001EAA  EF59  F00F         	goto	u1830
  6385   001EAE                     u1831:
  6386   001EAE  EF24  F00F         	goto	l2523
  6387   001EB2                     u1830:
  6388   001EB2                     
  6389                           ;dc_motor.c: 183:     _delay((unsigned long)((250)*(64000000/4000.0)));
  6390   001EB2  0E15               	movlw	21
  6391   001EB4  6E23               	movwf	(??_turnRight135+1)^0,c
  6392   001EB6  0E4B               	movlw	75
  6393   001EB8  6E22               	movwf	??_turnRight135^0,c
  6394   001EBA  0EBE               	movlw	190
  6395   001EBC                     u3477:
  6396   001EBC  2EE8               	decfsz	wreg,f,c
  6397   001EBE  D7FE               	bra	u3477
  6398   001EC0  2E22               	decfsz	??_turnRight135^0,f,c
  6399   001EC2  D7FC               	bra	u3477
  6400   001EC4  2E23               	decfsz	(??_turnRight135+1)^0,f,c
  6401   001EC6  D7FA               	bra	u3477
  6402   001EC8  D000               	nop2	
  6403   001ECA                     
  6404                           ;dc_motor.c: 184:     stop(mL, mR);
  6405   001ECA  C01E  F019         	movff	turnRight135@mL,stop@mL
  6406   001ECE  C01F  F01A         	movff	turnRight135@mL+1,stop@mL+1
  6407   001ED2  C020  F01B         	movff	turnRight135@mR,stop@mR
  6408   001ED6  C021  F01C         	movff	turnRight135@mR+1,stop@mR+1
  6409   001EDA  EC61  F012         	call	_stop	;wreg free
  6410   001EDE  0012               	return		;funcret
  6411   001EE0                     __end_of_turnRight135:
  6412                           	callstack 0
  6413                           
  6414 ;; *************** function _turnLeft90 *****************
  6415 ;; Defined at:
  6416 ;;		line 109 in file "dc_motor.c"
  6417 ;; Parameters:    Size  Location     Type
  6418 ;;  mL              2   29[COMRAM] PTR struct DC_motor
  6419 ;;		 -> returnstep@motorL(9), carryoutstep@motorL(9), 
  6420 ;;  mR              2   31[COMRAM] PTR struct DC_motor
  6421 ;;		 -> returnstep@motorR(9), carryoutstep@motorR(9), 
  6422 ;; Auto vars:     Size  Location     Type
  6423 ;;		None
  6424 ;; Return value:  Size  Location     Type
  6425 ;;                  1    wreg      void 
  6426 ;; Registers used:
  6427 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6428 ;; Tracked objects:
  6429 ;;		On entry : 0/0
  6430 ;;		On exit  : 0/0
  6431 ;;		Unchanged: 0/0
  6432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6433 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6435 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6436 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6437 ;;Total ram usage:        6 bytes
  6438 ;; Hardware stack levels used: 1
  6439 ;; Hardware stack levels required when called: 5
  6440 ;; This function calls:
  6441 ;;		_setMotorPWM
  6442 ;;		_stop
  6443 ;; This function is called by:
  6444 ;;		_carryoutstep
  6445 ;;		_returnstep
  6446 ;; This function uses a non-reentrant model
  6447 ;;
  6448                           
  6449                           	psect	text29
  6450   001C20                     __ptext29:
  6451                           	callstack 0
  6452   001C20                     _turnLeft90:
  6453                           	callstack 23
  6454   001C20                     
  6455                           ;dc_motor.c: 109: void turnLeft90(DC_motor *mL, DC_motor *mR);dc_motor.c: 110: { stop(mL
      +                          , mR);
  6456   001C20  C01E  F019         	movff	turnLeft90@mL,stop@mL
  6457   001C24  C01F  F01A         	movff	turnLeft90@mL+1,stop@mL+1
  6458   001C28  C020  F01B         	movff	turnLeft90@mR,stop@mR
  6459   001C2C  C021  F01C         	movff	turnLeft90@mR+1,stop@mR+1
  6460   001C30  EC61  F012         	call	_stop	;wreg free
  6461   001C34                     
  6462                           ;dc_motor.c: 111:     mL->direction = 0;
  6463   001C34  EE20 F001          	lfsr	2,1
  6464   001C38  501E               	movf	turnLeft90@mL^0,w,c
  6465   001C3A  26D9               	addwf	fsr2l,f,c
  6466   001C3C  501F               	movf	(turnLeft90@mL+1)^0,w,c
  6467   001C3E  22DA               	addwfc	fsr2h,f,c
  6468   001C40  0E00               	movlw	0
  6469   001C42  6EDF               	movwf	indf2,c
  6470   001C44                     
  6471                           ;dc_motor.c: 112:     mR->direction = 1;
  6472   001C44  EE20 F001          	lfsr	2,1
  6473   001C48  5020               	movf	turnLeft90@mR^0,w,c
  6474   001C4A  26D9               	addwf	fsr2l,f,c
  6475   001C4C  5021               	movf	(turnLeft90@mR+1)^0,w,c
  6476   001C4E  22DA               	addwfc	fsr2h,f,c
  6477   001C50  0E01               	movlw	1
  6478   001C52  6EDF               	movwf	indf2,c
  6479   001C54                     
  6480                           ;dc_motor.c: 113:     mL->power = 20;
  6481   001C54  C01E  FFD9         	movff	turnLeft90@mL,fsr2l
  6482   001C58  C01F  FFDA         	movff	turnLeft90@mL+1,fsr2h
  6483   001C5C  0E14               	movlw	20
  6484   001C5E  6EDF               	movwf	indf2,c
  6485   001C60                     
  6486                           ;dc_motor.c: 114:     mR->power = 20;
  6487   001C60  C020  FFD9         	movff	turnLeft90@mR,fsr2l
  6488   001C64  C021  FFDA         	movff	turnLeft90@mR+1,fsr2h
  6489   001C68  0E14               	movlw	20
  6490   001C6A  6EDF               	movwf	indf2,c
  6491                           
  6492                           ;dc_motor.c: 116:     while (mL->power != 50 || mR->power != 50 ) {
  6493   001C6C  EF56  F00E         	goto	l2449
  6494   001C70                     l2439:
  6495                           
  6496                           ;dc_motor.c: 117:         _delay((unsigned long)((5)*(64000000/4000.0)));
  6497   001C70  0E68               	movlw	104
  6498   001C72  6E22               	movwf	??_turnLeft90^0,c
  6499   001C74  0EE4               	movlw	228
  6500   001C76                     u3487:
  6501   001C76  2EE8               	decfsz	wreg,f,c
  6502   001C78  D7FE               	bra	u3487
  6503   001C7A  2E22               	decfsz	??_turnLeft90^0,f,c
  6504   001C7C  D7FC               	bra	u3487
  6505   001C7E  D000               	nop2	
  6506   001C80                     
  6507                           ;dc_motor.c: 118:         mL->power++;
  6508   001C80  C01E  FFD9         	movff	turnLeft90@mL,fsr2l
  6509   001C84  C01F  FFDA         	movff	turnLeft90@mL+1,fsr2h
  6510   001C88  2ADF               	incf	indf2,f,c
  6511   001C8A                     
  6512                           ;dc_motor.c: 119:         mR->power++;
  6513   001C8A  C020  FFD9         	movff	turnLeft90@mR,fsr2l
  6514   001C8E  C021  FFDA         	movff	turnLeft90@mR+1,fsr2h
  6515   001C92  2ADF               	incf	indf2,f,c
  6516   001C94                     
  6517                           ;dc_motor.c: 120:         setMotorPWM(mL);
  6518   001C94  C01E  F013         	movff	turnLeft90@mL,setMotorPWM@m
  6519   001C98  C01F  F014         	movff	turnLeft90@mL+1,setMotorPWM@m+1
  6520   001C9C  EC38  F00C         	call	_setMotorPWM	;wreg free
  6521   001CA0                     
  6522                           ;dc_motor.c: 121:         setMotorPWM(mR);
  6523   001CA0  C020  F013         	movff	turnLeft90@mR,setMotorPWM@m
  6524   001CA4  C021  F014         	movff	turnLeft90@mR+1,setMotorPWM@m+1
  6525   001CA8  EC38  F00C         	call	_setMotorPWM	;wreg free
  6526   001CAC                     l2449:
  6527                           
  6528                           ;dc_motor.c: 116:     while (mL->power != 50 || mR->power != 50 ) {
  6529   001CAC  C01E  FFD9         	movff	turnLeft90@mL,fsr2l
  6530   001CB0  C01F  FFDA         	movff	turnLeft90@mL+1,fsr2h
  6531   001CB4  0E32               	movlw	50
  6532   001CB6  18DE               	xorwf	postinc2,w,c
  6533   001CB8  A4D8               	btfss	status,2,c
  6534   001CBA  EF61  F00E         	goto	u1761
  6535   001CBE  EF63  F00E         	goto	u1760
  6536   001CC2                     u1761:
  6537   001CC2  EF38  F00E         	goto	l2439
  6538   001CC6                     u1760:
  6539   001CC6  C020  FFD9         	movff	turnLeft90@mR,fsr2l
  6540   001CCA  C021  FFDA         	movff	turnLeft90@mR+1,fsr2h
  6541   001CCE  0E32               	movlw	50
  6542   001CD0  18DE               	xorwf	postinc2,w,c
  6543   001CD2  A4D8               	btfss	status,2,c
  6544   001CD4  EF6E  F00E         	goto	u1771
  6545   001CD8  EF70  F00E         	goto	u1770
  6546   001CDC                     u1771:
  6547   001CDC  EF38  F00E         	goto	l2439
  6548   001CE0                     u1770:
  6549   001CE0                     
  6550                           ;dc_motor.c: 123:     _delay((unsigned long)((250)*(64000000/4000.0)));
  6551   001CE0  0E15               	movlw	21
  6552   001CE2  6E23               	movwf	(??_turnLeft90+1)^0,c
  6553   001CE4  0E4B               	movlw	75
  6554   001CE6  6E22               	movwf	??_turnLeft90^0,c
  6555   001CE8  0EBE               	movlw	190
  6556   001CEA                     u3497:
  6557   001CEA  2EE8               	decfsz	wreg,f,c
  6558   001CEC  D7FE               	bra	u3497
  6559   001CEE  2E22               	decfsz	??_turnLeft90^0,f,c
  6560   001CF0  D7FC               	bra	u3497
  6561   001CF2  2E23               	decfsz	(??_turnLeft90+1)^0,f,c
  6562   001CF4  D7FA               	bra	u3497
  6563   001CF6  D000               	nop2	
  6564   001CF8                     
  6565                           ;dc_motor.c: 124:     stop(mL, mR);
  6566   001CF8  C01E  F019         	movff	turnLeft90@mL,stop@mL
  6567   001CFC  C01F  F01A         	movff	turnLeft90@mL+1,stop@mL+1
  6568   001D00  C020  F01B         	movff	turnLeft90@mR,stop@mR
  6569   001D04  C021  F01C         	movff	turnLeft90@mR+1,stop@mR+1
  6570   001D08  EC61  F012         	call	_stop	;wreg free
  6571   001D0C  0012               	return		;funcret
  6572   001D0E                     __end_of_turnLeft90:
  6573                           	callstack 0
  6574                           
  6575 ;; *************** function _turnLeft135 *****************
  6576 ;; Defined at:
  6577 ;;		line 147 in file "dc_motor.c"
  6578 ;; Parameters:    Size  Location     Type
  6579 ;;  mL              2   29[COMRAM] PTR struct DC_motor
  6580 ;;		 -> returnstep@motorL(9), carryoutstep@motorL(9), 
  6581 ;;  mR              2   31[COMRAM] PTR struct DC_motor
  6582 ;;		 -> returnstep@motorR(9), carryoutstep@motorR(9), 
  6583 ;; Auto vars:     Size  Location     Type
  6584 ;;		None
  6585 ;; Return value:  Size  Location     Type
  6586 ;;                  1    wreg      void 
  6587 ;; Registers used:
  6588 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6589 ;; Tracked objects:
  6590 ;;		On entry : 0/0
  6591 ;;		On exit  : 0/0
  6592 ;;		Unchanged: 0/0
  6593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6594 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6596 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6597 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6598 ;;Total ram usage:        6 bytes
  6599 ;; Hardware stack levels used: 1
  6600 ;; Hardware stack levels required when called: 5
  6601 ;; This function calls:
  6602 ;;		_setMotorPWM
  6603 ;;		_stop
  6604 ;; This function is called by:
  6605 ;;		_carryoutstep
  6606 ;;		_returnstep
  6607 ;; This function uses a non-reentrant model
  6608 ;;
  6609                           
  6610                           	psect	text30
  6611   001FC8                     __ptext30:
  6612                           	callstack 0
  6613   001FC8                     _turnLeft135:
  6614                           	callstack 23
  6615   001FC8                     
  6616                           ;dc_motor.c: 147: void turnLeft135(DC_motor *mL, DC_motor *mR);dc_motor.c: 148: {;dc_mot
      +                          or.c: 149:     stop(mL, mR);
  6617   001FC8  C01E  F019         	movff	turnLeft135@mL,stop@mL
  6618   001FCC  C01F  F01A         	movff	turnLeft135@mL+1,stop@mL+1
  6619   001FD0  C020  F01B         	movff	turnLeft135@mR,stop@mR
  6620   001FD4  C021  F01C         	movff	turnLeft135@mR+1,stop@mR+1
  6621   001FD8  EC61  F012         	call	_stop	;wreg free
  6622   001FDC                     
  6623                           ;dc_motor.c: 150:     mL->direction = 0;
  6624   001FDC  EE20 F001          	lfsr	2,1
  6625   001FE0  501E               	movf	turnLeft135@mL^0,w,c
  6626   001FE2  26D9               	addwf	fsr2l,f,c
  6627   001FE4  501F               	movf	(turnLeft135@mL+1)^0,w,c
  6628   001FE6  22DA               	addwfc	fsr2h,f,c
  6629   001FE8  0E00               	movlw	0
  6630   001FEA  6EDF               	movwf	indf2,c
  6631   001FEC                     
  6632                           ;dc_motor.c: 151:     mR->direction = 1;
  6633   001FEC  EE20 F001          	lfsr	2,1
  6634   001FF0  5020               	movf	turnLeft135@mR^0,w,c
  6635   001FF2  26D9               	addwf	fsr2l,f,c
  6636   001FF4  5021               	movf	(turnLeft135@mR+1)^0,w,c
  6637   001FF6  22DA               	addwfc	fsr2h,f,c
  6638   001FF8  0E01               	movlw	1
  6639   001FFA  6EDF               	movwf	indf2,c
  6640   001FFC                     
  6641                           ;dc_motor.c: 152:     mL->power = 20;
  6642   001FFC  C01E  FFD9         	movff	turnLeft135@mL,fsr2l
  6643   002000  C01F  FFDA         	movff	turnLeft135@mL+1,fsr2h
  6644   002004  0E14               	movlw	20
  6645   002006  6EDF               	movwf	indf2,c
  6646   002008                     
  6647                           ;dc_motor.c: 153:     mR->power = 20;
  6648   002008  C020  FFD9         	movff	turnLeft135@mR,fsr2l
  6649   00200C  C021  FFDA         	movff	turnLeft135@mR+1,fsr2h
  6650   002010  0E14               	movlw	20
  6651   002012  6EDF               	movwf	indf2,c
  6652                           
  6653                           ;dc_motor.c: 155:     while (mL->power <= 50 || mR->power <= 50 ) {
  6654   002014  EF29  F010         	goto	l2505
  6655   002018                     l2495:
  6656                           
  6657                           ;dc_motor.c: 156:         _delay((unsigned long)((10)*(64000000/4000.0)));
  6658   002018  0ED0               	movlw	208
  6659   00201A  6E22               	movwf	??_turnLeft135^0,c
  6660   00201C  0ECA               	movlw	202
  6661   00201E                     u3507:
  6662   00201E  2EE8               	decfsz	wreg,f,c
  6663   002020  D7FE               	bra	u3507
  6664   002022  2E22               	decfsz	??_turnLeft135^0,f,c
  6665   002024  D7FC               	bra	u3507
  6666   002026                     
  6667                           ;dc_motor.c: 157:         mL->power++;
  6668   002026  C01E  FFD9         	movff	turnLeft135@mL,fsr2l
  6669   00202A  C01F  FFDA         	movff	turnLeft135@mL+1,fsr2h
  6670   00202E  2ADF               	incf	indf2,f,c
  6671   002030                     
  6672                           ;dc_motor.c: 158:         mR->power++;
  6673   002030  C020  FFD9         	movff	turnLeft135@mR,fsr2l
  6674   002034  C021  FFDA         	movff	turnLeft135@mR+1,fsr2h
  6675   002038  2ADF               	incf	indf2,f,c
  6676   00203A                     
  6677                           ;dc_motor.c: 159:         setMotorPWM(mL);
  6678   00203A  C01E  F013         	movff	turnLeft135@mL,setMotorPWM@m
  6679   00203E  C01F  F014         	movff	turnLeft135@mL+1,setMotorPWM@m+1
  6680   002042  EC38  F00C         	call	_setMotorPWM	;wreg free
  6681   002046                     
  6682                           ;dc_motor.c: 160:         setMotorPWM(mR);
  6683   002046  C020  F013         	movff	turnLeft135@mR,setMotorPWM@m
  6684   00204A  C021  F014         	movff	turnLeft135@mR+1,setMotorPWM@m+1
  6685   00204E  EC38  F00C         	call	_setMotorPWM	;wreg free
  6686   002052                     l2505:
  6687                           
  6688                           ;dc_motor.c: 155:     while (mL->power <= 50 || mR->power <= 50 ) {
  6689   002052  C01E  FFD9         	movff	turnLeft135@mL,fsr2l
  6690   002056  C01F  FFDA         	movff	turnLeft135@mL+1,fsr2h
  6691   00205A  0E32               	movlw	50
  6692   00205C  64DF               	cpfsgt	indf2,c
  6693   00205E  EF33  F010         	goto	u1801
  6694   002062  EF35  F010         	goto	u1800
  6695   002066                     u1801:
  6696   002066  EF0C  F010         	goto	l2495
  6697   00206A                     u1800:
  6698   00206A  C020  FFD9         	movff	turnLeft135@mR,fsr2l
  6699   00206E  C021  FFDA         	movff	turnLeft135@mR+1,fsr2h
  6700   002072  0E32               	movlw	50
  6701   002074  64DF               	cpfsgt	indf2,c
  6702   002076  EF3F  F010         	goto	u1811
  6703   00207A  EF41  F010         	goto	u1810
  6704   00207E                     u1811:
  6705   00207E  EF0C  F010         	goto	l2495
  6706   002082                     u1810:
  6707   002082                     
  6708                           ;dc_motor.c: 162:     _delay((unsigned long)((290)*(64000000/4000.0)));
  6709   002082  0E18               	movlw	24
  6710   002084  6E23               	movwf	(??_turnLeft135+1)^0,c
  6711   002086  0E8A               	movlw	138
  6712   002088  6E22               	movwf	??_turnLeft135^0,c
  6713   00208A  0EE8               	movlw	232
  6714   00208C                     u3517:
  6715   00208C  2EE8               	decfsz	wreg,f,c
  6716   00208E  D7FE               	bra	u3517
  6717   002090  2E22               	decfsz	??_turnLeft135^0,f,c
  6718   002092  D7FC               	bra	u3517
  6719   002094  2E23               	decfsz	(??_turnLeft135+1)^0,f,c
  6720   002096  D7FA               	bra	u3517
  6721   002098                     
  6722                           ;dc_motor.c: 163:     stop(mL, mR);
  6723   002098  C01E  F019         	movff	turnLeft135@mL,stop@mL
  6724   00209C  C01F  F01A         	movff	turnLeft135@mL+1,stop@mL+1
  6725   0020A0  C020  F01B         	movff	turnLeft135@mR,stop@mR
  6726   0020A4  C021  F01C         	movff	turnLeft135@mR+1,stop@mR+1
  6727   0020A8  EC61  F012         	call	_stop	;wreg free
  6728   0020AC  0012               	return		;funcret
  6729   0020AE                     __end_of_turnLeft135:
  6730                           	callstack 0
  6731                           
  6732 ;; *************** function _turn180 *****************
  6733 ;; Defined at:
  6734 ;;		line 187 in file "dc_motor.c"
  6735 ;; Parameters:    Size  Location     Type
  6736 ;;  mL              2   29[COMRAM] PTR struct DC_motor
  6737 ;;		 -> returnstep@motorL(9), carryoutstep@motorL(9), 
  6738 ;;  mR              2   31[COMRAM] PTR struct DC_motor
  6739 ;;		 -> returnstep@motorR(9), carryoutstep@motorR(9), 
  6740 ;; Auto vars:     Size  Location     Type
  6741 ;;		None
  6742 ;; Return value:  Size  Location     Type
  6743 ;;                  1    wreg      void 
  6744 ;; Registers used:
  6745 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6746 ;; Tracked objects:
  6747 ;;		On entry : 0/0
  6748 ;;		On exit  : 0/0
  6749 ;;		Unchanged: 0/0
  6750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6751 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6753 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6754 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6755 ;;Total ram usage:        6 bytes
  6756 ;; Hardware stack levels used: 1
  6757 ;; Hardware stack levels required when called: 5
  6758 ;; This function calls:
  6759 ;;		_setMotorPWM
  6760 ;;		_stop
  6761 ;; This function is called by:
  6762 ;;		_carryoutstep
  6763 ;;		_returnstep
  6764 ;; This function uses a non-reentrant model
  6765 ;;
  6766                           
  6767                           	psect	text31
  6768   001EE0                     __ptext31:
  6769                           	callstack 0
  6770   001EE0                     _turn180:
  6771                           	callstack 23
  6772   001EE0                     
  6773                           ;dc_motor.c: 187: void turn180(DC_motor *mL, DC_motor *mR);dc_motor.c: 188: {;dc_motor.c
      +                          : 189:     stop(mL, mR);
  6774   001EE0  C01E  F019         	movff	turn180@mL,stop@mL
  6775   001EE4  C01F  F01A         	movff	turn180@mL+1,stop@mL+1
  6776   001EE8  C020  F01B         	movff	turn180@mR,stop@mR
  6777   001EEC  C021  F01C         	movff	turn180@mR+1,stop@mR+1
  6778   001EF0  EC61  F012         	call	_stop	;wreg free
  6779   001EF4                     
  6780                           ;dc_motor.c: 190:     mL->direction = 1;
  6781   001EF4  EE20 F001          	lfsr	2,1
  6782   001EF8  501E               	movf	turn180@mL^0,w,c
  6783   001EFA  26D9               	addwf	fsr2l,f,c
  6784   001EFC  501F               	movf	(turn180@mL+1)^0,w,c
  6785   001EFE  22DA               	addwfc	fsr2h,f,c
  6786   001F00  0E01               	movlw	1
  6787   001F02  6EDF               	movwf	indf2,c
  6788   001F04                     
  6789                           ;dc_motor.c: 191:     mR->direction = 0;
  6790   001F04  EE20 F001          	lfsr	2,1
  6791   001F08  5020               	movf	turn180@mR^0,w,c
  6792   001F0A  26D9               	addwf	fsr2l,f,c
  6793   001F0C  5021               	movf	(turn180@mR+1)^0,w,c
  6794   001F0E  22DA               	addwfc	fsr2h,f,c
  6795   001F10  0E00               	movlw	0
  6796   001F12  6EDF               	movwf	indf2,c
  6797   001F14                     
  6798                           ;dc_motor.c: 192:     mL->power = 20;
  6799   001F14  C01E  FFD9         	movff	turn180@mL,fsr2l
  6800   001F18  C01F  FFDA         	movff	turn180@mL+1,fsr2h
  6801   001F1C  0E14               	movlw	20
  6802   001F1E  6EDF               	movwf	indf2,c
  6803   001F20                     
  6804                           ;dc_motor.c: 193:     mR->power = 20;
  6805   001F20  C020  FFD9         	movff	turn180@mR,fsr2l
  6806   001F24  C021  FFDA         	movff	turn180@mR+1,fsr2h
  6807   001F28  0E14               	movlw	20
  6808   001F2A  6EDF               	movwf	indf2,c
  6809                           
  6810                           ;dc_motor.c: 195:     while (mL->power <= 50 || mR->power <= 50 ) {
  6811   001F2C  EFB5  F00F         	goto	l2561
  6812   001F30                     l2551:
  6813                           
  6814                           ;dc_motor.c: 196:         _delay((unsigned long)((10)*(64000000/4000.0)));
  6815   001F30  0ED0               	movlw	208
  6816   001F32  6E22               	movwf	??_turn180^0,c
  6817   001F34  0ECA               	movlw	202
  6818   001F36                     u3527:
  6819   001F36  2EE8               	decfsz	wreg,f,c
  6820   001F38  D7FE               	bra	u3527
  6821   001F3A  2E22               	decfsz	??_turn180^0,f,c
  6822   001F3C  D7FC               	bra	u3527
  6823   001F3E                     
  6824                           ;dc_motor.c: 197:         mL->power++;
  6825   001F3E  C01E  FFD9         	movff	turn180@mL,fsr2l
  6826   001F42  C01F  FFDA         	movff	turn180@mL+1,fsr2h
  6827   001F46  2ADF               	incf	indf2,f,c
  6828   001F48                     
  6829                           ;dc_motor.c: 198:         mR->power++;
  6830   001F48  C020  FFD9         	movff	turn180@mR,fsr2l
  6831   001F4C  C021  FFDA         	movff	turn180@mR+1,fsr2h
  6832   001F50  2ADF               	incf	indf2,f,c
  6833   001F52                     
  6834                           ;dc_motor.c: 199:         setMotorPWM(mL);
  6835   001F52  C01E  F013         	movff	turn180@mL,setMotorPWM@m
  6836   001F56  C01F  F014         	movff	turn180@mL+1,setMotorPWM@m+1
  6837   001F5A  EC38  F00C         	call	_setMotorPWM	;wreg free
  6838   001F5E                     
  6839                           ;dc_motor.c: 200:         setMotorPWM(mR);
  6840   001F5E  C020  F013         	movff	turn180@mR,setMotorPWM@m
  6841   001F62  C021  F014         	movff	turn180@mR+1,setMotorPWM@m+1
  6842   001F66  EC38  F00C         	call	_setMotorPWM	;wreg free
  6843   001F6A                     l2561:
  6844                           
  6845                           ;dc_motor.c: 195:     while (mL->power <= 50 || mR->power <= 50 ) {
  6846   001F6A  C01E  FFD9         	movff	turn180@mL,fsr2l
  6847   001F6E  C01F  FFDA         	movff	turn180@mL+1,fsr2h
  6848   001F72  0E32               	movlw	50
  6849   001F74  64DF               	cpfsgt	indf2,c
  6850   001F76  EFBF  F00F         	goto	u1841
  6851   001F7A  EFC1  F00F         	goto	u1840
  6852   001F7E                     u1841:
  6853   001F7E  EF98  F00F         	goto	l2551
  6854   001F82                     u1840:
  6855   001F82  C020  FFD9         	movff	turn180@mR,fsr2l
  6856   001F86  C021  FFDA         	movff	turn180@mR+1,fsr2h
  6857   001F8A  0E32               	movlw	50
  6858   001F8C  64DF               	cpfsgt	indf2,c
  6859   001F8E  EFCB  F00F         	goto	u1851
  6860   001F92  EFCD  F00F         	goto	u1850
  6861   001F96                     u1851:
  6862   001F96  EF98  F00F         	goto	l2551
  6863   001F9A                     u1850:
  6864   001F9A                     
  6865                           ;dc_motor.c: 202:     _delay((unsigned long)((420)*(64000000/4000.0)));
  6866   001F9A  0E23               	movlw	35
  6867   001F9C  6E23               	movwf	(??_turn180+1)^0,c
  6868   001F9E  0E18               	movlw	24
  6869   001FA0  6E22               	movwf	??_turn180^0,c
  6870   001FA2  0E2C               	movlw	44
  6871   001FA4                     u3537:
  6872   001FA4  2EE8               	decfsz	wreg,f,c
  6873   001FA6  D7FE               	bra	u3537
  6874   001FA8  2E22               	decfsz	??_turn180^0,f,c
  6875   001FAA  D7FC               	bra	u3537
  6876   001FAC  2E23               	decfsz	(??_turn180+1)^0,f,c
  6877   001FAE  D7FA               	bra	u3537
  6878   001FB0  D000               	nop2	
  6879   001FB2                     
  6880                           ;dc_motor.c: 203:     stop(mL, mR);
  6881   001FB2  C01E  F019         	movff	turn180@mL,stop@mL
  6882   001FB6  C01F  F01A         	movff	turn180@mL+1,stop@mL+1
  6883   001FBA  C020  F01B         	movff	turn180@mR,stop@mR
  6884   001FBE  C021  F01C         	movff	turn180@mR+1,stop@mR+1
  6885   001FC2  EC61  F012         	call	_stop	;wreg free
  6886   001FC6  0012               	return		;funcret
  6887   001FC8                     __end_of_turn180:
  6888                           	callstack 0
  6889                           
  6890 ;; *************** function _stop *****************
  6891 ;; Defined at:
  6892 ;;		line 97 in file "dc_motor.c"
  6893 ;; Parameters:    Size  Location     Type
  6894 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  6895 ;;		 -> main@motorL(9), returnstep@motorL(9), returnhome@motorL(9), carryoutstep@motorL(9), 
  6896 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  6897 ;;		 -> main@motorR(9), returnstep@motorR(9), returnhome@motorR(9), carryoutstep@motorR(9), 
  6898 ;; Auto vars:     Size  Location     Type
  6899 ;;		None
  6900 ;; Return value:  Size  Location     Type
  6901 ;;                  1    wreg      void 
  6902 ;; Registers used:
  6903 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6904 ;; Tracked objects:
  6905 ;;		On entry : 0/0
  6906 ;;		On exit  : 0/0
  6907 ;;		Unchanged: 0/0
  6908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6909 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6911 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6912 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6913 ;;Total ram usage:        5 bytes
  6914 ;; Hardware stack levels used: 1
  6915 ;; Hardware stack levels required when called: 4
  6916 ;; This function calls:
  6917 ;;		_setMotorPWM
  6918 ;; This function is called by:
  6919 ;;		_turnLeft90
  6920 ;;		_turnRight90
  6921 ;;		_turnLeft135
  6922 ;;		_turnRight135
  6923 ;;		_turn180
  6924 ;;		_square
  6925 ;;		_smallmovement
  6926 ;;		_returnhome
  6927 ;; This function uses a non-reentrant model
  6928 ;;
  6929                           
  6930                           	psect	text32
  6931   0024C2                     __ptext32:
  6932                           	callstack 0
  6933   0024C2                     _stop:
  6934                           	callstack 25
  6935   0024C2                     
  6936                           ;dc_motor.c: 97: void stop(DC_motor *mL, DC_motor *mR);dc_motor.c: 98: {;dc_motor.c: 99:
      +                               while (mL->power > 0 && mR->power > 0) {
  6937   0024C2  EF81  F012         	goto	l2421
  6938   0024C6                     l2413:
  6939                           
  6940                           ;dc_motor.c: 100:     mL->power--;
  6941   0024C6  C019  FFD9         	movff	stop@mL,fsr2l
  6942   0024CA  C01A  FFDA         	movff	stop@mL+1,fsr2h
  6943   0024CE  06DF               	decf	indf2,f,c
  6944                           
  6945                           ;dc_motor.c: 101:     mR->power--;
  6946   0024D0  C01B  FFD9         	movff	stop@mR,fsr2l
  6947   0024D4  C01C  FFDA         	movff	stop@mR+1,fsr2h
  6948   0024D8  06DF               	decf	indf2,f,c
  6949   0024DA                     
  6950                           ;dc_motor.c: 102:     _delay((unsigned long)((1)*(64000000/4000.0)));
  6951   0024DA  0E15               	movlw	21
  6952   0024DC  6E1D               	movwf	??_stop^0,c
  6953   0024DE  0EC6               	movlw	198
  6954   0024E0                     u3547:
  6955   0024E0  2EE8               	decfsz	wreg,f,c
  6956   0024E2  D7FE               	bra	u3547
  6957   0024E4  2E1D               	decfsz	??_stop^0,f,c
  6958   0024E6  D7FC               	bra	u3547
  6959   0024E8  D000               	nop2	
  6960   0024EA                     
  6961                           ;dc_motor.c: 103:     setMotorPWM(mL);
  6962   0024EA  C019  F013         	movff	stop@mL,setMotorPWM@m
  6963   0024EE  C01A  F014         	movff	stop@mL+1,setMotorPWM@m+1
  6964   0024F2  EC38  F00C         	call	_setMotorPWM	;wreg free
  6965   0024F6                     
  6966                           ;dc_motor.c: 104:     setMotorPWM(mR);
  6967   0024F6  C01B  F013         	movff	stop@mR,setMotorPWM@m
  6968   0024FA  C01C  F014         	movff	stop@mR+1,setMotorPWM@m+1
  6969   0024FE  EC38  F00C         	call	_setMotorPWM	;wreg free
  6970   002502                     l2421:
  6971                           
  6972                           ;dc_motor.c: 99:     while (mL->power > 0 && mR->power > 0) {
  6973   002502  C019  FFD9         	movff	stop@mL,fsr2l
  6974   002506  C01A  FFDA         	movff	stop@mL+1,fsr2h
  6975   00250A  50DF               	movf	indf2,w,c
  6976   00250C  B4D8               	btfsc	status,2,c
  6977   00250E  EF8B  F012         	goto	u1721
  6978   002512  EF8D  F012         	goto	u1720
  6979   002516                     u1721:
  6980   002516  EF99  F012         	goto	l146
  6981   00251A                     u1720:
  6982   00251A  C01B  FFD9         	movff	stop@mR,fsr2l
  6983   00251E  C01C  FFDA         	movff	stop@mR+1,fsr2h
  6984   002522  50DF               	movf	indf2,w,c
  6985   002524  A4D8               	btfss	status,2,c
  6986   002526  EF97  F012         	goto	u1731
  6987   00252A  EF99  F012         	goto	u1730
  6988   00252E                     u1731:
  6989   00252E  EF63  F012         	goto	l2413
  6990   002532                     u1730:
  6991   002532                     l146:
  6992   002532  0012               	return		;funcret
  6993   002534                     __end_of_stop:
  6994                           	callstack 0
  6995                           
  6996 ;; *************** function _fullSpeedAhead *****************
  6997 ;; Defined at:
  6998 ;;		line 208 in file "dc_motor.c"
  6999 ;; Parameters:    Size  Location     Type
  7000 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  7001 ;;		 -> main@motorL(9), returnhome@motorL(9), 
  7002 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  7003 ;;		 -> main@motorR(9), returnhome@motorR(9), 
  7004 ;;  dir             1   28[COMRAM] unsigned char 
  7005 ;; Auto vars:     Size  Location     Type
  7006 ;;		None
  7007 ;; Return value:  Size  Location     Type
  7008 ;;                  1    wreg      void 
  7009 ;; Registers used:
  7010 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7011 ;; Tracked objects:
  7012 ;;		On entry : 0/0
  7013 ;;		On exit  : 0/0
  7014 ;;		Unchanged: 0/0
  7015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7016 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7018 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7019 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7020 ;;Total ram usage:        6 bytes
  7021 ;; Hardware stack levels used: 1
  7022 ;; Hardware stack levels required when called: 4
  7023 ;; This function calls:
  7024 ;;		_setMotorPWM
  7025 ;; This function is called by:
  7026 ;;		_returnhome
  7027 ;;		_main
  7028 ;; This function uses a non-reentrant model
  7029 ;;
  7030                           
  7031                           	psect	text33
  7032   0020AE                     __ptext33:
  7033                           	callstack 0
  7034   0020AE                     _fullSpeedAhead:
  7035                           	callstack 25
  7036   0020AE                     
  7037                           ;dc_motor.c: 208: void fullSpeedAhead(DC_motor *mL, DC_motor *mR, char dir);dc_motor.c: 
      +                          209: {;dc_motor.c: 210:     mL->brakemode= 1;
  7038   0020AE  EE20 F002          	lfsr	2,2
  7039   0020B2  5019               	movf	fullSpeedAhead@mL^0,w,c
  7040   0020B4  26D9               	addwf	fsr2l,f,c
  7041   0020B6  501A               	movf	(fullSpeedAhead@mL+1)^0,w,c
  7042   0020B8  22DA               	addwfc	fsr2h,f,c
  7043   0020BA  0E01               	movlw	1
  7044   0020BC  6EDF               	movwf	indf2,c
  7045                           
  7046                           ;dc_motor.c: 211:     mR->brakemode= 1;
  7047   0020BE  EE20 F002          	lfsr	2,2
  7048   0020C2  501B               	movf	fullSpeedAhead@mR^0,w,c
  7049   0020C4  26D9               	addwf	fsr2l,f,c
  7050   0020C6  501C               	movf	(fullSpeedAhead@mR+1)^0,w,c
  7051   0020C8  22DA               	addwfc	fsr2h,f,c
  7052   0020CA  0E01               	movlw	1
  7053   0020CC  6EDF               	movwf	indf2,c
  7054                           
  7055                           ;dc_motor.c: 212:     mL->direction = dir;
  7056   0020CE  EE20 F001          	lfsr	2,1
  7057   0020D2  5019               	movf	fullSpeedAhead@mL^0,w,c
  7058   0020D4  26D9               	addwf	fsr2l,f,c
  7059   0020D6  501A               	movf	(fullSpeedAhead@mL+1)^0,w,c
  7060   0020D8  22DA               	addwfc	fsr2h,f,c
  7061   0020DA  C01D  FFDF         	movff	fullSpeedAhead@dir,indf2
  7062                           
  7063                           ;dc_motor.c: 213:     mR->direction = dir;
  7064   0020DE  EE20 F001          	lfsr	2,1
  7065   0020E2  501B               	movf	fullSpeedAhead@mR^0,w,c
  7066   0020E4  26D9               	addwf	fsr2l,f,c
  7067   0020E6  501C               	movf	(fullSpeedAhead@mR+1)^0,w,c
  7068   0020E8  22DA               	addwfc	fsr2h,f,c
  7069   0020EA  C01D  FFDF         	movff	fullSpeedAhead@dir,indf2
  7070                           
  7071                           ;dc_motor.c: 215:     while (mL->power <= 20 && mR->power <= 20 ) {
  7072   0020EE  EF96  F010         	goto	l2593
  7073   0020F2                     l2583:
  7074                           
  7075                           ;dc_motor.c: 216:         _delay((unsigned long)((10)*(64000000/4000.0)));
  7076   0020F2  0ED0               	movlw	208
  7077   0020F4  6E1E               	movwf	??_fullSpeedAhead^0,c
  7078   0020F6  0ECA               	movlw	202
  7079   0020F8                     u3557:
  7080   0020F8  2EE8               	decfsz	wreg,f,c
  7081   0020FA  D7FE               	bra	u3557
  7082   0020FC  2E1E               	decfsz	??_fullSpeedAhead^0,f,c
  7083   0020FE  D7FC               	bra	u3557
  7084   002100                     
  7085                           ;dc_motor.c: 217:         mL->power++;
  7086   002100  C019  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  7087   002104  C01A  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  7088   002108  2ADF               	incf	indf2,f,c
  7089   00210A                     
  7090                           ;dc_motor.c: 218:         mR->power++;
  7091   00210A  C01B  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  7092   00210E  C01C  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  7093   002112  2ADF               	incf	indf2,f,c
  7094   002114                     
  7095                           ;dc_motor.c: 219:         setMotorPWM(mL);
  7096   002114  C019  F013         	movff	fullSpeedAhead@mL,setMotorPWM@m
  7097   002118  C01A  F014         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  7098   00211C  EC38  F00C         	call	_setMotorPWM	;wreg free
  7099   002120                     
  7100                           ;dc_motor.c: 220:         setMotorPWM(mR);
  7101   002120  C01B  F013         	movff	fullSpeedAhead@mR,setMotorPWM@m
  7102   002124  C01C  F014         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  7103   002128  EC38  F00C         	call	_setMotorPWM	;wreg free
  7104   00212C                     l2593:
  7105                           
  7106                           ;dc_motor.c: 215:     while (mL->power <= 20 && mR->power <= 20 ) {
  7107   00212C  C019  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  7108   002130  C01A  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  7109   002134  0E15               	movlw	21
  7110   002136  60DF               	cpfslt	indf2,c
  7111   002138  EFA0  F010         	goto	u1861
  7112   00213C  EFA2  F010         	goto	u1860
  7113   002140                     u1861:
  7114   002140  EFAE  F010         	goto	l2597
  7115   002144                     u1860:
  7116   002144  C01B  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  7117   002148  C01C  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  7118   00214C  0E14               	movlw	20
  7119   00214E  64DF               	cpfsgt	indf2,c
  7120   002150  EFAC  F010         	goto	u1871
  7121   002154  EFAE  F010         	goto	u1870
  7122   002158                     u1871:
  7123   002158  EF79  F010         	goto	l2583
  7124   00215C                     u1870:
  7125   00215C                     l2597:
  7126                           
  7127                           ;dc_motor.c: 223:     if (interruptenable == 0) {
  7128   00215C  5054               	movf	_interruptenable^0,w,c
  7129   00215E  A4D8               	btfss	status,2,c
  7130   002160  EFB4  F010         	goto	u1881
  7131   002164  EFB6  F010         	goto	u1880
  7132   002168                     u1881:
  7133   002168  EFBC  F010         	goto	l187
  7134   00216C                     u1880:
  7135   00216C                     
  7136                           ;dc_motor.c: 224:         timercount = 0;
  7137   00216C  0E00               	movlw	0
  7138   00216E  6E53               	movwf	(_timercount+1)^0,c
  7139   002170  0E00               	movlw	0
  7140   002172  6E52               	movwf	_timercount^0,c
  7141                           
  7142                           ;dc_motor.c: 225:         interruptenable = 1;
  7143   002174  0E01               	movlw	1
  7144   002176  6E54               	movwf	_interruptenable^0,c
  7145   002178                     l187:
  7146   002178  0012               	return		;funcret
  7147   00217A                     __end_of_fullSpeedAhead:
  7148                           	callstack 0
  7149                           
  7150 ;; *************** function _setMotorPWM *****************
  7151 ;; Defined at:
  7152 ;;		line 74 in file "dc_motor.c"
  7153 ;; Parameters:    Size  Location     Type
  7154 ;;  m               2   18[COMRAM] PTR struct DC_motor
  7155 ;;		 -> main@motorR(9), main@motorL(9), returnstep@motorR(9), returnstep@motorL(9), 
  7156 ;;		 -> returnhome@motorR(9), returnhome@motorL(9), carryoutstep@motorR(9), carryoutstep@motorL(9), 
  7157 ;; Auto vars:     Size  Location     Type
  7158 ;;  negDuty         1   23[COMRAM] unsigned char 
  7159 ;;  posDuty         1   22[COMRAM] unsigned char 
  7160 ;; Return value:  Size  Location     Type
  7161 ;;                  1    wreg      void 
  7162 ;; Registers used:
  7163 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7164 ;; Tracked objects:
  7165 ;;		On entry : 0/0
  7166 ;;		On exit  : 0/0
  7167 ;;		Unchanged: 0/0
  7168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7169 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7170 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7171 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7172 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7173 ;;Total ram usage:        6 bytes
  7174 ;; Hardware stack levels used: 1
  7175 ;; Hardware stack levels required when called: 3
  7176 ;; This function calls:
  7177 ;;		___lwdiv
  7178 ;;		___wmul
  7179 ;; This function is called by:
  7180 ;;		_stop
  7181 ;;		_turnLeft90
  7182 ;;		_turnRight90
  7183 ;;		_turnLeft135
  7184 ;;		_turnRight135
  7185 ;;		_turn180
  7186 ;;		_fullSpeedAhead
  7187 ;;		_square
  7188 ;;		_smallmovement
  7189 ;; This function uses a non-reentrant model
  7190 ;;
  7191                           
  7192                           	psect	text34
  7193   001870                     __ptext34:
  7194                           	callstack 0
  7195   001870                     _setMotorPWM:
  7196                           	callstack 25
  7197   001870                     
  7198                           ;dc_motor.c: 74: void setMotorPWM(DC_motor *m);dc_motor.c: 75: {;dc_motor.c: 76:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 77:     if(m->brakemode) {
  7199   001870  EE20 F002          	lfsr	2,2
  7200   001874  5013               	movf	setMotorPWM@m^0,w,c
  7201   001876  26D9               	addwf	fsr2l,f,c
  7202   001878  5014               	movf	(setMotorPWM@m+1)^0,w,c
  7203   00187A  22DA               	addwfc	fsr2h,f,c
  7204   00187C  50DF               	movf	indf2,w,c
  7205   00187E  B4D8               	btfsc	status,2,c
  7206   001880  EF44  F00C         	goto	u1701
  7207   001884  EF46  F00C         	goto	u1700
  7208   001888                     u1701:
  7209   001888  EF7A  F00C         	goto	l2401
  7210   00188C                     u1700:
  7211   00188C                     
  7212                           ;dc_motor.c: 78:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  7213   00188C  C013  FFD9         	movff	setMotorPWM@m,fsr2l
  7214   001890  C014  FFDA         	movff	setMotorPWM@m+1,fsr2h
  7215   001894  50DF               	movf	indf2,w,c
  7216   001896  6E15               	movwf	??_setMotorPWM^0,c
  7217   001898  5015               	movf	??_setMotorPWM^0,w,c
  7218   00189A  6E01               	movwf	___wmul@multiplier^0,c
  7219   00189C  6A02               	clrf	(___wmul@multiplier+1)^0,c
  7220   00189E  EE20 F003          	lfsr	2,3
  7221   0018A2  5013               	movf	setMotorPWM@m^0,w,c
  7222   0018A4  26D9               	addwf	fsr2l,f,c
  7223   0018A6  5014               	movf	(setMotorPWM@m+1)^0,w,c
  7224   0018A8  22DA               	addwfc	fsr2h,f,c
  7225   0018AA  CFDE F003          	movff	postinc2,___wmul@multiplicand
  7226   0018AE  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  7227   0018B2  ECD5  F013         	call	___wmul	;wreg free
  7228   0018B6  C001  F00C         	movff	?___wmul,___lwdiv@dividend
  7229   0018BA  C002  F00D         	movff	?___wmul+1,___lwdiv@dividend+1
  7230   0018BE  0E00               	movlw	0
  7231   0018C0  6E0F               	movwf	(___lwdiv@divisor+1)^0,c
  7232   0018C2  0E64               	movlw	100
  7233   0018C4  6E0E               	movwf	___lwdiv@divisor^0,c
  7234   0018C6  EC27  F012         	call	___lwdiv	;wreg free
  7235   0018CA  EE20 F003          	lfsr	2,3
  7236   0018CE  5013               	movf	setMotorPWM@m^0,w,c
  7237   0018D0  26D9               	addwf	fsr2l,f,c
  7238   0018D2  5014               	movf	(setMotorPWM@m+1)^0,w,c
  7239   0018D4  22DA               	addwfc	fsr2h,f,c
  7240   0018D6  50DF               	movf	indf2,w,c
  7241   0018D8  6E16               	movwf	(??_setMotorPWM+1)^0,c
  7242   0018DA  500C               	movf	?___lwdiv^0,w,c
  7243   0018DC  5C16               	subwf	(??_setMotorPWM+1)^0,w,c
  7244   0018DE  6E17               	movwf	setMotorPWM@posDuty^0,c
  7245   0018E0                     
  7246                           ;dc_motor.c: 79:         negDuty=m->PWMperiod;
  7247   0018E0  EE20 F003          	lfsr	2,3
  7248   0018E4  5013               	movf	setMotorPWM@m^0,w,c
  7249   0018E6  26D9               	addwf	fsr2l,f,c
  7250   0018E8  5014               	movf	(setMotorPWM@m+1)^0,w,c
  7251   0018EA  22DA               	addwfc	fsr2h,f,c
  7252   0018EC  50DF               	movf	indf2,w,c
  7253   0018EE  6E18               	movwf	setMotorPWM@negDuty^0,c
  7254                           
  7255                           ;dc_motor.c: 80:         }
  7256   0018F0  EF9D  F00C         	goto	l2405
  7257   0018F4                     l2401:
  7258                           
  7259                           ;dc_motor.c: 82:         posDuty=0;
  7260   0018F4  0E00               	movlw	0
  7261   0018F6  6E17               	movwf	setMotorPWM@posDuty^0,c
  7262   0018F8                     
  7263                           ;dc_motor.c: 83:         negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  7264   0018F8  C013  FFD9         	movff	setMotorPWM@m,fsr2l
  7265   0018FC  C014  FFDA         	movff	setMotorPWM@m+1,fsr2h
  7266   001900  50DF               	movf	indf2,w,c
  7267   001902  6E15               	movwf	??_setMotorPWM^0,c
  7268   001904  5015               	movf	??_setMotorPWM^0,w,c
  7269   001906  6E01               	movwf	___wmul@multiplier^0,c
  7270   001908  6A02               	clrf	(___wmul@multiplier+1)^0,c
  7271   00190A  EE20 F003          	lfsr	2,3
  7272   00190E  5013               	movf	setMotorPWM@m^0,w,c
  7273   001910  26D9               	addwf	fsr2l,f,c
  7274   001912  5014               	movf	(setMotorPWM@m+1)^0,w,c
  7275   001914  22DA               	addwfc	fsr2h,f,c
  7276   001916  CFDE F003          	movff	postinc2,___wmul@multiplicand
  7277   00191A  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  7278   00191E  ECD5  F013         	call	___wmul	;wreg free
  7279   001922  C001  F00C         	movff	?___wmul,___lwdiv@dividend
  7280   001926  C002  F00D         	movff	?___wmul+1,___lwdiv@dividend+1
  7281   00192A  0E00               	movlw	0
  7282   00192C  6E0F               	movwf	(___lwdiv@divisor+1)^0,c
  7283   00192E  0E64               	movlw	100
  7284   001930  6E0E               	movwf	___lwdiv@divisor^0,c
  7285   001932  EC27  F012         	call	___lwdiv	;wreg free
  7286   001936  500C               	movf	?___lwdiv^0,w,c
  7287   001938  6E18               	movwf	setMotorPWM@negDuty^0,c
  7288   00193A                     l2405:
  7289                           
  7290                           ;dc_motor.c: 86:     if (m->direction) {
  7291   00193A  EE20 F001          	lfsr	2,1
  7292   00193E  5013               	movf	setMotorPWM@m^0,w,c
  7293   001940  26D9               	addwf	fsr2l,f,c
  7294   001942  5014               	movf	(setMotorPWM@m+1)^0,w,c
  7295   001944  22DA               	addwfc	fsr2h,f,c
  7296   001946  50DF               	movf	indf2,w,c
  7297   001948  B4D8               	btfsc	status,2,c
  7298   00194A  EFA9  F00C         	goto	u1711
  7299   00194E  EFAB  F00C         	goto	u1710
  7300   001952                     u1711:
  7301   001952  EFCD  F00C         	goto	l2409
  7302   001956                     u1710:
  7303   001956                     
  7304                           ;dc_motor.c: 87:         *(m->posDutyHighByte)=posDuty;
  7305   001956  EE20 F005          	lfsr	2,5
  7306   00195A  5013               	movf	setMotorPWM@m^0,w,c
  7307   00195C  26D9               	addwf	fsr2l,f,c
  7308   00195E  5014               	movf	(setMotorPWM@m+1)^0,w,c
  7309   001960  22DA               	addwfc	fsr2h,f,c
  7310   001962  CFDE F015          	movff	postinc2,??_setMotorPWM
  7311   001966  CFDD F016          	movff	postdec2,??_setMotorPWM+1
  7312   00196A  C015  FFD9         	movff	??_setMotorPWM,fsr2l
  7313   00196E  C016  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7314   001972  C017  FFDF         	movff	setMotorPWM@posDuty,indf2
  7315                           
  7316                           ;dc_motor.c: 88:         *(m->negDutyHighByte)=negDuty;
  7317   001976  EE20 F007          	lfsr	2,7
  7318   00197A  5013               	movf	setMotorPWM@m^0,w,c
  7319   00197C  26D9               	addwf	fsr2l,f,c
  7320   00197E  5014               	movf	(setMotorPWM@m+1)^0,w,c
  7321   001980  22DA               	addwfc	fsr2h,f,c
  7322   001982  CFDE F015          	movff	postinc2,??_setMotorPWM
  7323   001986  CFDD F016          	movff	postdec2,??_setMotorPWM+1
  7324   00198A  C015  FFD9         	movff	??_setMotorPWM,fsr2l
  7325   00198E  C016  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7326   001992  C018  FFDF         	movff	setMotorPWM@negDuty,indf2
  7327                           
  7328                           ;dc_motor.c: 89:         }
  7329   001996  EFED  F00C         	goto	l138
  7330   00199A                     l2409:
  7331                           
  7332                           ;dc_motor.c: 91:         *(m->posDutyHighByte)=negDuty;
  7333   00199A  EE20 F005          	lfsr	2,5
  7334   00199E  5013               	movf	setMotorPWM@m^0,w,c
  7335   0019A0  26D9               	addwf	fsr2l,f,c
  7336   0019A2  5014               	movf	(setMotorPWM@m+1)^0,w,c
  7337   0019A4  22DA               	addwfc	fsr2h,f,c
  7338   0019A6  CFDE F015          	movff	postinc2,??_setMotorPWM
  7339   0019AA  CFDD F016          	movff	postdec2,??_setMotorPWM+1
  7340   0019AE  C015  FFD9         	movff	??_setMotorPWM,fsr2l
  7341   0019B2  C016  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7342   0019B6  C018  FFDF         	movff	setMotorPWM@negDuty,indf2
  7343                           
  7344                           ;dc_motor.c: 92:         *(m->negDutyHighByte)=posDuty;
  7345   0019BA  EE20 F007          	lfsr	2,7
  7346   0019BE  5013               	movf	setMotorPWM@m^0,w,c
  7347   0019C0  26D9               	addwf	fsr2l,f,c
  7348   0019C2  5014               	movf	(setMotorPWM@m+1)^0,w,c
  7349   0019C4  22DA               	addwfc	fsr2h,f,c
  7350   0019C6  CFDE F015          	movff	postinc2,??_setMotorPWM
  7351   0019CA  CFDD F016          	movff	postdec2,??_setMotorPWM+1
  7352   0019CE  C015  FFD9         	movff	??_setMotorPWM,fsr2l
  7353   0019D2  C016  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7354   0019D6  C017  FFDF         	movff	setMotorPWM@posDuty,indf2
  7355   0019DA                     l138:
  7356   0019DA  0012               	return		;funcret
  7357   0019DC                     __end_of_setMotorPWM:
  7358                           	callstack 0
  7359                           
  7360 ;; *************** function ___wmul *****************
  7361 ;; Defined at:
  7362 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  7363 ;; Parameters:    Size  Location     Type
  7364 ;;  multiplier      2    0[COMRAM] unsigned int 
  7365 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7366 ;; Auto vars:     Size  Location     Type
  7367 ;;  product         2    4[COMRAM] unsigned int 
  7368 ;; Return value:  Size  Location     Type
  7369 ;;                  2    0[COMRAM] unsigned int 
  7370 ;; Registers used:
  7371 ;;		wreg, status,2, status,0, prodl, prodh
  7372 ;; Tracked objects:
  7373 ;;		On entry : 0/0
  7374 ;;		On exit  : 0/0
  7375 ;;		Unchanged: 0/0
  7376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7377 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7378 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7380 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7381 ;;Total ram usage:        6 bytes
  7382 ;; Hardware stack levels used: 1
  7383 ;; Hardware stack levels required when called: 2
  7384 ;; This function calls:
  7385 ;;		Nothing
  7386 ;; This function is called by:
  7387 ;;		_setMotorPWM
  7388 ;; This function uses a non-reentrant model
  7389 ;;
  7390                           
  7391                           	psect	text35
  7392   0027AA                     __ptext35:
  7393                           	callstack 0
  7394   0027AA                     ___wmul:
  7395                           	callstack 25
  7396   0027AA  5001               	movf	___wmul@multiplier^0,w,c
  7397   0027AC  0203               	mulwf	___wmul@multiplicand^0,c
  7398   0027AE  CFF3 F005          	movff	prodl,___wmul@product
  7399   0027B2  CFF4 F006          	movff	prodh,___wmul@product+1
  7400   0027B6  5001               	movf	___wmul@multiplier^0,w,c
  7401   0027B8  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  7402   0027BA  50F3               	movf	243,w,c
  7403   0027BC  2606               	addwf	(___wmul@product+1)^0,f,c
  7404   0027BE  5002               	movf	(___wmul@multiplier+1)^0,w,c
  7405   0027C0  0203               	mulwf	___wmul@multiplicand^0,c
  7406   0027C2  50F3               	movf	243,w,c
  7407   0027C4  2606               	addwf	(___wmul@product+1)^0,f,c
  7408   0027C6  C005  F001         	movff	___wmul@product,?___wmul
  7409   0027CA  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7410   0027CE  0012               	return		;funcret
  7411   0027D0                     __end_of___wmul:
  7412                           	callstack 0
  7413                           
  7414 ;; *************** function ___lwdiv *****************
  7415 ;; Defined at:
  7416 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  7417 ;; Parameters:    Size  Location     Type
  7418 ;;  dividend        2   11[COMRAM] unsigned int 
  7419 ;;  divisor         2   13[COMRAM] unsigned int 
  7420 ;; Auto vars:     Size  Location     Type
  7421 ;;  quotient        2   15[COMRAM] unsigned int 
  7422 ;;  counter         1   17[COMRAM] unsigned char 
  7423 ;; Return value:  Size  Location     Type
  7424 ;;                  2   11[COMRAM] unsigned int 
  7425 ;; Registers used:
  7426 ;;		wreg, status,2, status,0
  7427 ;; Tracked objects:
  7428 ;;		On entry : 0/0
  7429 ;;		On exit  : 0/0
  7430 ;;		Unchanged: 0/0
  7431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7432 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7433 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7435 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7436 ;;Total ram usage:        7 bytes
  7437 ;; Hardware stack levels used: 1
  7438 ;; Hardware stack levels required when called: 2
  7439 ;; This function calls:
  7440 ;;		Nothing
  7441 ;; This function is called by:
  7442 ;;		_setMotorPWM
  7443 ;;		_main
  7444 ;; This function uses a non-reentrant model
  7445 ;;
  7446                           
  7447                           	psect	text36
  7448   00244E                     __ptext36:
  7449                           	callstack 0
  7450   00244E                     ___lwdiv:
  7451                           	callstack 25
  7452   00244E  0E00               	movlw	0
  7453   002450  6E11               	movwf	(___lwdiv@quotient+1)^0,c
  7454   002452  0E00               	movlw	0
  7455   002454  6E10               	movwf	___lwdiv@quotient^0,c
  7456   002456  500E               	movf	___lwdiv@divisor^0,w,c
  7457   002458  100F               	iorwf	(___lwdiv@divisor+1)^0,w,c
  7458   00245A  B4D8               	btfsc	status,2,c
  7459   00245C  EF32  F012         	goto	u1671
  7460   002460  EF34  F012         	goto	u1670
  7461   002464                     u1671:
  7462   002464  EF5C  F012         	goto	l969
  7463   002468                     u1670:
  7464   002468  0E01               	movlw	1
  7465   00246A  6E12               	movwf	___lwdiv@counter^0,c
  7466   00246C  EF3C  F012         	goto	l2381
  7467   002470                     l2379:
  7468   002470  90D8               	bcf	status,0,c
  7469   002472  360E               	rlcf	___lwdiv@divisor^0,f,c
  7470   002474  360F               	rlcf	(___lwdiv@divisor+1)^0,f,c
  7471   002476  2A12               	incf	___lwdiv@counter^0,f,c
  7472   002478                     l2381:
  7473   002478  AE0F               	btfss	(___lwdiv@divisor+1)^0,7,c
  7474   00247A  EF41  F012         	goto	u1681
  7475   00247E  EF43  F012         	goto	u1680
  7476   002482                     u1681:
  7477   002482  EF38  F012         	goto	l2379
  7478   002486                     u1680:
  7479   002486                     l2383:
  7480   002486  90D8               	bcf	status,0,c
  7481   002488  3610               	rlcf	___lwdiv@quotient^0,f,c
  7482   00248A  3611               	rlcf	(___lwdiv@quotient+1)^0,f,c
  7483   00248C  500E               	movf	___lwdiv@divisor^0,w,c
  7484   00248E  5C0C               	subwf	___lwdiv@dividend^0,w,c
  7485   002490  500F               	movf	(___lwdiv@divisor+1)^0,w,c
  7486   002492  580D               	subwfb	(___lwdiv@dividend+1)^0,w,c
  7487   002494  A0D8               	btfss	status,0,c
  7488   002496  EF4F  F012         	goto	u1691
  7489   00249A  EF51  F012         	goto	u1690
  7490   00249E                     u1691:
  7491   00249E  EF56  F012         	goto	l2391
  7492   0024A2                     u1690:
  7493   0024A2  500E               	movf	___lwdiv@divisor^0,w,c
  7494   0024A4  5E0C               	subwf	___lwdiv@dividend^0,f,c
  7495   0024A6  500F               	movf	(___lwdiv@divisor+1)^0,w,c
  7496   0024A8  5A0D               	subwfb	(___lwdiv@dividend+1)^0,f,c
  7497   0024AA  8010               	bsf	___lwdiv@quotient^0,0,c
  7498   0024AC                     l2391:
  7499   0024AC  90D8               	bcf	status,0,c
  7500   0024AE  320F               	rrcf	(___lwdiv@divisor+1)^0,f,c
  7501   0024B0  320E               	rrcf	___lwdiv@divisor^0,f,c
  7502   0024B2  2E12               	decfsz	___lwdiv@counter^0,f,c
  7503   0024B4  EF43  F012         	goto	l2383
  7504   0024B8                     l969:
  7505   0024B8  C010  F00C         	movff	___lwdiv@quotient,?___lwdiv
  7506   0024BC  C011  F00D         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7507   0024C0  0012               	return		;funcret
  7508   0024C2                     __end_of___lwdiv:
  7509                           	callstack 0
  7510                           
  7511 ;; *************** function _Timer0_init *****************
  7512 ;; Defined at:
  7513 ;;		line 19 in file "timer0.c"
  7514 ;; Parameters:    Size  Location     Type
  7515 ;;		None
  7516 ;; Auto vars:     Size  Location     Type
  7517 ;;		None
  7518 ;; Return value:  Size  Location     Type
  7519 ;;                  1    wreg      void 
  7520 ;; Registers used:
  7521 ;;		wreg, status,2
  7522 ;; Tracked objects:
  7523 ;;		On entry : 0/0
  7524 ;;		On exit  : 0/0
  7525 ;;		Unchanged: 0/0
  7526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7531 ;;Total ram usage:        0 bytes
  7532 ;; Hardware stack levels used: 1
  7533 ;; Hardware stack levels required when called: 2
  7534 ;; This function calls:
  7535 ;;		Nothing
  7536 ;; This function is called by:
  7537 ;;		_main
  7538 ;; This function uses a non-reentrant model
  7539 ;;
  7540                           
  7541                           	psect	text37
  7542   002810                     __ptext37:
  7543                           	callstack 0
  7544   002810                     _Timer0_init:
  7545                           	callstack 28
  7546   002810                     
  7547                           ;timer0.c: 32:     T0CON1bits.T0CS=0b010;
  7548   002810  50D6               	movf	214,w,c	;volatile
  7549   002812  0B1F               	andlw	-225
  7550   002814  0940               	iorlw	64
  7551   002816  6ED6               	movwf	214,c	;volatile
  7552   002818                     
  7553                           ;timer0.c: 33:     T0CON1bits.T0ASYNC=1;
  7554   002818  88D6               	bsf	214,4,c	;volatile
  7555                           
  7556                           ;timer0.c: 34:     T0CON1bits.T0CKPS=0b0000;
  7557   00281A  0EF0               	movlw	-16
  7558   00281C  16D6               	andwf	214,f,c	;volatile
  7559   00281E                     
  7560                           ;timer0.c: 35:     T0CON0bits.T016BIT=1;
  7561   00281E  88D5               	bsf	213,4,c	;volatile
  7562                           
  7563                           ;timer0.c: 37:     TMR0H=1535>>8;
  7564   002820  0E05               	movlw	5
  7565   002822  6ED4               	movwf	212,c	;volatile
  7566   002824                     
  7567                           ;timer0.c: 38:     TMR0L=1535;
  7568   002824  68D3               	setf	211,c	;volatile
  7569   002826                     
  7570                           ;timer0.c: 39:     T0CON0bits.T0EN=1;
  7571   002826  8ED5               	bsf	213,7,c	;volatile
  7572   002828  0012               	return		;funcret
  7573   00282A                     __end_of_Timer0_init:
  7574                           	callstack 0
  7575                           
  7576 ;; *************** function _Interrupts_init *****************
  7577 ;; Defined at:
  7578 ;;		line 8 in file "timer0.c"
  7579 ;; Parameters:    Size  Location     Type
  7580 ;;		None
  7581 ;; Auto vars:     Size  Location     Type
  7582 ;;		None
  7583 ;; Return value:  Size  Location     Type
  7584 ;;                  1    wreg      void 
  7585 ;; Registers used:
  7586 ;;		None
  7587 ;; Tracked objects:
  7588 ;;		On entry : 0/0
  7589 ;;		On exit  : 0/0
  7590 ;;		Unchanged: 0/0
  7591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7596 ;;Total ram usage:        0 bytes
  7597 ;; Hardware stack levels used: 1
  7598 ;; Hardware stack levels required when called: 2
  7599 ;; This function calls:
  7600 ;;		Nothing
  7601 ;; This function is called by:
  7602 ;;		_main
  7603 ;; This function uses a non-reentrant model
  7604 ;;
  7605                           
  7606                           	psect	text38
  7607   002866                     __ptext38:
  7608                           	callstack 0
  7609   002866                     _Interrupts_init:
  7610                           	callstack 28
  7611   002866                     
  7612                           ;timer0.c: 10:     PIE0bits.TMR0IE=1;
  7613   002866  010E               	movlb	14	; () banked
  7614   002868  8B29               	bsf	41,5,b	;volatile
  7615                           
  7616                           ;timer0.c: 11:     INTCONbits.PEIE=1;
  7617   00286A  8CF2               	bsf	242,6,c	;volatile
  7618                           
  7619                           ;timer0.c: 12:     INTCONbits.IPEN=0;
  7620   00286C  9AF2               	bcf	242,5,c	;volatile
  7621                           
  7622                           ;timer0.c: 13:     INTCONbits.GIE=1;
  7623   00286E  8EF2               	bsf	242,7,c	;volatile
  7624   002870                     
  7625                           ; BSR set to: 14
  7626   002870  0012               	return		;funcret
  7627   002872                     __end_of_Interrupts_init:
  7628                           	callstack 0
  7629                           
  7630 ;; *************** function _ADC_init *****************
  7631 ;; Defined at:
  7632 ;;		line 9 in file "ADC.c"
  7633 ;; Parameters:    Size  Location     Type
  7634 ;;		None
  7635 ;; Auto vars:     Size  Location     Type
  7636 ;;		None
  7637 ;; Return value:  Size  Location     Type
  7638 ;;                  1    wreg      void 
  7639 ;; Registers used:
  7640 ;;		wreg, status,2
  7641 ;; Tracked objects:
  7642 ;;		On entry : 0/0
  7643 ;;		On exit  : 0/0
  7644 ;;		Unchanged: 0/0
  7645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7650 ;;Total ram usage:        0 bytes
  7651 ;; Hardware stack levels used: 1
  7652 ;; Hardware stack levels required when called: 2
  7653 ;; This function calls:
  7654 ;;		Nothing
  7655 ;; This function is called by:
  7656 ;;		_main
  7657 ;; This function uses a non-reentrant model
  7658 ;;
  7659                           
  7660                           	psect	text39
  7661   00282A                     __ptext39:
  7662                           	callstack 0
  7663   00282A                     _ADC_init:
  7664                           	callstack 28
  7665   00282A                     
  7666                           ;ADC.c: 11:     TRISFbits.TRISF6=1;
  7667   00282A  8C86               	bsf	134,6,c	;volatile
  7668                           
  7669                           ;ADC.c: 12:     ANSELFbits.ANSELF6=1;
  7670   00282C  010E               	movlb	14	; () banked
  7671   00282E  8DB4               	bsf	180,6,b	;volatile
  7672                           
  7673                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
  7674   002830  010F               	movlb	15	; () banked
  7675   002832  9958               	bcf	88,4,b	;volatile
  7676   002834                     
  7677                           ; BSR set to: 15
  7678                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
  7679   002834  0EFC               	movlw	-4
  7680   002836  1758               	andwf	88,f,b	;volatile
  7681                           
  7682                           ;ADC.c: 17:     ADPCH=0b101110;
  7683   002838  0E2E               	movlw	46
  7684   00283A  6F5F               	movwf	95,b	;volatile
  7685   00283C                     
  7686                           ; BSR set to: 15
  7687                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
  7688   00283C  9460               	bcf	96,2,c	;volatile
  7689   00283E                     
  7690                           ; BSR set to: 15
  7691                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
  7692   00283E  8860               	bsf	96,4,c	;volatile
  7693   002840                     
  7694                           ; BSR set to: 15
  7695                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
  7696   002840  8E60               	bsf	96,7,c	;volatile
  7697   002842                     
  7698                           ; BSR set to: 15
  7699   002842  0012               	return		;funcret
  7700   002844                     __end_of_ADC_init:
  7701                           	callstack 0
  7702                           
  7703 ;; *************** function _ADC_getval *****************
  7704 ;; Defined at:
  7705 ;;		line 23 in file "ADC.c"
  7706 ;; Parameters:    Size  Location     Type
  7707 ;;		None
  7708 ;; Auto vars:     Size  Location     Type
  7709 ;;  tmpval          2    2[COMRAM] unsigned int 
  7710 ;; Return value:  Size  Location     Type
  7711 ;;                  2    0[COMRAM] unsigned int 
  7712 ;; Registers used:
  7713 ;;		wreg, status,2, status,0
  7714 ;; Tracked objects:
  7715 ;;		On entry : 0/0
  7716 ;;		On exit  : 0/0
  7717 ;;		Unchanged: 0/0
  7718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7719 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7720 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7722 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7723 ;;Total ram usage:        4 bytes
  7724 ;; Hardware stack levels used: 1
  7725 ;; Hardware stack levels required when called: 2
  7726 ;; This function calls:
  7727 ;;		Nothing
  7728 ;; This function is called by:
  7729 ;;		_main
  7730 ;; This function uses a non-reentrant model
  7731 ;;
  7732                           
  7733                           	psect	text40
  7734   002728                     __ptext40:
  7735                           	callstack 0
  7736   002728                     _ADC_getval:
  7737                           	callstack 28
  7738   002728                     
  7739                           ;ADC.c: 25:     unsigned int tmpval;;ADC.c: 27:     ADCON0bits.GO = 1;
  7740   002728  8060               	bsf	96,0,c	;volatile
  7741   00272A                     l472:
  7742   00272A  B060               	btfsc	96,0,c	;volatile
  7743   00272C  EF9A  F013         	goto	u2751
  7744   002730  EF9C  F013         	goto	u2750
  7745   002734                     u2751:
  7746   002734  EF95  F013         	goto	l472
  7747   002738                     u2750:
  7748   002738                     
  7749                           ;ADC.c: 31:     tmpval = ADRESH;
  7750   002738  CF64 F003          	movff	3940,ADC_getval@tmpval	;volatile
  7751   00273C  6A04               	clrf	(ADC_getval@tmpval+1)^0,c
  7752   00273E                     
  7753                           ;ADC.c: 33:     tmpval = 255 - tmpval;
  7754   00273E  5003               	movf	ADC_getval@tmpval^0,w,c
  7755   002740  08FF               	sublw	255
  7756   002742  6E03               	movwf	ADC_getval@tmpval^0,c
  7757   002744  5004               	movf	(ADC_getval@tmpval+1)^0,w,c
  7758   002746  A0D8               	btfss	status,0,c
  7759   002748  2AE8               	incf	wreg,f,c
  7760   00274A  0800               	sublw	0
  7761   00274C  6E04               	movwf	(ADC_getval@tmpval+1)^0,c
  7762   00274E                     
  7763                           ;ADC.c: 36:     return tmpval;
  7764   00274E  C003  F001         	movff	ADC_getval@tmpval,?_ADC_getval
  7765   002752  C004  F002         	movff	ADC_getval@tmpval+1,?_ADC_getval+1
  7766   002756  0012               	return		;funcret
  7767   002758                     __end_of_ADC_getval:
  7768                           	callstack 0
  7769                           
  7770 ;; *************** function _HighISR *****************
  7771 ;; Defined at:
  7772 ;;		line 193 in file "mainfinal.c"
  7773 ;; Parameters:    Size  Location     Type
  7774 ;;		None
  7775 ;; Auto vars:     Size  Location     Type
  7776 ;;		None
  7777 ;; Return value:  Size  Location     Type
  7778 ;;                  1    wreg      void 
  7779 ;; Registers used:
  7780 ;;		wreg, status,2, status,0, cstack
  7781 ;; Tracked objects:
  7782 ;;		On entry : 0/0
  7783 ;;		On exit  : 0/0
  7784 ;;		Unchanged: 0/0
  7785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7790 ;;Total ram usage:        0 bytes
  7791 ;; Hardware stack levels used: 1
  7792 ;; Hardware stack levels required when called: 1
  7793 ;; This function calls:
  7794 ;;		_starttimer0
  7795 ;; This function is called by:
  7796 ;;		Interrupt level 2
  7797 ;; This function uses a non-reentrant model
  7798 ;;
  7799                           
  7800                           	psect	intcode
  7801   000008                     __pintcode:
  7802                           	callstack 0
  7803   000008                     _HighISR:
  7804                           	callstack 22
  7805                           
  7806                           ;incstack = 0
  7807   000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7808   00000A                     
  7809                           ;mainfinal.c: 195:     if (PIR0bits.TMR0IF == 1 & interruptenable == 1)
  7810   00000A  010E               	movlb	14	; () banked
  7811   00000C  AB33               	btfss	51,5,b	;volatile
  7812   00000E  EF0B  F000         	goto	i2u331_41
  7813   000012  EF0D  F000         	goto	i2u331_40
  7814   000016                     i2u331_41:
  7815   000016  EF19  F000         	goto	i2l3579
  7816   00001A                     i2u331_40:
  7817   00001A                     
  7818                           ; BSR set to: 14
  7819   00001A  0454               	decf	_interruptenable^0,w,c
  7820   00001C  A4D8               	btfss	status,2,c
  7821   00001E  EF13  F000         	goto	i2u332_41
  7822   000022  EF15  F000         	goto	i2u332_40
  7823   000026                     i2u332_41:
  7824   000026  EF19  F000         	goto	i2l3579
  7825   00002A                     i2u332_40:
  7826   00002A                     
  7827                           ; BSR set to: 14
  7828                           ;mainfinal.c: 196:     {;mainfinal.c: 197:         timercount++;
  7829   00002A  4A52               	infsnz	_timercount^0,f,c
  7830   00002C  2A53               	incf	(_timercount+1)^0,f,c
  7831   00002E                     
  7832                           ; BSR set to: 14
  7833                           ;mainfinal.c: 198:         starttimer0();
  7834   00002E  EC48  F014         	call	_starttimer0	;wreg free
  7835   000032                     i2l3579:
  7836                           
  7837                           ;mainfinal.c: 200:     PIR0bits.TMR0IF=0;
  7838   000032  010E               	movlb	14	; () banked
  7839   000034  9B33               	bcf	51,5,b	;volatile
  7840   000036                     
  7841                           ; BSR set to: 14
  7842   000036  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7843   000038  0011               	retfie		f
  7844   00003A                     __end_of_HighISR:
  7845                           	callstack 0
  7846                           
  7847 ;; *************** function _starttimer0 *****************
  7848 ;; Defined at:
  7849 ;;		line 42 in file "timer0.c"
  7850 ;; Parameters:    Size  Location     Type
  7851 ;;		None
  7852 ;; Auto vars:     Size  Location     Type
  7853 ;;		None
  7854 ;; Return value:  Size  Location     Type
  7855 ;;                  1    wreg      void 
  7856 ;; Registers used:
  7857 ;;		wreg, status,2
  7858 ;; Tracked objects:
  7859 ;;		On entry : 0/0
  7860 ;;		On exit  : 0/0
  7861 ;;		Unchanged: 0/0
  7862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7867 ;;Total ram usage:        0 bytes
  7868 ;; Hardware stack levels used: 1
  7869 ;; This function calls:
  7870 ;;		Nothing
  7871 ;; This function is called by:
  7872 ;;		_HighISR
  7873 ;; This function uses a non-reentrant model
  7874 ;;
  7875                           
  7876                           	psect	text42
  7877   002890                     __ptext42:
  7878                           	callstack 0
  7879   002890                     _starttimer0:
  7880                           	callstack 22
  7881   002890                     
  7882                           ;timer0.c: 43:     TMR0H=1535>>8;
  7883   002890  0E05               	movlw	5
  7884   002892  6ED4               	movwf	212,c	;volatile
  7885   002894                     
  7886                           ;timer0.c: 44:     TMR0L=1535;
  7887   002894  68D3               	setf	211,c	;volatile
  7888   002896  0012               	return		;funcret
  7889   002898                     __end_of_starttimer0:
  7890                           	callstack 0
  7891   000000                     
  7892                           	psect	rparam
  7893   000000                     
  7894                           	psect	temp
  7895   000057                     btemp:
  7896                           	callstack 0
  7897   000057                     	ds	1
  7898   000000                     int$flags	set	btemp
  7899   000000                     wtemp8	set	btemp+1
  7900   000000                     ttemp5	set	btemp+1
  7901   000000                     ttemp6	set	btemp+4
  7902   000000                     ttemp7	set	btemp+8
  7903                           
  7904                           	psect	idloc
  7905                           
  7906                           ;Config register IDLOC0 @ 0x200000
  7907                           ;	unspecified, using default values
  7908   200000                     	org	2097152
  7909   200000  0FFF               	dw	4095
  7910                           
  7911                           ;Config register IDLOC1 @ 0x200002
  7912                           ;	unspecified, using default values
  7913   200002                     	org	2097154
  7914   200002  0FFF               	dw	4095
  7915                           
  7916                           ;Config register IDLOC2 @ 0x200004
  7917                           ;	unspecified, using default values
  7918   200004                     	org	2097156
  7919   200004  0FFF               	dw	4095
  7920                           
  7921                           ;Config register IDLOC3 @ 0x200006
  7922                           ;	unspecified, using default values
  7923   200006                     	org	2097158
  7924   200006  0FFF               	dw	4095
  7925                           
  7926                           ;Config register IDLOC4 @ 0x200008
  7927                           ;	unspecified, using default values
  7928   200008                     	org	2097160
  7929   200008  0FFF               	dw	4095
  7930                           
  7931                           ;Config register IDLOC5 @ 0x20000A
  7932                           ;	unspecified, using default values
  7933   20000A                     	org	2097162
  7934   20000A  0FFF               	dw	4095
  7935                           
  7936                           ;Config register IDLOC6 @ 0x20000C
  7937                           ;	unspecified, using default values
  7938   20000C                     	org	2097164
  7939   20000C  0FFF               	dw	4095
  7940                           
  7941                           ;Config register IDLOC7 @ 0x20000E
  7942                           ;	unspecified, using default values
  7943   20000E                     	org	2097166
  7944   20000E  0FFF               	dw	4095
  7945                           
  7946                           	psect	config
  7947                           
  7948                           ;Config register CONFIG1L @ 0x300000
  7949                           ;	External Oscillator mode Selection bits
  7950                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  7951                           ;	Power-up default value for COSC bits
  7952                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  7953   300000                     	org	3145728
  7954   300000  AA                 	db	170
  7955                           
  7956                           ;Config register CONFIG1H @ 0x300001
  7957                           ;	unspecified, using default values
  7958                           ;	Clock Out Enable bit
  7959                           ;	CLKOUTEN = 0x1, unprogrammed default
  7960                           ;	Clock Switch Enable bit
  7961                           ;	CSWEN = 0x1, unprogrammed default
  7962                           ;	Fail-Safe Clock Monitor Enable bit
  7963                           ;	FCMEN = 0x1, unprogrammed default
  7964   300001                     	org	3145729
  7965   300001  FF                 	db	255
  7966                           
  7967                           ;Config register CONFIG2L @ 0x300002
  7968                           ;	unspecified, using default values
  7969                           ;	Master Clear Enable bit
  7970                           ;	MCLRE = 0x1, unprogrammed default
  7971                           ;	Power-up Timer Enable bit
  7972                           ;	PWRTE = 0x1, unprogrammed default
  7973                           ;	Low-power BOR enable bit
  7974                           ;	LPBOREN = 0x1, unprogrammed default
  7975                           ;	Brown-out Reset Enable bits
  7976                           ;	BOREN = 0x3, unprogrammed default
  7977   300002                     	org	3145730
  7978   300002  FF                 	db	255
  7979                           
  7980                           ;Config register CONFIG2H @ 0x300003
  7981                           ;	unspecified, using default values
  7982                           ;	Brown Out Reset Voltage selection bits
  7983                           ;	BORV = 0x3, unprogrammed default
  7984                           ;	ZCD Disable bit
  7985                           ;	ZCD = 0x1, unprogrammed default
  7986                           ;	PPSLOCK bit One-Way Set Enable bit
  7987                           ;	PPS1WAY = 0x1, unprogrammed default
  7988                           ;	Stack Full/Underflow Reset Enable bit
  7989                           ;	STVREN = 0x1, unprogrammed default
  7990                           ;	Debugger Enable bit
  7991                           ;	DEBUG = 0x1, unprogrammed default
  7992                           ;	Extended Instruction Set Enable bit
  7993                           ;	XINST = 0x1, unprogrammed default
  7994   300003                     	org	3145731
  7995   300003  FF                 	db	255
  7996                           
  7997                           ;Config register CONFIG3L @ 0x300004
  7998                           ;	WDT Period Select bits
  7999                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  8000                           ;	WDT operating mode
  8001                           ;	WDTE = OFF, WDT Disabled
  8002   300004                     	org	3145732
  8003   300004  9F                 	db	159
  8004                           
  8005                           ;Config register CONFIG3H @ 0x300005
  8006                           ;	unspecified, using default values
  8007                           ;	WDT Window Select bits
  8008                           ;	WDTCWS = 0x7, unprogrammed default
  8009                           ;	WDT input clock selector
  8010                           ;	WDTCCS = 0x7, unprogrammed default
  8011   300005                     	org	3145733
  8012   300005  FF                 	db	255
  8013                           
  8014                           ;Config register CONFIG4L @ 0x300006
  8015                           ;	unspecified, using default values
  8016                           ;	Write Protection Block 0
  8017                           ;	WRT0 = 0x1, unprogrammed default
  8018                           ;	Write Protection Block 1
  8019                           ;	WRT1 = 0x1, unprogrammed default
  8020                           ;	Write Protection Block 2
  8021                           ;	WRT2 = 0x1, unprogrammed default
  8022                           ;	Write Protection Block 3
  8023                           ;	WRT3 = 0x1, unprogrammed default
  8024                           ;	Write Protection Block 3
  8025                           ;	WRT4 = 0x1, unprogrammed default
  8026                           ;	Write Protection Block 3
  8027                           ;	WRT5 = 0x1, unprogrammed default
  8028                           ;	Write Protection Block 3
  8029                           ;	WRT6 = 0x1, unprogrammed default
  8030                           ;	Write Protection Block 3
  8031                           ;	WRT7 = 0x1, unprogrammed default
  8032   300006                     	org	3145734
  8033   300006  FF                 	db	255
  8034                           
  8035                           ;Config register CONFIG4H @ 0x300007
  8036                           ;	unspecified, using default values
  8037                           ;	Configuration Register Write Protection bit
  8038                           ;	WRTC = 0x1, unprogrammed default
  8039                           ;	Boot Block Write Protection bit
  8040                           ;	WRTB = 0x1, unprogrammed default
  8041                           ;	Data EEPROM Write Protection bit
  8042                           ;	WRTD = 0x1, unprogrammed default
  8043                           ;	Scanner Enable bit
  8044                           ;	SCANE = 0x1, unprogrammed default
  8045                           ;	Low Voltage Programming Enable bit
  8046                           ;	LVP = 0x1, unprogrammed default
  8047   300007                     	org	3145735
  8048   300007  FF                 	db	255
  8049                           
  8050                           ;Config register CONFIG5L @ 0x300008
  8051                           ;	unspecified, using default values
  8052                           ;	UserNVM Program Memory Code Protection bit
  8053                           ;	CP = 0x1, unprogrammed default
  8054                           ;	DataNVM Memory Code Protection bit
  8055                           ;	CPD = 0x1, unprogrammed default
  8056   300008                     	org	3145736
  8057   300008  FF                 	db	255
  8058                           
  8059                           ;Config register CONFIG5H @ 0x300009
  8060                           ;	unspecified, using default values
  8061   300009                     	org	3145737
  8062   300009  FF                 	db	255
  8063                           
  8064                           ;Config register CONFIG6L @ 0x30000A
  8065                           ;	unspecified, using default values
  8066                           ;	Table Read Protection Block 0
  8067                           ;	EBTR0 = 0x1, unprogrammed default
  8068                           ;	Table Read Protection Block 1
  8069                           ;	EBTR1 = 0x1, unprogrammed default
  8070                           ;	Table Read Protection Block 2
  8071                           ;	EBTR2 = 0x1, unprogrammed default
  8072                           ;	Table Read Protection Block 3
  8073                           ;	EBTR3 = 0x1, unprogrammed default
  8074                           ;	Table Read Protection Block 4
  8075                           ;	EBTR4 = 0x1, unprogrammed default
  8076                           ;	Table Read Protection Block 5
  8077                           ;	EBTR5 = 0x1, unprogrammed default
  8078                           ;	Table Read Protection Block 6
  8079                           ;	EBTR6 = 0x1, unprogrammed default
  8080                           ;	Table Read Protection Block 7
  8081                           ;	EBTR7 = 0x1, unprogrammed default
  8082   30000A                     	org	3145738
  8083   30000A  FF                 	db	255
  8084                           
  8085                           ;Config register CONFIG6H @ 0x30000B
  8086                           ;	unspecified, using default values
  8087                           ;	Boot Block Table Read Protection bit
  8088                           ;	EBTRB = 0x1, unprogrammed default
  8089   30000B                     	org	3145739
  8090   30000B  FF                 	db	255
  8091                           tosu	equ	0xFFF
  8092                           tosh	equ	0xFFE
  8093                           tosl	equ	0xFFD
  8094                           stkptr	equ	0xFFC
  8095                           pclatu	equ	0xFFB
  8096                           pclath	equ	0xFFA
  8097                           pcl	equ	0xFF9
  8098                           tblptru	equ	0xFF8
  8099                           tblptrh	equ	0xFF7
  8100                           tblptrl	equ	0xFF6
  8101                           tablat	equ	0xFF5
  8102                           prodh	equ	0xFF4
  8103                           prodl	equ	0xFF3
  8104                           indf0	equ	0xFEF
  8105                           postinc0	equ	0xFEE
  8106                           postdec0	equ	0xFED
  8107                           preinc0	equ	0xFEC
  8108                           plusw0	equ	0xFEB
  8109                           fsr0h	equ	0xFEA
  8110                           fsr0l	equ	0xFE9
  8111                           wreg	equ	0xFE8
  8112                           indf1	equ	0xFE7
  8113                           postinc1	equ	0xFE6
  8114                           postdec1	equ	0xFE5
  8115                           preinc1	equ	0xFE4
  8116                           plusw1	equ	0xFE3
  8117                           fsr1h	equ	0xFE2
  8118                           fsr1l	equ	0xFE1
  8119                           bsr	equ	0xFE0
  8120                           indf2	equ	0xFDF
  8121                           postinc2	equ	0xFDE
  8122                           postdec2	equ	0xFDD
  8123                           preinc2	equ	0xFDC
  8124                           plusw2	equ	0xFDB
  8125                           fsr2h	equ	0xFDA
  8126                           fsr2l	equ	0xFD9
  8127                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         310
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     77      86
    BANK0           160     72      73
    BANK1           256      0     100
    BANK2           256      0     200
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    carryoutstep@amb	PTR struct colors size(2) Largest target is 8
		 -> main@ambient(BANK0[8]), 

    carryoutstep@mx	PTR struct colors size(2) Largest target is 8
		 -> main@max(BANK0[8]), 

    carryoutstep@read	PTR struct colors size(2) Largest target is 8
		 -> main@reading(BANK0[8]), 

    decide_color@mx	PTR struct colors size(2) Largest target is 8
		 -> main@reading(BANK0[8]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    smallmovement@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    smallmovement@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    smallmovement@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    smallmovement@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    smallmovement@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), carryoutstep@motorR(BANK0[9]), 

    smallmovement@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), carryoutstep@motorL(BANK0[9]), 

    square@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    square@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    square@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), returnhome@motorR(COMRAM[9]), carryoutstep@motorR(BANK0[9]), 

    square@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    square@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    square@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), returnhome@motorL(COMRAM[9]), carryoutstep@motorL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), returnhome@motorR(COMRAM[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), returnhome@motorL(COMRAM[9]), 

    turn180@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    turn180@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    turn180@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    turn180@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    turn180@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> returnstep@motorR(COMRAM[9]), carryoutstep@motorR(BANK0[9]), 

    turn180@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> returnstep@motorL(COMRAM[9]), carryoutstep@motorL(BANK0[9]), 

    turnRight135@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    turnRight135@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    turnRight135@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    turnRight135@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    turnRight135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> returnstep@motorR(COMRAM[9]), carryoutstep@motorR(BANK0[9]), 

    turnRight135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> returnstep@motorL(COMRAM[9]), carryoutstep@motorL(BANK0[9]), 

    turnLeft135@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    turnLeft135@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    turnLeft135@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    turnLeft135@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    turnLeft135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> returnstep@motorR(COMRAM[9]), carryoutstep@motorR(BANK0[9]), 

    turnLeft135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> returnstep@motorL(COMRAM[9]), carryoutstep@motorL(BANK0[9]), 

    turnRight90@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    turnRight90@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    turnRight90@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    turnRight90@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    turnRight90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> returnstep@motorR(COMRAM[9]), carryoutstep@motorR(BANK0[9]), 

    turnRight90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> returnstep@motorL(COMRAM[9]), carryoutstep@motorL(BANK0[9]), 

    turnLeft90@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    turnLeft90@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    turnLeft90@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    turnLeft90@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    turnLeft90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> returnstep@motorR(COMRAM[9]), carryoutstep@motorR(BANK0[9]), 

    turnLeft90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> returnstep@motorL(COMRAM[9]), carryoutstep@motorL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), returnstep@motorR(COMRAM[9]), returnhome@motorR(COMRAM[9]), carryoutstep@motorR(BANK0[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), returnstep@motorL(COMRAM[9]), returnhome@motorL(COMRAM[9]), carryoutstep@motorL(BANK0[9]), 

    S801DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    S801DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), main@motorL(BANK0[9]), returnstep@motorR(COMRAM[9]), returnstep@motorL(COMRAM[9]), 
		 -> returnhome@motorR(COMRAM[9]), returnhome@motorL(COMRAM[9]), carryoutstep@motorR(BANK0[9]), carryoutstep@motorL(BANK0[9]), 


Critical Paths under _main in COMRAM

    _main->_returnhome
    _decide_color->___fldiv
    ___fltol->___flmul
    ___fldiv->___xxtofl
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _carryoutstep->_returnhome
    _smallmovement->_stop
    _returnhome->_returnstep
    _square->_stop
    _returnstep->_turn180
    _returnstep->_turnLeft135
    _returnstep->_turnLeft90
    _returnstep->_turnRight135
    _returnstep->_turnRight90
    _turnRight90->_stop
    _turnRight135->_stop
    _turnLeft90->_stop
    _turnLeft135->_stop
    _turn180->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->_color_read_Blue
    ___lwdiv->_color_read_Clear
    ___lwdiv->_color_read_Green
    ___lwdiv->_color_read_Red

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_carryoutstep

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                49    49      0  334198
                                             75 COMRAM     2     2      0
                                             25 BANK0     47    47      0
                         _ADC_getval
                           _ADC_init
                  _I2C_2_Master_Init
                    _Interrupts_init
                        _Timer0_init
                            ___lwdiv
                       _carryoutstep
                   _color_click_init
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                       _decide_color
                     _fullSpeedAhead
                    _initDCmotorsPWM
                         _returnhome
                           _savepath
                           _savetime
                      _smallmovement
                             _square
 ---------------------------------------------------------------------------------
 (1) _savetime                                             2     0      2      99
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _decide_color                                        24    22      2    5964
                                             39 COMRAM    24    22      2
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     616
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                             25 COMRAM    10     6      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2048
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1541
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _carryoutstep                                        25     0     25  192528
                                              0 BANK0     25     0     25
                         _returnhome
                           _savepath
                      _smallmovement
                             _square
                            _turn180
                        _turnLeft135
                         _turnLeft90
                       _turnRight135
                        _turnRight90
 ---------------------------------------------------------------------------------
 (1) _smallmovement                                        6     1      5   13978
                                             29 COMRAM     6     1      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _savepath                                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _returnhome                                          21     3     18   95748
                                             54 COMRAM    21     3     18
                     _fullSpeedAhead
                         _returnstep
                             _square
                               _stop
 ---------------------------------------------------------------------------------
 (1) _square                                               7     2      5   13934
                                             29 COMRAM     7     2      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _returnstep                                          19     1     18   67758
                                             35 COMRAM    19     1     18
                            _turn180
                        _turnLeft135
                         _turnLeft90
                       _turnRight135
                        _turnRight90
 ---------------------------------------------------------------------------------
 (3) _turnRight90                                          6     2      4   13522
                                             29 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (3) _turnRight135                                         6     2      4   13370
                                             29 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (3) _turnLeft90                                           6     2      4   13522
                                             29 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (3) _turnLeft135                                          6     2      4   13370
                                             29 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (3) _turn180                                              6     2      4   13370
                                             29 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _stop                                                 5     1      4    7585
                                             24 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _fullSpeedAhead                                       6     1      5    5893
                                             24 COMRAM     6     1      5
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _setMotorPWM                                          6     4      2    5173
                                             18 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4    3094
                                             11 COMRAM     7     3      4
                             ___wmul (ARG)
                    _color_read_Blue (ARG)
                   _color_read_Clear (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_getval                                           4     2      2      46
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _HighISR                                              0     0      0       0
                        _starttimer0
 ---------------------------------------------------------------------------------
 (9) _starttimer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_getval
   _ADC_init
   _I2C_2_Master_Init
   _Interrupts_init
   _Timer0_init
   ___lwdiv
     ___wmul (ARG)
     _color_read_Blue (ARG)
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _color_read_Clear (ARG)
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green (ARG)
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red (ARG)
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _carryoutstep
     _returnhome
       _fullSpeedAhead
         _setMotorPWM
           ___lwdiv
           ___wmul
       _returnstep
         _turn180
           _setMotorPWM
           _stop
             _setMotorPWM
         _turnLeft135
           _setMotorPWM
           _stop
         _turnLeft90
           _setMotorPWM
           _stop
         _turnRight135
           _setMotorPWM
           _stop
         _turnRight90
           _setMotorPWM
           _stop
       _square
         _setMotorPWM
         _stop
       _stop
     _savepath
     _smallmovement
       _setMotorPWM
       _stop
     _square
     _turn180
     _turnLeft135
     _turnLeft90
     _turnRight135
     _turnRight90
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_read_Blue
   _color_read_Clear
   _color_read_Green
   _color_read_Red
   _decide_color
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
     ___fltol
       ___flmul (ARG)
     ___xxtofl
   _fullSpeedAhead
   _initDCmotorsPWM
   _returnhome
   _savepath
   _savetime
   _smallmovement
   _square

 _HighISR (ROOT)
   _starttimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C8       9       78.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      64       7       39.1%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     48      49       5       45.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4D      56       1       91.5%
BITBIGSFRhlllll     46      0       0      47        0.0%
BITBIGSFRlllhll     35      0       0      56        0.0%
BITBIGSFRhlllhl     31      0       0      45        0.0%
BITBIGSFRllll       2D      0       0      59        0.0%
BITBIGSFRllhh       20      0       0      49        0.0%
BITBIGSFRlllhhh     1E      0       0      51        0.0%
BITBIGSFRhhhhlh     1B      0       0      33        0.0%
BITBIGSFRhhhlll     17      0       0      38        0.0%
BITBIGSFRhlllhl     14      0       0      42        0.0%
BITBIGSFRhhhhll     13      0       0      34        0.0%
BITBIGSFRlllhhh     11      0       0      52        0.0%
BITBIGSFRhhhlhh      E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRllhl        C      0       0      50        0.0%
BITBIGSFRlllhll      B      0       0      58        0.0%
BITBIGSFRlllhll      9      0       0      57        0.0%
BITBIGSFRhlllhl      6      0       0      44        0.0%
BITBIGSFRlllhlh      5      0       0      55        0.0%
BITBIGSFRhhhlll      5      0       0      39        0.0%
BITBIGSFRhlllhl      3      0       0      43        0.0%
BITBIGSFRlllhhl      3      0       0      54        0.0%
BITBIGSFRhllllh      2      0       0      46        0.0%
BITBIGSFRhhhllh      2      0       0      37        0.0%
BITBIGSFRhlllhh      1      0       0      41        0.0%
BITBIGSFRhhhlhl      1      0       0      36        0.0%
BITBIGSFRlllhhh      1      0       0      53        0.0%
BITBIGSFRhlhh        1      0       0      40        0.0%
BITBIGSFRlh          1      0       0      48        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1CB      60        0.0%
DATA                 0      0     1CB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Dec 12 22:41:25 2022

               _color_read_Red 2534                   ___fldiv@aexp 0027                   ___fldiv@bexp 0026  
                 ___fldiv@sign 001F                _color_read_Blue 2624                ??_smallmovement 0023  
                           l30 2782                             l33 27A8                             l42 2884  
                           l27 2780                             l36 288E                             l45 2864  
                           l39 287A                             l48 26B4              fullSpeedAhead@dir 001D  
          ___wmul@multiplicand 0003               _color_read_Clear 25D4               _color_read_Green 2584  
            ??_Interrupts_init 0001                            l210 16BA                            l131 244C  
                          l213 2858                            l152 1D0C                            l160 1DF6  
                          l216 27EE                            l138 19DA                            l146 2532  
                          l227 1AFC                            l172 1EDE                            l228 1B18  
                          l340 085A                            l237 2300                            l333 0770  
                          l166 20AC                            l430 280E                            l334 078C  
                          l335 07F2                            l193 23BC                            l433 2582  
                          l337 0800                            l178 1FC6                            l442 2622  
                          l338 084C                            l187 2178                            l427 26F4  
                          l436 25D2                            l381 2828                            l446 06D0  
                          l199 223E                            l439 2672                            l472 272A  
                          l474 2738                            l378 2870                            l475 2756  
                          l469 2842                            l478 27CE                            l775 1C1E  
                          l976 24C0                            l969 24B8                            prod 000FF3  
                          wreg 000FE8                   ___flmul@aexp 0012                   ___flmul@bexp 0013  
                 ___flmul@sign 000D                   ___flmul@temp 0018                   ___flmul@prod 0014  
                  _starttimer0 2890                    main@ambient 0098                   ___fltol@exp1 0023  
                         l1101 1050                           l1102 103E                           l1060 14E0  
                         l1140 17AA                           l1109 1108                           l1133 1712  
                         l1062 1340                           l1071 1386                           l1136 186E  
                         l1073 13FE                           l1065 1304                           l1074 13EC  
                         l3011 1B6E                           l3003 1B1A                           l1147 1806  
                         l1092 0DE2                           l3013 1B70                           l3005 1B30  
                         l3101 2426                           l3015 1B80                           l3111 2440  
                         l3103 2428                           l1096 1146                           l2401 18F4  
                         l3121 150C                           l3201 26E8                           l3041 1BFE  
                         l3025 1BAA                           l3017 1B84                           l3009 1B44  
                         l3113 244A                           l3105 2432                           l2403 18F8  
                         l2411 24C2                           l3131 1554                           l3123 1512  
                         l3115 14E2                           l3211 26F2                           l3203 26EA  
                         l1099 0FD8                           l3043 1C0E                           l3035 1BD2  
                         l3027 1BB4                           l3019 1B92                           l3051 16DC  
                         l3107 2434                           l3221 2840                           l3213 282A  
                         l2405 193A                           l2413 24C6                           l2421 2502  
                         l2501 203A                           l3141 15B4                           l3133 1568  
                         l3125 1526                           l3117 14F6                           l3205 26EC  
                         l3037 1BDE                           l3029 1BBE                           l3061 1754  
                         l3053 1722                           l3301 0404                           l3109 243E  
                         l3223 2728                           l3215 2834                           l2407 1956  
                         l2423 251A                           l2415 24DA                           l2511 2098  
                         l2503 2046                           l2431 1C34                           l3151 1606  
                         l3143 15BA                           l3135 156E                           l3127 153A  
                         l3119 150A                           l3207 26EE                           l3231 2534  
                         l3039 1BEE                           l3071 17DC                           l3063 1760  
                         l3055 1738                           l3047 16BE                           l3311 044C  
                         l3225 273E                           l3217 283C                           l2409 199A  
                         l2417 24EA                           l2505 2052                           l2441 1C80  
                         l2433 1C44                           l2521 1E38                           l2513 1DF8  
                         l2601 2302                           l3161 165C                           l3153 161A  
                         l3145 15CE                           l3137 1582                           l3129 1540  
                         l2425 2782                           l3209 26F0                           l3233 257A  
                         l3081 181A                           l3073 17E8                           l3065 1792  
                         l3049 16CE                           l3321 04A0                           l3313 046E  
                         l3305 040A                           l3401 06F8                           l3227 274E  
                         l3219 283E                           l2419 24F6                           l2507 206A  
                         l2451 1CC6                           l2443 1C8A                           l2435 1C54  
                         l2531 1E76                           l2523 1E48                           l2515 1E0C  
                         l2611 2354                           l2603 2326                           l3163 1662  
                         l3155 162E                           l3147 15FA                           l3139 15AE  
                         l2427 2792                           l3251 261A                           l3243 2584  
                         l3083 183E                           l3075 17F6                           l3067 1794  
                         l3059 174C                           l3323 04B6                           l3315 0484  
                         l3307 0420                           l3171 27D0                           l3411 0722  
                         l3403 0702                           l3181 2818                           l2381 2478  
                         l2373 244E                           l2541 1EE0                           l2509 2082  
                         l2453 1CE0                           l2445 1C94                           l2437 1C60  
                         l2429 1C20                           l2525 1E56                           l2533 1E82  
                         l2517 1E1C                           l2461 1D32                           l2621 2242  
                         l2605 2334                           l2613 2360                           l2701 19DC  
                         l3165 1676                           l3157 1634                           l3149 1600  
                         l3237 2624                           l3245 25CA                           l3085 184E  
                         l3077 1814                           l3069 17A0                           l3341 056E  
                         l3325 04CC                           l3333 050A                           l3309 0436  
                         l3261 023A                           l3093 23BE                           l3173 27D4  
                         l3501 0940                           l3421 074A                           l3413 072A  
                         l3405 070A                           l3183 281E                           l2391 24AC  
                         l2383 2486                           l2375 2456                           l2367 27AA  
                         l2551 1F30                           l2543 1EF4                           l2455 1CF8  
                         l2447 1CA0                           l2439 1C70                           l2535 1E9A  
                         l2527 1E60                           l2519 1E2C                           l2471 1D78  
                         l2463 1D42                           l2631 22A0                           l2623 2254  
                         l2615 2378                           l2607 233E                           l2711 1A1E  
                         l2703 19E2                           l3167 167A                           l3159 1648  
                         l3191 26B6                           l3239 266A                           l3087 185C  
                         l3079 1816                           l3351 05B6                           l3335 0520  
                         l3327 04E2                           l3319 048A                           l3271 02E0  
                         l3263 027A                           l3255 003E                           l3095 23CE  
                         l3175 27EC                           l3511 09A6                           l3503 0946  
                         l3431 0760                           l3423 0752                           l3415 0732  
                         l3407 0712                           l3185 2824                           l2393 24B2  
                         l2385 248C                           l2377 2468                           l2369 27C6  
                         l2553 1F3E                           l2561 1F6A                           l2545 1F04  
                         l2449 1CAC                           l2537 1EB2                           l2529 1E6A  
                         l2481 1DCA                           l2473 1D82                           l2465 1D4E  
                         l2457 1D0E                           l2633 22B4                           l2625 2268  
                         l2617 2390                           l2609 2348                           l2713 1A36  
                         l2721 1A82                           l2705 19EA                           l3169 1692  
                         l3193 26BA                           l3249 25D4                           l2801 12C8  
                         l3089 185E                           l3361 0616                           l3353 05D8  
                         l3337 0536                           l3345 0574                           l3329 0504  
                         l3281 0334                           l3273 0302                           l3265 0290  
                         l3257 01BA                           l3097 23F8                           l3177 27EE  
                         l3521 0A58                           l3513 09C8                           l3505 095E  
                         l3441 0798                           l3433 0764                           l3425 075A  
                         l3417 073A                           l3409 071A                           l3187 2826  
                         l3179 2810                           l2387 24A2                           l2379 2470  
                         l2395 1870                           l2563 1F82                           l2555 1F48  
                         l2547 1F14                           l2491 1FFC                           l2539 1ECA  
                         l2483 1DE2                           l2475 1D8E                           l2467 1D5E  
                         l2459 1D22                           l2635 22C6                           l2627 227A  
                         l2619 23A8                           l2731 1AFE                           l2723 1A9E  
                         l2715 1A3A                           l2707 1A06                           l2651 276C  
                         l2643 2758                           l2571 288A                           l3195 26C4  
                         l2811 130E                           l2803 12D0                           l3371 0684  
                         l3363 062C                           l3355 05FA                           l3347 058A  
                         l3339 054C                           l3283 034A                           l3267 02A6  
                         l3259 01FA                           l3099 241C                           l3531 0AEE  
                         l3523 0A7E                           l3515 09EE                           l3507 0976  
                         l3451 07CA                           l3443 07A2                           l3435 0766  
                         l3427 075C                           l3419 0742                           l3189 2866  
                         l2389 24AA                           l2397 188C                           l2581 20AE  
                         l2565 1F9A                           l2557 1F52                           l2549 1F20  
                         l2493 2008                           l2485 1FC8                           l2469 1D6E  
                         l2477 1D9A                           l2637 22DA                           l2629 228E  
                         l2725 1AD4                           l2717 1A68                           l2709 1A1A  
                         l2653 276E                           l2645 2762                           l2573 287C  
                         l2733 27F2                           l3197 26D4                           l2661 267A  
                         l2821 1366                           l2813 132C                           l2805 12E0  
                         l2741 1164                           l2901 0DBC                           l3373 06A6  
                         l3365 0642                           l3381 06CE                           l3349 05A0  
                         l3285 0360                           l3293 039E                           l3269 02BC  
                         l3277 0308                           l3541 0B82                           l3533 0B00  
                         l3525 0AA0                           l3517 0A10                           l3509 098E  
                         l3461 07E0                           l3453 07D2                           l3445 07AA  
                         l3437 0768                           l3429 075E                           l2399 18E0  
                         l2591 2120                           l2583 20F2                           l2567 1FB2  
                         l2559 1F5E                           l2495 2018                           l2487 1FDC  
                         l2479 1DB2                           l2639 22EC                           l2727 1AEC  
                         l2719 1A6A                           l2647 2768                           l2575 2880  
                         l3199 26DE                           l2663 2682                           l2655 2872  
                         l2831 13A4                           l2823 136C                           l2815 132E  
                         l2807 12F4                           l2743 1174                           l2751 119E  
                         l2735 1148                           l2903 0DCC                           l3375 06C8  
                         l3367 0658                           l3359 0600                           l3295 03B4  
                         l3287 0376                           l3279 031E                           l3551 0C34  
                         l3543 0BA4                           l3535 0B48                           l3527 0AC6  
                         l3519 0A36                           l3471 07EC                           l3463 07E2  
                         l3455 07DA                           l3447 07B2                           l3439 0772  
                         l3391 06D6                           l2585 2100                           l2593 212C  
                         l2497 2026                           l2489 1FEC                           l2729 1AEE  
                         l2681 21C0                           l2673 217A                           l2649 276A  
                         l2569 2886                           l2577 285C                           l2665 268A  
                         l2657 2876                           l2841 140E                           l2833 13A8  
                         l2825 1376                           l2817 133E                           l2809 1302  
                         l2761 11CA                           l2753 11AE                           l2745 1184  
                         l2737 1154                           l2921 0E4E                           l2913 0E16  
                         l2905 0DD2                           l3369 066E                           l3297 03CA  
                         l3289 0398                           l3561 0CC6                           l3553 0C5A  
                         l3545 0BCA                           l3537 0B60                           l3529 0AD6  
                         l3481 084A                           l3473 07EE                           l3465 07E6  
                         l3457 07DC                           l3449 07C2                           l3393 06DA  
                         l2595 2144                           l2587 210A                           l2499 2030  
                         l2691 2204                           l2683 21CA                           l2675 218E  
                         l2579 2860                           l2667 26B0                           l2659 2676  
                         l2851 1470                           l2843 141A                           l2835 13B6  
                         l2827 1384                           l2819 1350                           l2763 11DA  
                         l2771 1204                           l2755 11B4                           l2747 1194  
                         l2739 1162                           l2931 0E98                           l2923 0E66  
                         l2915 0E22                           l2907 0DF2                           l3299 03E0  
                         l3555 0C7C                           l3547 0BEC                           l3539 0B6A  
                         l3563 0CC8                           l3491 08BE                           l3483 085C  
                         l3475 07F0                           l3467 07E8                           l3459 07DE  
                         l3395 06E6                           l2597 215C                           l2589 2114  
                         l2693 221C                           l2685 21D4                           l2677 219E  
                         l2669 26B2                           l2861 14CE                           l2853 1486  
                         l2845 1428                           l2837 13E4                           l2829 1396  
                         l2781 1246                           l2773 1214                           l2765 11EA  
                         l2757 11BA                           l2749 1196                           l2941 0EEE  
                         l2933 0EA8                           l2925 0E72                           l2917 0E2C  
                         l2909 0E02                           l3565 0CD8                           l3557 0CA2  
                         l3549 0C12                           l3493 08E0                           l3485 088C  
                         l3477 0802                           l3469 07EA                           l3397 06F0  
                         l3389 06D2                           l2599 216C                           l2695 222A  
                         l2687 21E0                           l2679 21B2                           l2863 14D4  
                         l2855 14A0                           l2847 1452                           l2775 122A  
                         l2767 11FA                           l2759 11C8                           l2951 0F92  
                         l2943 0F0A                           l2935 0EB4                           l2927 0E7E  
                         l2919 0E42                           l3559 0CB6                           l3495 0906  
                         l3487 08A4                           l3479 0832                           l3399 06F4  
                         l2697 2846                           l2689 21EC                           l2865 14D6  
                         l2857 14BC                           l2849 1456                           l2793 127E  
                         l2777 123A                           l2785 125A                           l2769 11FC  
                         l2961 0FE8                           l2953 0FA0                           l2945 0F16  
                         l2937 0EC4                           l2929 0E8C                           l2881 0D4A  
                         l2873 0D1E                           l3569 0CEE                           l3497 091E  
                         l3489 08A6                           l2699 2856                           l2859 14C0  
                         l2795 1298                           l2787 126A                           l2779 1242  
                         l2963 0FF6                           l2955 0FBE                           l2947 0F32  
                         l2939 0EDE                           l2891 0D86                           l2883 0D5A  
                         l2875 0D2A                           l3499 0934                           l2797 12A8  
                         l2789 126A                           l2973 1060                           l2981 10A8  
                         l2965 0FFA                           l2957 0FC8                           l2949 0F5C  
                         l2893 0D8C                           l2885 0D6A                           l2877 0D38  
                         l2799 12B8                           l2991 111C                           l2983 10C2  
                         l2975 106C                           l2967 1008                           l2959 0FD6  
                         l2895 0D9A                           l2887 0D70                           l2879 0D3A  
                         l2993 112A                           l2985 10D6                           l2977 107A  
                         l2969 1036                           l2897 0D9C                           l2889 0D80  
                         l2995 112C                           l2987 10F0                           l2979 10A4  
                         l2899 0DAC                           l2989 110C                           l2997 1132  
                         l2999 1136                           u2000 1A06                           u2001 1A02  
                         u2010 1A68                           u2011 1A64                           u2020 1A9E  
                         u2100 11DA                           u2021 1A9A                           u2101 11D6  
                         u2110 11EA                           u2031 1AA8                           u2111 11E6  
                         u2200 13A4                           u2120 122A                           u3000 0504  
                         u2041 1ABA                           u2201 13A0                           u2121 1226  
                         u3001 0500                           u2050 1AFC                           u2210 13B6  
                         u2130 126A                           u3010 0520                           u2051 1AF8  
                         u2211 13B2                           u2131 1266                           u3011 051C  
                         u2220 13E4                           u2140 12E0                           u2060 1162  
                         u2300 0D4A                           u3100 0616                           u3020 0536  
                         u2221 13E0                           u2141 12DC                           u2061 115E  
                         u2301 0D46                           u3101 0612                           u3021 0532  
                         u2230 13FA                           u2150 1302                           u2070 1174  
                         u2310 0D5A                           u3110 062C                           u3030 054C  
                         u2231 13F6                           u2151 12FE                           u2071 1170  
                         u2311 0D56                           u3111 0628                           u3031 0548  
                         u2240 140E                           u2160 132C                           u2080 1184  
                         u2400 1008                           u2320 0D9A                           u3120 0642  
                         u3040 056E                           u3200 085A                           u2241 140A  
                         u2161 1328                           u2081 1180                           u2401 1004  
                         u2321 0D96                           u3121 063E                           u3041 056A  
                         u3201 0856                           u2250 1428                           u2170 1350  
                         u2090 11C8                           u2410 1036                           u2330 0DAC  
                         u3130 0658                           u3050 058A                           u3210 091E  
                         u2251 1424                           u2171 134C                           u2091 11C4  
                         u2411 1032                           u2331 0DA8                           u3131 0654  
                         u3051 0586                           u3211 091A                           u1700 188C  
                         u2260 1470                           u2180 1366                           u2420 104C  
                         u2340 0DBC                           u2500 1B92                           u3140 066E  
                         u3060 05A0                           u3220 0934                           u1701 1888  
                         u2261 146C                           u2181 1362                           u2421 1048  
                         u2341 0DB8                           u2501 1B8E                           u3141 066A  
                         u3061 059C                           u3301 0D0A                           u3221 0930  
                         u1710 1956                           u2270 14A0                           u2190 1384  
                         u2430 1060                           u2350 0DF2                           u2510 1BA6  
                         u3150 0684                           u3070 05B6                           u3230 0B00  
                         u1711 1952                           u2271 149C                           u2191 1380  
                         u2431 105C                           u2351 0DEE                           u2511 1BA2  
                         u3151 0680                           u3071 05B2                           u3231 0AFC  
                         u1720 251A                           u1800 206A                           u2280 14CE  
                         u2440 107A                           u2360 0E02                           u2520 1BCE  
                         u2600 17F6                           u3160 06A6                           u3080 05D8  
                         u1721 2516                           u1801 2066                           u2281 14CA  
                         u2441 1076                           u2361 0DFE                           u2521 1BCA  
                         u2601 17F2                           u3161 06A2                           u3081 05D4  
                         u3241 0B0A                           u1730 2532                           u1810 2082  
                         u2450 10C2                           u2370 0F7C                           u2290 0D38  
                         u2530 1BEE                           u2610 1806                           u3170 06C8  
                         u3090 05FA                           _T2PR 000FBC                           u1731 252E  
                         u1811 207E                           u2451 10BE                           u2291 0D34  
                         u2531 1BEA                           u2611 1802                           u3171 06C4  
                         u3091 05F6                           u3251 0B1C                           u1820 1E9A  
                         u1900 2390                           u2700 161A                           u1740 2792  
                         u2460 10F0                           u2380 0FD6                           u2540 1BFE  
                         u2620 1814                           u3260 0CB6                           u3180 078C  
                         u1821 1E96                           u1901 238C                           u2701 1616  
                         u1741 278E                           u2461 10EC                           u2381 0FD2  
                         u2541 1BFA                           u2621 1810                           u3261 0CB2  
                         u3181 0788                           u1670 2468                           u1830 1EB2  
                         u1910 2254                           u2710 1648                           u1750 27A8  
                         u2470 112A                           u2390 0FF6                           u2630 184E  
                         u2550 16CE                           u3270 0CD8                           u3190 0800  
                         u1671 2464                           u1831 1EAE                           u1911 2250  
                         u3407 2222                           u2711 1644                           u1751 27A4  
                         u2471 1126                           u2391 0FF2                           u2375 0F72  
                         u2631 184A                           u2551 16CA                           u3271 0CD4  
                         u3191 07FC                           u1680 2486                           u1840 1F82  
                         u1760 1CC6                           u1920 227A                           u2720 1676  
                         u2480 1B30                           u2640 185C                           u2560 16DC  
                         u2800 0302                           u3280 0CEA                           u1681 2482  
                         u1841 1F7E                           u1761 1CC2                           u1921 2276  
                         u3417 1B08                           u2721 1672                           u2481 1B2C  
                         u2641 1858                           u2561 16D8                           u2801 02FE  
                         u3281 0CE6                           u3337 083C                           u1690 24A2  
                         u1850 1F9A                           u1770 1CE0                           u1930 22A0  
                         u2650 14F6                           u2490 1B64                           u2570 1738  
                         u2810 031E                           u1691 249E                           u1851 1F96  
                         u3507 201E                           u1771 1CDC                           u1931 229C  
                         u3427 232C                           u2731 169C                           u2651 14F2  
                         u2571 1734                           u2811 031A                           u3291 0CF8  
                         u3347 0896                           u1860 2144                           u1780 1DB2  
                         u1940 22C6                           u2660 1526                           u2580 178E  
                         u2900 0404                           u2820 0334                           u1861 2140  
                         u3517 208C                           u1781 1DAE                           u1941 22C2  
                         u3437 239A                           u2741 16AE                           u2661 1522  
                         u2581 178A                           u2901 0400                           u2821 0330  
                         u3357 0968                           u2750 2738                           u1870 215C  
                         u1790 1DCA                           u1950 22EC                           u2670 1554  
                         u2590 17D8                           u2910 0420                           u2830 034A  
                         u2751 2734                           u1871 2158                           u3527 1F36  
                         u1791 1DC6                           u3447 1D64                           u1951 22E8  
                         u2671 1550                           u2495 1B5A                           u2591 17D4  
                         u2911 041C                           u2831 0346                           u3367 0998  
                         u1880 216C                           u2680 1582                           u1960 269E  
                         u2920 0436                           u2840 0360                           u2760 0290  
                         u1881 2168                           u3537 1FA4                           u3457 1DD4  
                         u2681 157E                           u1961 2696                           u2921 0432  
                         u2841 035C                           u2761 028C                           u3377 0B74  
                         u1890 2378                           u2690 15CE                           u2930 044C  
                         u2850 0376                           u2770 02A6                           u3547 24E0  
                         u3467 1E4E                           u1891 2374                           u2691 15CA  
                         u3387 26CA                           u2931 0448                           u2851 0372  
                         u2771 02A2                           u1980 2204                           u2940 046E  
                         u2860 0398                           u2780 02BC                           u3557 20F8  
                         u3477 1EBC                           u1981 2200                           u3397 21B8  
                         u2941 046A                           u2861 0394                           u2781 02B8  
                         u1990 221C                           u2950 0484                           u2870 03B4  
                         u2790 02E0                           u3487 1C76                           u1991 2218  
                         u2951 0480                           u2871 03B0                           u2791 02DC  
                         u2960 04A0                           u2880 03CA                           u3497 1CEA  
                         u2961 049C                           u2881 03C6                           u1978 26A0  
                         u2970 04B6                           u2890 03E0                           u2971 04B2  
                         u2891 03DC                           u2980 04CC                           u2981 04C8  
                         u2990 04E2                           u2991 04DE                    main@reading 00A0  
                         _main 06D2                           _path 0100                           fsr2h 000FDA  
                         indf2 000FDF                           fsr2l 000FD9                           _step 00A8  
                         btemp 0057                           _stop 24C2                           prodh 000FF4  
                         prodl 000FF3                           start 003A               __end_of_ADC_init 2844  
              ___fldiv@new_exp 0020         __end_of_color_read_Red 2584                __end_of_HighISR 003A  
                 ___param_bank 000000                    _turnLeft135 1FC8                    _turnRight90 1D0E  
                ___fltol@sign1 0022                          ?_main 0001                          _ADPCH 000F5F  
              __end_of___fldiv 14E2                __end_of___flmul 1148                __end_of___fltol 1C20  
                        ?_stop 0019                __end_of___lwdiv 24C2                          i2l359 0036  
                        i2l384 2896                          _TMR0H 000FD4                          _TMR0L 000FD3  
   __end_of_I2C_2_Master_Start 2890     __end_of_I2C_2_Master_Write 2866                          main@a 0079  
                        plusw0 000FEB                          plusw2 000FDB                __end_of_turn180 1FC8  
                        ttemp5 0058                          ttemp6 005B                          ttemp7 005F  
                        status 000FD8                          wtemp8 0058        __end_of_color_read_Blue 2674  
        _I2C_2_Master_RepStart 2872                ?_color_read_Red 0005           __end_of_carryoutstep 16BC  
              __initialization 26F6                   __end_of_main 0D1E                   __end_of_stop 2534  
                       ??_main 004C                         ??_stop 001D                  __activetblptr 000000  
                 _turnRight135 1DF8                   ?_setMotorPWM 0013                         _ADRESH 000F64  
                       _CCPR1H 000FAA                         _CCPR2H 000FA6                         _CCPR3H 000F25  
                       _CCPR4H 000F21                         _RE2PPS 000E74                         _RD5PPS 000E6F  
                       _RC7PPS 000E69                         _RE4PPS 000E76                         _RD6PPS 000E70  
                       i2l3385 2890                         i2l3387 2894                         i2l3571 000A  
                       i2l3573 001A                         i2l3575 002A                         i2l3577 002E  
                       i2l3579 0032                         _RG6PPS 000E88                      ??_HighISR 0001  
     __end_of_color_click_init 26F6               __end_of___xxtofl 1870                   ??_ADC_getval 0003  
                ??_Timer0_init 0001                   _CCPTMRS0bits 000FAD          returnstep@instruction 0036  
                       ___wmul 27AA                      ??___fldiv 0017                      ??___flmul 0009  
                    ??___fltol 001E                      ??___lwdiv 0010                         clear_0 26FC  
                       clear_1 2708                         clear_2 2718                         isa$std 000001  
                       _square 2302               __end_of_savepath 285A               __end_of_savetime 27F0  
                    ?_ADC_init 0001                   _decide_color 003E                      ??_turn180 0022  
                       stop@mL 0019                         stop@mR 001B              ??_initDCmotorsPWM 0003  
           __end_of_ADC_getval 2758                   ___xxtofl@arg 000B                   ___xxtofl@exp 000A  
                 ___xxtofl@val 0001                     __accesstop 0060        __end_of__initialization 271E  
     __end_of_color_read_Clear 2624       __end_of_color_read_Green 25D4         ?_I2C_2_Master_RepStart 0001  
                ___rparam_used 000001                     ___fltol@f1 001A               ?_color_read_Blue 0005  
              _Interrupts_init 2866                 __pcstackCOMRAM 0001            __end_of_Timer0_init 282A  
             smallmovement@dir 0022                     ??_ADC_init 0001                   ?_starttimer0 0001  
                   __pbssBANK0 00A8                     __pbssBANK1 0100                     __pbssBANK2 0200  
            _color_writetoaddr 27F0                   _T2CLKCONbits 000FBF                   ?_turnLeft135 001E  
           ?_color_writetoaddr 0003                        ?___wmul 0001                   ?_turnRight90 001E  
        __end_of_smallmovement 2240                        ?_square 001E            ??_color_writetoaddr 0004  
                    ?___xxtofl 0001                   _carryoutstep 14E2                        _SSP2ADD 000ED6  
                      _SSP2BUF 000ED5        __end_of_Interrupts_init 2872         color_writetoaddr@value 0003  
             ??_color_read_Red 0007                        _HighISR 0008      __end_of_color_writetoaddr 2810  
                    _ADREFbits 000F58             _I2C_2_Master_Start 2886             _I2C_2_Master_Write 285A  
                      __Hparam 0000                        __Lparam 0000                      ?_savepath 0001  
            color_read_Red@tmp 000A                      ?_savetime 0001                    _Timer0_init 2810  
                      ___fldiv 1148                        ___flmul 0D1E                        ___fltol 1B1A  
               decide_color@br 003E                 decide_color@gr 003A            ?_I2C_2_Master_Start 0001  
               decide_color@mx 0028                 decide_color@rr 003C                        ___lwdiv 244E  
          ?_I2C_2_Master_Write 0001                     _off_period 004E                   turnLeft90@mL 001E  
                 turnLeft90@mR 0020                        __pcinit 26F6                        __ramtop 0E00  
                      __ptext0 06D2                        __ptext1 27D0                        __ptext2 23BE  
                      __ptext3 003E                        __ptext4 16BC                        __ptext5 1B1A  
                      __ptext6 0D1E                        __ptext7 1148                        __ptext8 2534  
                      __ptext9 2584                      _T2CONbits 000FBD                     ??___xxtofl 0005  
                    _T2HLTbits 000FBE                        _turn180 1EE0                        main@max 0090  
         ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002           end_of_initialization 271E  
             ADC_getval@tmpval 0003              ?_color_click_init 0001             ??_color_click_init 0005  
                   ??_savepath 0001                     ??_savetime 0003             savetime@timercount 0001  
                      postdec2 000FDD                        postinc0 000FEE                        postinc2 000FDE  
             returnhome@motorL 0037               returnhome@motorR 0040                _initDCmotorsPWM 23BE  
                    _PORTFbits 000F8E                     _returnhome 19DC                     _timercount 0052  
           setMotorPWM@negDuty 0018                     _returnstep 2240                 carryoutstep@mx 0074  
                ___xxtofl@sign 0009                      _TRISAbits 000F81             setMotorPWM@posDuty 0017  
                    _TRISCbits 000F83                      _TRISDbits 000F84                      _TRISEbits 000F85  
                    _TRISFbits 000F86                      _TRISGbits 000F87                      _TRISHbits 000F88  
                  ___fldiv@grs 0022                    ___fldiv@rem 001B               fullSpeedAhead@mL 0019  
             fullSpeedAhead@mR 001B       color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002  
             ?_Interrupts_init 0001                    ___flmul@grs 000E                    _CCP1CONbits 000FAB  
            ?_color_read_Clear 0005                    _CCP2CONbits 000FA7              ?_color_read_Green 0005  
                  _CCP3CONbits 000F26                    _CCP4CONbits 000F22                     main@motorL 007E  
                   main@motorR 0087             ??_color_read_Clear 0007             ??_color_read_Green 0007  
                   _turnLeft90 1C20                 _fullSpeedAhead 20AE                 __end_of___wmul 27D0  
               __end_of_square 23BE            color_read_Clear@tmp 000A            start_initialization 26F6  
          color_read_Green@tmp 000A        __end_of_initDCmotorsPWM 244E         __end_of_fullSpeedAhead 217A  
                     ??___wmul 0005                    ?_returnhome 0037                       ??_square 0023  
                  ?_returnstep 0024                      ___fldiv@a 0013                      ___fldiv@b 000F  
                    ___flmul@a 0005                      ___flmul@b 0001                    __pbssCOMRAM 004E  
                __pcstackBANK0 0060                smallmovement@mL 001E                smallmovement@mR 0020  
                     ?_HighISR 0001                      _main$2841 007C               ___lwdiv@dividend 000C  
                 ?_Timer0_init 0001                    ?_turnLeft90 001E                ?_fullSpeedAhead 0019  
                    __pintcode 0008            savepath@instruction 0001                       ?___fldiv 000F  
                     ?___flmul 0001                       ?___fltol 001A                       ?___lwdiv 000C  
         I2C_2_Master_Read@ack 0003           I2C_2_Master_Read@tmp 0004                  ?_turnRight135 001E  
            _I2C_2_Master_Idle 2782              _I2C_2_Master_Init 2758              _I2C_2_Master_Read 2674  
             returnstep@motorL 0024               returnstep@motorR 002D              _I2C_2_Master_Stop 287C  
                     _ADC_init 282A             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001                  ??_setMotorPWM 0015                       ?_turn180 001E  
           ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 0010       initDCmotorsPWM@PWMperiod 0001  
          ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002  
               ___wmul@product 0005                       _LATAbits 000F79            ??_I2C_2_Master_Stop 0002  
                     _LATCbits 000F7B                       _LATDbits 000F7C                       _LATEbits 000F7D  
                     _LATFbits 000F7E                      _on_period 0050                       _LATGbits 000F7F  
                     _LATHbits 000F80                       _PIE0bits 000E29                       i2u331_40 001A  
                     i2u331_41 0016                       i2u332_40 002A                       i2u332_41 0026  
                     _PIR0bits 000E33               ?_initDCmotorsPWM 0001                       _SSP2CON2 000EDA  
                    _timearray 0200                       _SSP2STAT 000ED8                     _ADCON0bits 000F60  
    __end_of_I2C_2_Master_Idle 27AA      __end_of_I2C_2_Master_Init 2782      __end_of_I2C_2_Master_Read 26B6  
            ___wmul@multiplier 0001                 ??_turnRight135 0022      __end_of_I2C_2_Master_Stop 2886  
                 setMotorPWM@m 0013    I2C_2_Master_Write@data_byte 0002                   _pathposition 0055  
            ??_color_read_Blue 0007                  ?_decide_color 0028  __end_of_I2C_2_Master_RepStart 287C  
           color_read_Blue@tmp 000A            __end_of_setMotorPWM 19DC                       __Hrparam 0000  
                   _ADC_getval 2728                       __Lrparam 0000                 turnRight135@mL 001E  
               turnRight135@mR 0020                decide_color@brf 0032                decide_color@grf 0036  
              decide_color@rrf 002E                  turnLeft135@mL 001E                  turnLeft135@mR 0020  
                _smallmovement 217A                     _ANSELDbits 000EA7                     _ANSELFbits 000EB4  
                     ___xxtofl 16BC                 ??_decide_color 002A                     _T0CON0bits 000FD5  
                   _T0CON1bits 000FD6                  ??_starttimer0 0001                ___lwdiv@divisor 000E  
              ___lwdiv@counter 0012                       __ptext10 25D4                       __ptext11 2624  
                     __ptext20 2758                       __ptext12 2872                       __ptext21 14E2  
                     __ptext13 2674                       __ptext30 1FC8                       __ptext22 217A  
                     __ptext14 26B6                       __ptext31 1EE0                       __ptext23 2844  
                     __ptext15 27F0                       __ptext40 2728                       __ptext32 24C2  
                     __ptext24 19DC                       __ptext16 285A                       __ptext33 20AE  
                     __ptext25 2302                       __ptext17 287C                       __ptext42 2890  
                     __ptext34 1870                       __ptext26 2240                       __ptext18 2886  
                     __ptext35 27AA                       __ptext27 1D0E                       __ptext19 2782  
                     __ptext36 244E                       __ptext28 1DF8                       __ptext37 2810  
                     __ptext29 1C20                       __ptext38 2866                       __ptext39 282A  
                 _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA                       _savepath 2844  
                ??_turnLeft135 0022                       _savetime 27D0                       isa$xinst 000000  
           carryoutstep@motorL 0060             carryoutstep@motorR 0069                       int$flags 0057  
                ??_turnRight90 0022                 ?_smallmovement 001E                   ??_returnhome 0049  
                 ??_returnstep 0036                      turn180@mL 001E                      turn180@mR 0020  
                   _INTCONbits 000FF2                  ?_carryoutstep 0060                    _setMotorPWM 1870  
                    square@dir 0022                       intlevel2 0000                  turnRight90@mL 001E  
                turnRight90@mR 0020            __end_of_starttimer0 2898               ??_fullSpeedAhead 001E  
         __end_of_turnRight135 1EE0                _interruptenable 0054             __end_of_returnhome 1B1A  
           __end_of_returnstep 2302                    ?_ADC_getval 0001                   ??_turnLeft90 0022  
             _color_click_init 26B6            __end_of_turnLeft135 20AE                       square@mL 001E  
                     square@mR 0020                     _SSP2DATPPS 000E1D                   _timeposition 0056  
                   _SSP2CLKPPS 000E1C            __end_of_turnRight90 1DF8                 ??_carryoutstep 004C  
             carryoutstep@read 0072               carryoutstep@step 0078             __end_of_turnLeft90 1D0E  
              carryoutstep@amb 0076           __end_of_decide_color 06D2                   main@PWMcycle 007A  
