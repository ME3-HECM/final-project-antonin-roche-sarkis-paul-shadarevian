

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Nov 28 23:39:08 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	text6,global,reloc=2,class=CODE,delta=1
    14                           	psect	text7,global,reloc=2,class=CODE,delta=1
    15                           	psect	text8,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20   000000                     
    21                           ; Version 2.35
    22                           ; Generated 05/05/2021 GMT
    23                           ; 
    24                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F67K40 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56   000000                     _LATDbits	set	3964
    57   000000                     _SSP2CON2bits	set	3802
    58   000000                     _SSP2CLKPPS	set	3612
    59   000000                     _SSP2DATPPS	set	3613
    60   000000                     _ANSELDbits	set	3751
    61   000000                     _SSP2ADD	set	3798
    62   000000                     _SSP2CON1bits	set	3801
    63   000000                     _LATCbits	set	3963
    64   000000                     _LATEbits	set	3965
    65   000000                     _SSP2CON2	set	3802
    66   000000                     _TRISDbits	set	3972
    67   000000                     _CCPR4H	set	3873
    68   000000                     _CCPR3H	set	3877
    69   000000                     _SSP2STAT	set	3800
    70   000000                     _TRISGbits	set	3975
    71   000000                     _TRISEbits	set	3973
    72   000000                     _SSP2BUF	set	3797
    73   000000                     _RC7PPS	set	3689
    74   000000                     _RD5PPS	set	3695
    75   000000                     _RE2PPS	set	3700
    76   000000                     _RD6PPS	set	3696
    77   000000                     _LATGbits	set	3967
    78   000000                     _LATHbits	set	3968
    79   000000                     _TRISCbits	set	3971
    80   000000                     _TRISHbits	set	3976
    81   000000                     _T2PR	set	4028
    82   000000                     _T2CONbits	set	4029
    83   000000                     _CCPR2H	set	4006
    84   000000                     _CCPR1H	set	4010
    85   000000                     _RE4PPS	set	3702
    86   000000                     _RG6PPS	set	3720
    87   000000                     _T2CLKCONbits	set	4031
    88   000000                     _T2HLTbits	set	4030
    89   000000                     _CCP1CONbits	set	4011
    90   000000                     _CCPTMRS0bits	set	4013
    91   000000                     _CCP2CONbits	set	4007
    92   000000                     _CCP3CONbits	set	3878
    93   000000                     _CCP4CONbits	set	3874
    94                           
    95                           ; #config settings
    96                           
    97                           	psect	cinit
    98   01FE3A                     __pcinit:
    99                           	callstack 0
   100   01FE3A                     start_initialization:
   101                           	callstack 0
   102   01FE3A                     __initialization:
   103                           	callstack 0
   104   01FE3A                     end_of_initialization:
   105                           	callstack 0
   106   01FE3A                     __end_of__initialization:
   107                           	callstack 0
   108   01FE3A  0100               	movlb	0
   109   01FE3C  EF83  F0FF         	goto	_main	;jump to C main() function
   110                           
   111                           	psect	cstackCOMRAM
   112   000001                     __pcstackCOMRAM:
   113                           	callstack 0
   114   000001                     ??_I2C_2_Master_Idle:
   115   000001                     initDCmotorsPWM@PWMperiod:
   116                           	callstack 0
   117                           
   118                           ; 2 bytes @ 0x0
   119   000001                     	ds	1
   120   000002                     I2C_2_Master_Write@data_byte:
   121                           	callstack 0
   122                           
   123                           ; 1 bytes @ 0x1
   124   000002                     	ds	1
   125   000003                     color_writetoaddr@value:
   126                           	callstack 0
   127                           
   128                           ; 1 bytes @ 0x2
   129   000003                     	ds	1
   130   000004                     color_writetoaddr@address:
   131                           	callstack 0
   132                           
   133                           ; 1 bytes @ 0x3
   134   000004                     	ds	1
   135   000005                     ??_color_click_init:
   136                           
   137                           ; 1 bytes @ 0x4
   138   000005                     	ds	1
   139   000006                     main@motorL:
   140                           	callstack 0
   141                           
   142                           ; 9 bytes @ 0x5
   143   000006                     	ds	9
   144   00000F                     main@motorR:
   145                           	callstack 0
   146                           
   147                           ; 9 bytes @ 0xE
   148   00000F                     	ds	9
   149                           
   150 ;;
   151 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   152 ;;
   153 ;; *************** function _main *****************
   154 ;; Defined at:
   155 ;;		line 16 in file "mainfinal.c"
   156 ;; Parameters:    Size  Location     Type
   157 ;;		None
   158 ;; Auto vars:     Size  Location     Type
   159 ;;  motorR          9   14[COMRAM] struct DC_motor
   160 ;;  motorL          9    5[COMRAM] struct DC_motor
   161 ;;  PWMcycle        2    0        unsigned int 
   162 ;;  degree          2    0        int 
   163 ;; Return value:  Size  Location     Type
   164 ;;                  1    wreg      void 
   165 ;; Registers used:
   166 ;;		wreg, status,2, status,0, cstack
   167 ;; Tracked objects:
   168 ;;		On entry : 0/0
   169 ;;		On exit  : 0/0
   170 ;;		Unchanged: 0/0
   171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   173 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   175 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   176 ;;Total ram usage:       18 bytes
   177 ;; Hardware stack levels required when called: 4
   178 ;; This function calls:
   179 ;;		_color_click_init
   180 ;;		_initDCmotorsPWM
   181 ;; This function is called by:
   182 ;;		Startup code after reset
   183 ;; This function uses a non-reentrant model
   184 ;;
   185                           
   186                           	psect	text0
   187   01FF06                     __ptext0:
   188                           	callstack 0
   189   01FF06                     _main:
   190                           	callstack 27
   191   01FF06                     
   192                           ;mainfinal.c: 20:     initDCmotorsPWM(199);
   193   01FF06  0E00               	movlw	0
   194   01FF08  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   195   01FF0A  0EC7               	movlw	199
   196   01FF0C  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   197   01FF0E  ECB8  F0FF         	call	_initDCmotorsPWM	;wreg free
   198   01FF12                     
   199                           ;mainfinal.c: 21:     color_click_init();
   200   01FF12  EC69  F0FF         	call	_color_click_init	;wreg free
   201   01FF16                     
   202                           ;mainfinal.c: 28:     LATHbits.LATH1=0;
   203   01FF16  9280               	bcf	128,1,c	;volatile
   204   01FF18                     
   205                           ;mainfinal.c: 29:     TRISHbits.TRISH1 = 0;
   206   01FF18  9288               	bcf	136,1,c	;volatile
   207   01FF1A                     
   208                           ;mainfinal.c: 32:     LATDbits.LATD3=0;
   209   01FF1A  967C               	bcf	124,3,c	;volatile
   210   01FF1C                     
   211                           ;mainfinal.c: 33:     TRISDbits.TRISD3 = 0;
   212   01FF1C  9684               	bcf	132,3,c	;volatile
   213   01FF1E                     
   214                           ;mainfinal.c: 36:     LATDbits.LATD4=0;
   215   01FF1E  987C               	bcf	124,4,c	;volatile
   216   01FF20                     
   217                           ;mainfinal.c: 37:     TRISDbits.TRISD4 = 0;
   218   01FF20  9884               	bcf	132,4,c	;volatile
   219   01FF22                     
   220                           ;mainfinal.c: 40:     struct DC_motor motorL, motorR;;mainfinal.c: 43:     motorR.power 
      +                          = 0;
   221   01FF22  0E00               	movlw	0
   222   01FF24  6E0F               	movwf	main@motorR^0,c
   223   01FF26                     
   224                           ;mainfinal.c: 44:     motorL.direction = 1;
   225   01FF26  0E01               	movlw	1
   226   01FF28  6E07               	movwf	(main@motorL+1)^0,c
   227   01FF2A                     
   228                           ;mainfinal.c: 45:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   229   01FF2A  0EAA               	movlw	170
   230   01FF2C  6E0B               	movwf	(main@motorL+5)^0,c
   231   01FF2E  0E0F               	movlw	15
   232   01FF30  6E0C               	movwf	(main@motorL+6)^0,c
   233   01FF32                     
   234                           ;mainfinal.c: 46:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   235   01FF32  0EA6               	movlw	166
   236   01FF34  6E0D               	movwf	(main@motorL+7)^0,c
   237   01FF36  0E0F               	movlw	15
   238   01FF38  6E0E               	movwf	(main@motorL+8)^0,c
   239   01FF3A                     
   240                           ;mainfinal.c: 47:     motorL.PWMperiod=PWMcycle;
   241   01FF3A  0E00               	movlw	0
   242   01FF3C  6E0A               	movwf	(main@motorL+4)^0,c
   243   01FF3E  0EC7               	movlw	199
   244   01FF40  6E09               	movwf	(main@motorL+3)^0,c
   245   01FF42                     
   246                           ;mainfinal.c: 49:     motorL.power = 0;
   247   01FF42  0E00               	movlw	0
   248   01FF44  6E06               	movwf	main@motorL^0,c
   249   01FF46                     
   250                           ;mainfinal.c: 50:     motorR.direction = 1;
   251   01FF46  0E01               	movlw	1
   252   01FF48  6E10               	movwf	(main@motorR+1)^0,c
   253   01FF4A                     
   254                           ;mainfinal.c: 51:     motorR.PWMperiod=PWMcycle;
   255   01FF4A  0E00               	movlw	0
   256   01FF4C  6E13               	movwf	(main@motorR+4)^0,c
   257   01FF4E  0EC7               	movlw	199
   258   01FF50  6E12               	movwf	(main@motorR+3)^0,c
   259   01FF52                     
   260                           ;mainfinal.c: 52:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
   261   01FF52  0E25               	movlw	37
   262   01FF54  6E14               	movwf	(main@motorR+5)^0,c
   263   01FF56  0E0F               	movlw	15
   264   01FF58  6E15               	movwf	(main@motorR+6)^0,c
   265   01FF5A                     
   266                           ;mainfinal.c: 53:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
   267   01FF5A  0E21               	movlw	33
   268   01FF5C  6E16               	movwf	(main@motorR+7)^0,c
   269   01FF5E  0E0F               	movlw	15
   270   01FF60  6E17               	movwf	(main@motorR+8)^0,c
   271   01FF62                     l1205:
   272                           
   273                           ;mainfinal.c: 56:     LATHbits.LATH1=1;
   274   01FF62  8280               	bsf	128,1,c	;volatile
   275   01FF64                     
   276                           ;mainfinal.c: 57:     LATDbits.LATD3=1;
   277   01FF64  867C               	bsf	124,3,c	;volatile
   278   01FF66                     
   279                           ;mainfinal.c: 58:     LATDbits.LATD4=1;
   280   01FF66  887C               	bsf	124,4,c	;volatile
   281   01FF68  EFB1  F0FF         	goto	l1205
   282   01FF6C  EF00  F000         	goto	start
   283   01FF70                     __end_of_main:
   284                           	callstack 0
   285                           
   286 ;; *************** function _initDCmotorsPWM *****************
   287 ;; Defined at:
   288 ;;		line 5 in file "dc_motor.c"
   289 ;; Parameters:    Size  Location     Type
   290 ;;  PWMperiod       2    0[COMRAM] unsigned int 
   291 ;; Auto vars:     Size  Location     Type
   292 ;;		None
   293 ;; Return value:  Size  Location     Type
   294 ;;                  1    wreg      void 
   295 ;; Registers used:
   296 ;;		wreg, status,2
   297 ;; Tracked objects:
   298 ;;		On entry : 0/0
   299 ;;		On exit  : 0/0
   300 ;;		Unchanged: 0/0
   301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   302 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   305 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   306 ;;Total ram usage:        2 bytes
   307 ;; Hardware stack levels used: 1
   308 ;; This function calls:
   309 ;;		Nothing
   310 ;; This function is called by:
   311 ;;		_main
   312 ;; This function uses a non-reentrant model
   313 ;;
   314                           
   315                           	psect	text1
   316   01FF70                     __ptext1:
   317                           	callstack 0
   318   01FF70                     _initDCmotorsPWM:
   319                           	callstack 30
   320   01FF70                     
   321                           ;dc_motor.c: 8:     LATEbits.LATE2 = 0;
   322   01FF70  947D               	bcf	125,2,c	;volatile
   323                           
   324                           ;dc_motor.c: 9:     LATEbits.LATE4 = 0;
   325   01FF72  987D               	bcf	125,4,c	;volatile
   326                           
   327                           ;dc_motor.c: 10:     LATCbits.LATC7 = 0;
   328   01FF74  9E7B               	bcf	123,7,c	;volatile
   329                           
   330                           ;dc_motor.c: 11:     LATGbits.LATG6 = 0;
   331   01FF76  9C7F               	bcf	127,6,c	;volatile
   332                           
   333                           ;dc_motor.c: 13:     TRISEbits.TRISE2 = 0;
   334   01FF78  9485               	bcf	133,2,c	;volatile
   335                           
   336                           ;dc_motor.c: 14:     TRISEbits.TRISE4 = 0;
   337   01FF7A  9885               	bcf	133,4,c	;volatile
   338                           
   339                           ;dc_motor.c: 15:     TRISCbits.TRISC7 = 0;
   340   01FF7C  9E83               	bcf	131,7,c	;volatile
   341                           
   342                           ;dc_motor.c: 16:     TRISGbits.TRISG6 = 0;
   343   01FF7E  9C87               	bcf	135,6,c	;volatile
   344   01FF80                     
   345                           ;dc_motor.c: 19:     RE2PPS=0x05;
   346   01FF80  0E05               	movlw	5
   347   01FF82  010E               	movlb	14	; () banked
   348   01FF84  6F74               	movwf	116,b	;volatile
   349                           
   350                           ;dc_motor.c: 20:     RE4PPS=0x06;
   351   01FF86  0E06               	movlw	6
   352   01FF88  6F76               	movwf	118,b	;volatile
   353                           
   354                           ;dc_motor.c: 21:     RC7PPS=0x07;
   355   01FF8A  0E07               	movlw	7
   356   01FF8C  6F69               	movwf	105,b	;volatile
   357                           
   358                           ;dc_motor.c: 22:     RG6PPS=0x08;
   359   01FF8E  0E08               	movlw	8
   360   01FF90  6F88               	movwf	136,b	;volatile
   361                           
   362                           ;dc_motor.c: 31:     T2CONbits.CKPS=011;
   363   01FF92  50BD               	movf	189,w,c	;volatile
   364   01FF94  0B8F               	andlw	-113
   365   01FF96  0910               	iorlw	16
   366   01FF98  6EBD               	movwf	189,c	;volatile
   367                           
   368                           ;dc_motor.c: 32:     T2HLTbits.MODE=0b00000;
   369   01FF9A  0EE0               	movlw	-32
   370   01FF9C  16BE               	andwf	190,f,c	;volatile
   371                           
   372                           ;dc_motor.c: 33:     T2CLKCONbits.CS=0b0001;
   373   01FF9E  50BF               	movf	191,w,c	;volatile
   374   01FFA0  0BF0               	andlw	-16
   375   01FFA2  0901               	iorlw	1
   376   01FFA4  6EBF               	movwf	191,c	;volatile
   377                           
   378                           ;dc_motor.c: 37:     T2PR=199;
   379   01FFA6  0EC7               	movlw	199
   380   01FFA8  6EBC               	movwf	188,c	;volatile
   381   01FFAA                     
   382                           ; BSR set to: 14
   383                           ;dc_motor.c: 38:     T2CONbits.ON=1;
   384   01FFAA  8EBD               	bsf	189,7,c	;volatile
   385                           
   386                           ;dc_motor.c: 42:     CCPR1H=0;
   387   01FFAC  0E00               	movlw	0
   388   01FFAE  6EAA               	movwf	170,c	;volatile
   389                           
   390                           ;dc_motor.c: 43:     CCPR2H=0;
   391   01FFB0  0E00               	movlw	0
   392   01FFB2  6EA6               	movwf	166,c	;volatile
   393                           
   394                           ;dc_motor.c: 44:     CCPR3H=0;
   395   01FFB4  0E00               	movlw	0
   396   01FFB6  010F               	movlb	15	; () banked
   397   01FFB8  6F25               	movwf	37,b	;volatile
   398                           
   399                           ;dc_motor.c: 45:     CCPR4H=0;
   400   01FFBA  0E00               	movlw	0
   401   01FFBC  6F21               	movwf	33,b	;volatile
   402                           
   403                           ;dc_motor.c: 48:     CCPTMRS0bits.C1TSEL=0;
   404   01FFBE  0EFC               	movlw	-4
   405   01FFC0  16AD               	andwf	173,f,c	;volatile
   406                           
   407                           ;dc_motor.c: 49:     CCPTMRS0bits.C2TSEL=0;
   408   01FFC2  0EF3               	movlw	-13
   409   01FFC4  16AD               	andwf	173,f,c	;volatile
   410                           
   411                           ;dc_motor.c: 50:     CCPTMRS0bits.C3TSEL=0;
   412   01FFC6  0ECF               	movlw	-49
   413   01FFC8  16AD               	andwf	173,f,c	;volatile
   414                           
   415                           ;dc_motor.c: 51:     CCPTMRS0bits.C4TSEL=0;
   416   01FFCA  0E3F               	movlw	-193
   417   01FFCC  16AD               	andwf	173,f,c	;volatile
   418   01FFCE                     
   419                           ; BSR set to: 15
   420                           ;dc_motor.c: 54:     CCP1CONbits.FMT=1;
   421   01FFCE  88AB               	bsf	171,4,c	;volatile
   422                           
   423                           ;dc_motor.c: 55:     CCP1CONbits.CCP1MODE=0b1100;
   424   01FFD0  50AB               	movf	171,w,c	;volatile
   425   01FFD2  0BF0               	andlw	-16
   426   01FFD4  090C               	iorlw	12
   427   01FFD6  6EAB               	movwf	171,c	;volatile
   428   01FFD8                     
   429                           ; BSR set to: 15
   430                           ;dc_motor.c: 56:     CCP1CONbits.EN=1;
   431   01FFD8  8EAB               	bsf	171,7,c	;volatile
   432   01FFDA                     
   433                           ; BSR set to: 15
   434                           ;dc_motor.c: 58:     CCP2CONbits.FMT=1;
   435   01FFDA  88A7               	bsf	167,4,c	;volatile
   436                           
   437                           ;dc_motor.c: 59:     CCP2CONbits.CCP2MODE=0b1100;
   438   01FFDC  50A7               	movf	167,w,c	;volatile
   439   01FFDE  0BF0               	andlw	-16
   440   01FFE0  090C               	iorlw	12
   441   01FFE2  6EA7               	movwf	167,c	;volatile
   442   01FFE4                     
   443                           ; BSR set to: 15
   444                           ;dc_motor.c: 60:     CCP2CONbits.EN=1;
   445   01FFE4  8EA7               	bsf	167,7,c	;volatile
   446   01FFE6                     
   447                           ; BSR set to: 15
   448                           ;dc_motor.c: 62:     CCP3CONbits.FMT=1;
   449   01FFE6  8926               	bsf	38,4,b	;volatile
   450                           
   451                           ;dc_motor.c: 63:     CCP3CONbits.CCP3MODE=0b1100;
   452   01FFE8  5126               	movf	38,w,b	;volatile
   453   01FFEA  0BF0               	andlw	-16
   454   01FFEC  090C               	iorlw	12
   455   01FFEE  6F26               	movwf	38,b	;volatile
   456   01FFF0                     
   457                           ; BSR set to: 15
   458                           ;dc_motor.c: 64:     CCP3CONbits.EN=1;
   459   01FFF0  8F26               	bsf	38,7,b	;volatile
   460   01FFF2                     
   461                           ; BSR set to: 15
   462                           ;dc_motor.c: 66:     CCP4CONbits.FMT=1;
   463   01FFF2  8922               	bsf	34,4,b	;volatile
   464                           
   465                           ;dc_motor.c: 67:     CCP4CONbits.CCP4MODE=0b1100;
   466   01FFF4  5122               	movf	34,w,b	;volatile
   467   01FFF6  0BF0               	andlw	-16
   468   01FFF8  090C               	iorlw	12
   469   01FFFA  6F22               	movwf	34,b	;volatile
   470   01FFFC                     
   471                           ; BSR set to: 15
   472                           ;dc_motor.c: 68:     CCP4CONbits.EN=1;
   473   01FFFC  8F22               	bsf	34,7,b	;volatile
   474   01FFFE                     
   475                           ; BSR set to: 15
   476   01FFFE  0012               	return		;funcret
   477   020000                     __end_of_initDCmotorsPWM:
   478                           	callstack 0
   479                           
   480 ;; *************** function _color_click_init *****************
   481 ;; Defined at:
   482 ;;		line 5 in file "color.c"
   483 ;; Parameters:    Size  Location     Type
   484 ;;		None
   485 ;; Auto vars:     Size  Location     Type
   486 ;;		None
   487 ;; Return value:  Size  Location     Type
   488 ;;                  1    wreg      void 
   489 ;; Registers used:
   490 ;;		wreg, status,2, status,0, cstack
   491 ;; Tracked objects:
   492 ;;		On entry : 0/0
   493 ;;		On exit  : 0/0
   494 ;;		Unchanged: 0/0
   495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   498 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   499 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   500 ;;Total ram usage:        1 bytes
   501 ;; Hardware stack levels used: 1
   502 ;; Hardware stack levels required when called: 3
   503 ;; This function calls:
   504 ;;		_I2C_2_Master_Init
   505 ;;		_color_writetoaddr
   506 ;; This function is called by:
   507 ;;		_main
   508 ;; This function uses a non-reentrant model
   509 ;;
   510                           
   511                           	psect	text2
   512   01FED2                     __ptext2:
   513                           	callstack 0
   514   01FED2                     _color_click_init:
   515                           	callstack 27
   516   01FED2                     
   517                           ;color.c: 8:     I2C_2_Master_Init();
   518   01FED2  EC54  F0FF         	call	_I2C_2_Master_Init	;wreg free
   519   01FED6                     
   520                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
   521   01FED6  0E01               	movlw	1
   522   01FED8  6E03               	movwf	color_writetoaddr@value^0,c
   523   01FEDA  0E00               	movlw	0
   524   01FEDC  EC30  F0FF         	call	_color_writetoaddr
   525   01FEE0                     
   526                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
   527   01FEE0  0E3F               	movlw	63
   528   01FEE2  6E05               	movwf	??_color_click_init^0,c
   529   01FEE4  0E55               	movlw	85
   530   01FEE6                     u207:
   531   01FEE6  2EE8               	decfsz	wreg,f,c
   532   01FEE8  D7FE               	bra	u207
   533   01FEEA  2E05               	decfsz	??_color_click_init^0,f,c
   534   01FEEC  D7FC               	bra	u207
   535   01FEEE  F000               	nop	
   536   01FEF0                     
   537                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
   538   01FEF0  0E03               	movlw	3
   539   01FEF2  6E03               	movwf	color_writetoaddr@value^0,c
   540   01FEF4  0E00               	movlw	0
   541   01FEF6  EC30  F0FF         	call	_color_writetoaddr
   542   01FEFA                     
   543                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
   544   01FEFA  0ED5               	movlw	213
   545   01FEFC  6E03               	movwf	color_writetoaddr@value^0,c
   546   01FEFE  0E01               	movlw	1
   547   01FF00  EC30  F0FF         	call	_color_writetoaddr
   548   01FF04  0012               	return		;funcret
   549   01FF06                     __end_of_color_click_init:
   550                           	callstack 0
   551                           
   552 ;; *************** function _color_writetoaddr *****************
   553 ;; Defined at:
   554 ;;		line 21 in file "color.c"
   555 ;; Parameters:    Size  Location     Type
   556 ;;  address         1    wreg     unsigned char 
   557 ;;  value           1    2[COMRAM] unsigned char 
   558 ;; Auto vars:     Size  Location     Type
   559 ;;  address         1    3[COMRAM] unsigned char 
   560 ;; Return value:  Size  Location     Type
   561 ;;                  1    wreg      void 
   562 ;; Registers used:
   563 ;;		wreg, status,2, status,0, cstack
   564 ;; Tracked objects:
   565 ;;		On entry : 0/0
   566 ;;		On exit  : 0/0
   567 ;;		Unchanged: 0/0
   568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   569 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   570 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   572 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   573 ;;Total ram usage:        2 bytes
   574 ;; Hardware stack levels used: 1
   575 ;; Hardware stack levels required when called: 2
   576 ;; This function calls:
   577 ;;		_I2C_2_Master_Start
   578 ;;		_I2C_2_Master_Stop
   579 ;;		_I2C_2_Master_Write
   580 ;; This function is called by:
   581 ;;		_color_click_init
   582 ;; This function uses a non-reentrant model
   583 ;;
   584                           
   585                           	psect	text3
   586   01FE60                     __ptext3:
   587                           	callstack 0
   588   01FE60                     _color_writetoaddr:
   589                           	callstack 27
   590                           
   591                           ;incstack = 0
   592                           ;color_writetoaddr@address stored from wreg
   593   01FE60  6E04               	movwf	color_writetoaddr@address^0,c
   594   01FE62                     
   595                           ;color.c: 22:     I2C_2_Master_Start();
   596   01FE62  EC20  F0FF         	call	_I2C_2_Master_Start	;wreg free
   597                           
   598                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
   599   01FE66  0E52               	movlw	82
   600   01FE68  EC2A  F0FF         	call	_I2C_2_Master_Write
   601                           
   602                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
   603   01FE6C  5004               	movf	color_writetoaddr@address^0,w,c
   604   01FE6E  0980               	iorlw	128
   605   01FE70  EC2A  F0FF         	call	_I2C_2_Master_Write
   606                           
   607                           ;color.c: 25:     I2C_2_Master_Write(value);
   608   01FE74  5003               	movf	color_writetoaddr@value^0,w,c
   609   01FE76  EC2A  F0FF         	call	_I2C_2_Master_Write
   610                           
   611                           ;color.c: 26:     I2C_2_Master_Stop();
   612   01FE7A  EC25  F0FF         	call	_I2C_2_Master_Stop	;wreg free
   613   01FE7E  0012               	return		;funcret
   614   01FE80                     __end_of_color_writetoaddr:
   615                           	callstack 0
   616                           
   617 ;; *************** function _I2C_2_Master_Write *****************
   618 ;; Defined at:
   619 ;;		line 45 in file "i2c.c"
   620 ;; Parameters:    Size  Location     Type
   621 ;;  data_byte       1    wreg     unsigned char 
   622 ;; Auto vars:     Size  Location     Type
   623 ;;  data_byte       1    1[COMRAM] unsigned char 
   624 ;; Return value:  Size  Location     Type
   625 ;;                  1    wreg      void 
   626 ;; Registers used:
   627 ;;		wreg, status,2, status,0, cstack
   628 ;; Tracked objects:
   629 ;;		On entry : 0/0
   630 ;;		On exit  : 0/0
   631 ;;		Unchanged: 0/0
   632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   634 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   636 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   637 ;;Total ram usage:        1 bytes
   638 ;; Hardware stack levels used: 1
   639 ;; Hardware stack levels required when called: 1
   640 ;; This function calls:
   641 ;;		_I2C_2_Master_Idle
   642 ;; This function is called by:
   643 ;;		_color_writetoaddr
   644 ;;		_color_read_Red
   645 ;; This function uses a non-reentrant model
   646 ;;
   647                           
   648                           	psect	text4
   649   01FE54                     __ptext4:
   650                           	callstack 0
   651   01FE54                     _I2C_2_Master_Write:
   652                           	callstack 27
   653                           
   654                           ;incstack = 0
   655                           ;I2C_2_Master_Write@data_byte stored from wreg
   656   01FE54  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
   657   01FE56                     
   658                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
   659   01FE56  EC40  F0FF         	call	_I2C_2_Master_Idle	;wreg free
   660   01FE5A                     
   661                           ;i2c.c: 48:   SSP2BUF = data_byte;
   662   01FE5A  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
   663   01FE5E  0012               	return		;funcret
   664   01FE60                     __end_of_I2C_2_Master_Write:
   665                           	callstack 0
   666                           
   667 ;; *************** function _I2C_2_Master_Stop *****************
   668 ;; Defined at:
   669 ;;		line 39 in file "i2c.c"
   670 ;; Parameters:    Size  Location     Type
   671 ;;		None
   672 ;; Auto vars:     Size  Location     Type
   673 ;;		None
   674 ;; Return value:  Size  Location     Type
   675 ;;                  1    wreg      void 
   676 ;; Registers used:
   677 ;;		wreg, status,2, status,0, cstack
   678 ;; Tracked objects:
   679 ;;		On entry : 0/0
   680 ;;		On exit  : 0/0
   681 ;;		Unchanged: 0/0
   682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   687 ;;Total ram usage:        0 bytes
   688 ;; Hardware stack levels used: 1
   689 ;; Hardware stack levels required when called: 1
   690 ;; This function calls:
   691 ;;		_I2C_2_Master_Idle
   692 ;; This function is called by:
   693 ;;		_color_writetoaddr
   694 ;;		_color_read_Red
   695 ;; This function uses a non-reentrant model
   696 ;;
   697                           
   698                           	psect	text5
   699   01FE4A                     __ptext5:
   700                           	callstack 0
   701   01FE4A                     _I2C_2_Master_Stop:
   702                           	callstack 27
   703   01FE4A                     
   704                           ;i2c.c: 41:   I2C_2_Master_Idle();
   705   01FE4A  EC40  F0FF         	call	_I2C_2_Master_Idle	;wreg free
   706   01FE4E                     
   707                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
   708   01FE4E  010E               	movlb	14	; () banked
   709   01FE50  85DA               	bsf	218,2,b	;volatile
   710   01FE52                     
   711                           ; BSR set to: 14
   712   01FE52  0012               	return		;funcret
   713   01FE54                     __end_of_I2C_2_Master_Stop:
   714                           	callstack 0
   715                           
   716 ;; *************** function _I2C_2_Master_Start *****************
   717 ;; Defined at:
   718 ;;		line 27 in file "i2c.c"
   719 ;; Parameters:    Size  Location     Type
   720 ;;		None
   721 ;; Auto vars:     Size  Location     Type
   722 ;;		None
   723 ;; Return value:  Size  Location     Type
   724 ;;                  1    wreg      void 
   725 ;; Registers used:
   726 ;;		wreg, status,2, status,0, cstack
   727 ;; Tracked objects:
   728 ;;		On entry : 0/0
   729 ;;		On exit  : 0/0
   730 ;;		Unchanged: 0/0
   731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   736 ;;Total ram usage:        0 bytes
   737 ;; Hardware stack levels used: 1
   738 ;; Hardware stack levels required when called: 1
   739 ;; This function calls:
   740 ;;		_I2C_2_Master_Idle
   741 ;; This function is called by:
   742 ;;		_color_writetoaddr
   743 ;;		_color_read_Red
   744 ;; This function uses a non-reentrant model
   745 ;;
   746                           
   747                           	psect	text6
   748   01FE40                     __ptext6:
   749                           	callstack 0
   750   01FE40                     _I2C_2_Master_Start:
   751                           	callstack 27
   752   01FE40                     
   753                           ;i2c.c: 29:   I2C_2_Master_Idle();
   754   01FE40  EC40  F0FF         	call	_I2C_2_Master_Idle	;wreg free
   755   01FE44                     
   756                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
   757   01FE44  010E               	movlb	14	; () banked
   758   01FE46  81DA               	bsf	218,0,b	;volatile
   759   01FE48                     
   760                           ; BSR set to: 14
   761   01FE48  0012               	return		;funcret
   762   01FE4A                     __end_of_I2C_2_Master_Start:
   763                           	callstack 0
   764                           
   765 ;; *************** function _I2C_2_Master_Idle *****************
   766 ;; Defined at:
   767 ;;		line 22 in file "i2c.c"
   768 ;; Parameters:    Size  Location     Type
   769 ;;		None
   770 ;; Auto vars:     Size  Location     Type
   771 ;;		None
   772 ;; Return value:  Size  Location     Type
   773 ;;                  1    wreg      void 
   774 ;; Registers used:
   775 ;;		wreg, status,2, status,0
   776 ;; Tracked objects:
   777 ;;		On entry : 0/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   783 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   784 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   785 ;;Total ram usage:        1 bytes
   786 ;; Hardware stack levels used: 1
   787 ;; This function calls:
   788 ;;		Nothing
   789 ;; This function is called by:
   790 ;;		_I2C_2_Master_Start
   791 ;;		_I2C_2_Master_Stop
   792 ;;		_I2C_2_Master_Write
   793 ;;		_I2C_2_Master_RepStart
   794 ;;		_I2C_2_Master_Read
   795 ;; This function uses a non-reentrant model
   796 ;;
   797                           
   798                           	psect	text7
   799   01FE80                     __ptext7:
   800                           	callstack 0
   801   01FE80                     _I2C_2_Master_Idle:
   802                           	callstack 27
   803   01FE80                     l55:
   804   01FE80  010E               	movlb	14	; () banked
   805   01FE82  B5D8               	btfsc	216,2,b	;volatile
   806   01FE84  EF46  F0FF         	goto	u11
   807   01FE88  EF48  F0FF         	goto	u10
   808   01FE8C                     u11:
   809   01FE8C  EF40  F0FF         	goto	l55
   810   01FE90                     u10:
   811   01FE90                     
   812                           ; BSR set to: 14
   813   01FE90  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
   814   01FE94  0E1F               	movlw	31
   815   01FE96  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
   816   01FE98  A4D8               	btfss	status,2,c
   817   01FE9A  EF51  F0FF         	goto	u21
   818   01FE9E  EF53  F0FF         	goto	u20
   819   01FEA2                     u21:
   820   01FEA2  EF40  F0FF         	goto	l55
   821   01FEA6                     u20:
   822   01FEA6                     
   823                           ; BSR set to: 14
   824   01FEA6  0012               	return		;funcret
   825   01FEA8                     __end_of_I2C_2_Master_Idle:
   826                           	callstack 0
   827                           
   828 ;; *************** function _I2C_2_Master_Init *****************
   829 ;; Defined at:
   830 ;;		line 4 in file "i2c.c"
   831 ;; Parameters:    Size  Location     Type
   832 ;;		None
   833 ;; Auto vars:     Size  Location     Type
   834 ;;		None
   835 ;; Return value:  Size  Location     Type
   836 ;;                  1    wreg      void 
   837 ;; Registers used:
   838 ;;		wreg, status,2
   839 ;; Tracked objects:
   840 ;;		On entry : 0/0
   841 ;;		On exit  : 0/0
   842 ;;		Unchanged: 0/0
   843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   848 ;;Total ram usage:        0 bytes
   849 ;; Hardware stack levels used: 1
   850 ;; This function calls:
   851 ;;		Nothing
   852 ;; This function is called by:
   853 ;;		_color_click_init
   854 ;; This function uses a non-reentrant model
   855 ;;
   856                           
   857                           	psect	text8
   858   01FEA8                     __ptext8:
   859                           	callstack 0
   860   01FEA8                     _I2C_2_Master_Init:
   861                           	callstack 29
   862   01FEA8                     
   863                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
   864   01FEA8  010E               	movlb	14	; () banked
   865   01FEAA  51D9               	movf	217,w,b	;volatile
   866   01FEAC  0BF0               	andlw	-16
   867   01FEAE  0908               	iorlw	8
   868   01FEB0  6FD9               	movwf	217,b	;volatile
   869   01FEB2                     
   870                           ; BSR set to: 14
   871                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
   872   01FEB2  8BD9               	bsf	217,5,b	;volatile
   873                           
   874                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
   875   01FEB4  0E9F               	movlw	159
   876   01FEB6  6FD6               	movwf	214,b	;volatile
   877   01FEB8                     
   878                           ; BSR set to: 14
   879                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
   880   01FEB8  8A84               	bsf	132,5,c	;volatile
   881   01FEBA                     
   882                           ; BSR set to: 14
   883                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
   884   01FEBA  8C84               	bsf	132,6,c	;volatile
   885   01FEBC                     
   886                           ; BSR set to: 14
   887                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
   888   01FEBC  9BA7               	bcf	167,5,b	;volatile
   889   01FEBE                     
   890                           ; BSR set to: 14
   891                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
   892   01FEBE  9DA7               	bcf	167,6,b	;volatile
   893                           
   894                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
   895   01FEC0  0E1D               	movlw	29
   896   01FEC2  6F1D               	movwf	29,b	;volatile
   897                           
   898                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
   899   01FEC4  0E1E               	movlw	30
   900   01FEC6  6F1C               	movwf	28,b	;volatile
   901                           
   902                           ;i2c.c: 18:   RD5PPS=0x1C;
   903   01FEC8  0E1C               	movlw	28
   904   01FECA  6F6F               	movwf	111,b	;volatile
   905                           
   906                           ;i2c.c: 19:   RD6PPS=0x1B;
   907   01FECC  0E1B               	movlw	27
   908   01FECE  6F70               	movwf	112,b	;volatile
   909   01FED0                     
   910                           ; BSR set to: 14
   911   01FED0  0012               	return		;funcret
   912   01FED2                     __end_of_I2C_2_Master_Init:
   913                           	callstack 0
   914   000000                     
   915                           	psect	rparam
   916   000000                     
   917                           	psect	idloc
   918                           
   919                           ;Config register IDLOC0 @ 0x200000
   920                           ;	unspecified, using default values
   921   200000                     	org	2097152
   922   200000  0FFF               	dw	4095
   923                           
   924                           ;Config register IDLOC1 @ 0x200002
   925                           ;	unspecified, using default values
   926   200002                     	org	2097154
   927   200002  0FFF               	dw	4095
   928                           
   929                           ;Config register IDLOC2 @ 0x200004
   930                           ;	unspecified, using default values
   931   200004                     	org	2097156
   932   200004  0FFF               	dw	4095
   933                           
   934                           ;Config register IDLOC3 @ 0x200006
   935                           ;	unspecified, using default values
   936   200006                     	org	2097158
   937   200006  0FFF               	dw	4095
   938                           
   939                           ;Config register IDLOC4 @ 0x200008
   940                           ;	unspecified, using default values
   941   200008                     	org	2097160
   942   200008  0FFF               	dw	4095
   943                           
   944                           ;Config register IDLOC5 @ 0x20000A
   945                           ;	unspecified, using default values
   946   20000A                     	org	2097162
   947   20000A  0FFF               	dw	4095
   948                           
   949                           ;Config register IDLOC6 @ 0x20000C
   950                           ;	unspecified, using default values
   951   20000C                     	org	2097164
   952   20000C  0FFF               	dw	4095
   953                           
   954                           ;Config register IDLOC7 @ 0x20000E
   955                           ;	unspecified, using default values
   956   20000E                     	org	2097166
   957   20000E  0FFF               	dw	4095
   958                           
   959                           	psect	config
   960                           
   961                           ;Config register CONFIG1L @ 0x300000
   962                           ;	External Oscillator mode Selection bits
   963                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
   964                           ;	Power-up default value for COSC bits
   965                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
   966   300000                     	org	3145728
   967   300000  AA                 	db	170
   968                           
   969                           ;Config register CONFIG1H @ 0x300001
   970                           ;	unspecified, using default values
   971                           ;	Clock Out Enable bit
   972                           ;	CLKOUTEN = 0x1, unprogrammed default
   973                           ;	Clock Switch Enable bit
   974                           ;	CSWEN = 0x1, unprogrammed default
   975                           ;	Fail-Safe Clock Monitor Enable bit
   976                           ;	FCMEN = 0x1, unprogrammed default
   977   300001                     	org	3145729
   978   300001  FF                 	db	255
   979                           
   980                           ;Config register CONFIG2L @ 0x300002
   981                           ;	unspecified, using default values
   982                           ;	Master Clear Enable bit
   983                           ;	MCLRE = 0x1, unprogrammed default
   984                           ;	Power-up Timer Enable bit
   985                           ;	PWRTE = 0x1, unprogrammed default
   986                           ;	Low-power BOR enable bit
   987                           ;	LPBOREN = 0x1, unprogrammed default
   988                           ;	Brown-out Reset Enable bits
   989                           ;	BOREN = 0x3, unprogrammed default
   990   300002                     	org	3145730
   991   300002  FF                 	db	255
   992                           
   993                           ;Config register CONFIG2H @ 0x300003
   994                           ;	unspecified, using default values
   995                           ;	Brown Out Reset Voltage selection bits
   996                           ;	BORV = 0x3, unprogrammed default
   997                           ;	ZCD Disable bit
   998                           ;	ZCD = 0x1, unprogrammed default
   999                           ;	PPSLOCK bit One-Way Set Enable bit
  1000                           ;	PPS1WAY = 0x1, unprogrammed default
  1001                           ;	Stack Full/Underflow Reset Enable bit
  1002                           ;	STVREN = 0x1, unprogrammed default
  1003                           ;	Debugger Enable bit
  1004                           ;	DEBUG = 0x1, unprogrammed default
  1005                           ;	Extended Instruction Set Enable bit
  1006                           ;	XINST = 0x1, unprogrammed default
  1007   300003                     	org	3145731
  1008   300003  FF                 	db	255
  1009                           
  1010                           ;Config register CONFIG3L @ 0x300004
  1011                           ;	WDT Period Select bits
  1012                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1013                           ;	WDT operating mode
  1014                           ;	WDTE = OFF, WDT Disabled
  1015   300004                     	org	3145732
  1016   300004  9F                 	db	159
  1017                           
  1018                           ;Config register CONFIG3H @ 0x300005
  1019                           ;	unspecified, using default values
  1020                           ;	WDT Window Select bits
  1021                           ;	WDTCWS = 0x7, unprogrammed default
  1022                           ;	WDT input clock selector
  1023                           ;	WDTCCS = 0x7, unprogrammed default
  1024   300005                     	org	3145733
  1025   300005  FF                 	db	255
  1026                           
  1027                           ;Config register CONFIG4L @ 0x300006
  1028                           ;	unspecified, using default values
  1029                           ;	Write Protection Block 0
  1030                           ;	WRT0 = 0x1, unprogrammed default
  1031                           ;	Write Protection Block 1
  1032                           ;	WRT1 = 0x1, unprogrammed default
  1033                           ;	Write Protection Block 2
  1034                           ;	WRT2 = 0x1, unprogrammed default
  1035                           ;	Write Protection Block 3
  1036                           ;	WRT3 = 0x1, unprogrammed default
  1037                           ;	Write Protection Block 3
  1038                           ;	WRT4 = 0x1, unprogrammed default
  1039                           ;	Write Protection Block 3
  1040                           ;	WRT5 = 0x1, unprogrammed default
  1041                           ;	Write Protection Block 3
  1042                           ;	WRT6 = 0x1, unprogrammed default
  1043                           ;	Write Protection Block 3
  1044                           ;	WRT7 = 0x1, unprogrammed default
  1045   300006                     	org	3145734
  1046   300006  FF                 	db	255
  1047                           
  1048                           ;Config register CONFIG4H @ 0x300007
  1049                           ;	unspecified, using default values
  1050                           ;	Configuration Register Write Protection bit
  1051                           ;	WRTC = 0x1, unprogrammed default
  1052                           ;	Boot Block Write Protection bit
  1053                           ;	WRTB = 0x1, unprogrammed default
  1054                           ;	Data EEPROM Write Protection bit
  1055                           ;	WRTD = 0x1, unprogrammed default
  1056                           ;	Scanner Enable bit
  1057                           ;	SCANE = 0x1, unprogrammed default
  1058                           ;	Low Voltage Programming Enable bit
  1059                           ;	LVP = 0x1, unprogrammed default
  1060   300007                     	org	3145735
  1061   300007  FF                 	db	255
  1062                           
  1063                           ;Config register CONFIG5L @ 0x300008
  1064                           ;	unspecified, using default values
  1065                           ;	UserNVM Program Memory Code Protection bit
  1066                           ;	CP = 0x1, unprogrammed default
  1067                           ;	DataNVM Memory Code Protection bit
  1068                           ;	CPD = 0x1, unprogrammed default
  1069   300008                     	org	3145736
  1070   300008  FF                 	db	255
  1071                           
  1072                           ;Config register CONFIG5H @ 0x300009
  1073                           ;	unspecified, using default values
  1074   300009                     	org	3145737
  1075   300009  FF                 	db	255
  1076                           
  1077                           ;Config register CONFIG6L @ 0x30000A
  1078                           ;	unspecified, using default values
  1079                           ;	Table Read Protection Block 0
  1080                           ;	EBTR0 = 0x1, unprogrammed default
  1081                           ;	Table Read Protection Block 1
  1082                           ;	EBTR1 = 0x1, unprogrammed default
  1083                           ;	Table Read Protection Block 2
  1084                           ;	EBTR2 = 0x1, unprogrammed default
  1085                           ;	Table Read Protection Block 3
  1086                           ;	EBTR3 = 0x1, unprogrammed default
  1087                           ;	Table Read Protection Block 4
  1088                           ;	EBTR4 = 0x1, unprogrammed default
  1089                           ;	Table Read Protection Block 5
  1090                           ;	EBTR5 = 0x1, unprogrammed default
  1091                           ;	Table Read Protection Block 6
  1092                           ;	EBTR6 = 0x1, unprogrammed default
  1093                           ;	Table Read Protection Block 7
  1094                           ;	EBTR7 = 0x1, unprogrammed default
  1095   30000A                     	org	3145738
  1096   30000A  FF                 	db	255
  1097                           
  1098                           ;Config register CONFIG6H @ 0x30000B
  1099                           ;	unspecified, using default values
  1100                           ;	Boot Block Table Read Protection bit
  1101                           ;	EBTRB = 0x1, unprogrammed default
  1102   30000B                     	org	3145739
  1103   30000B  FF                 	db	255
  1104                           tosu	equ	0xFFF
  1105                           tosh	equ	0xFFE
  1106                           tosl	equ	0xFFD
  1107                           stkptr	equ	0xFFC
  1108                           pclatu	equ	0xFFB
  1109                           pclath	equ	0xFFA
  1110                           pcl	equ	0xFF9
  1111                           tblptru	equ	0xFF8
  1112                           tblptrh	equ	0xFF7
  1113                           tblptrl	equ	0xFF6
  1114                           tablat	equ	0xFF5
  1115                           prodh	equ	0xFF4
  1116                           prodl	equ	0xFF3
  1117                           indf0	equ	0xFEF
  1118                           postinc0	equ	0xFEE
  1119                           postdec0	equ	0xFED
  1120                           preinc0	equ	0xFEC
  1121                           plusw0	equ	0xFEB
  1122                           fsr0h	equ	0xFEA
  1123                           fsr0l	equ	0xFE9
  1124                           wreg	equ	0xFE8
  1125                           indf1	equ	0xFE7
  1126                           postinc1	equ	0xFE6
  1127                           postdec1	equ	0xFE5
  1128                           preinc1	equ	0xFE4
  1129                           plusw1	equ	0xFE3
  1130                           fsr1h	equ	0xFE2
  1131                           fsr1l	equ	0xFE1
  1132                           bsr	equ	0xFE0
  1133                           indf2	equ	0xFDF
  1134                           postinc2	equ	0xFDE
  1135                           postdec2	equ	0xFDD
  1136                           preinc2	equ	0xFDC
  1137                           plusw2	equ	0xFDB
  1138                           fsr2h	equ	0xFDA
  1139                           fsr2l	equ	0xFD9
  1140                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     23      23
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turn180@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turn180@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turn180@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turn180@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnRight135@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnRight135@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnRight135@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnRight135@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnLeft135@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnLeft135@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnLeft135@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnLeft135@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnRight90@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnRight90@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnRight90@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnRight90@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnLeft90@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnLeft90@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnLeft90@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnLeft90@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    S845DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    S845DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 


Critical Paths under _main in COMRAM

    _main->_color_click_init
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0     603
                                              5 COMRAM    18    18      0
                   _color_click_init
                    _initDCmotorsPWM
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     287
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     287
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      15
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _initDCmotorsPWM

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     17      17       1       24.2%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBIGSFRhhhh       40      0       0      32        0.0%
BITBIGSFRhhhlhh      E      0       0      33        0.0%
BITBIGSFRhhhlhl      1      0       0      34        0.0%
BITBIGSFRhhhllh      2      0       0      35        0.0%
BITBIGSFRhhhlll     1D      0       0      36        0.0%
BITBIGSFRhhl         1      0       0      37        0.0%
BITBIGSFRhlhh        2      0       0      38        0.0%
BITBIGSFRhlhl        1      0       0      39        0.0%
BITBIGSFRhlllh      54      0       0      40        0.0%
BITBIGSFRhllllh      2      0       0      41        0.0%
BITBIGSFRhlllll     46      0       0      42        0.0%
BITBIGSFRlh          1      0       0      43        0.0%
BITBIGSFRllh        2D      0       0      44        0.0%
BITBIGSFRlllhhh     1E      0       0      45        0.0%
BITBIGSFRlllhhh     11      0       0      46        0.0%
BITBIGSFRlllhhh      1      0       0      47        0.0%
BITBIGSFRlllhhl      3      0       0      48        0.0%
BITBIGSFRlllhlh      5      0       0      49        0.0%
BITBIGSFRlllhll     4B      0       0      50        0.0%
BITBIGSFRllll       2D      0       0      51        0.0%
ABS                  0      0       0      52        0.0%
BIGRAM             DE9      0       0      53        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Nov 28 23:39:08 2022

                         l22 FE7E                           l19 FF04                           l52 FED0  
                         l61 FE48                           l70 FE5E                           l55 FE80  
                         l58 FEA6                           l67 FE52                           u10 FE90  
                         u11 FE8C                           u20 FEA6                           u21 FEA2  
                        l124 FFFE                          l901 FEBA                          l903 FEBC  
                        l905 FEBE                          l881 FE90                          l883 FE40  
                        l891 FE4A                          l885 FE44                          l893 FE4E  
                        l895 FEA8                          l879 FE80                          l887 FE56  
                        l897 FEB2                          l889 FE5A                          l899 FEB8  
                        u207 FEE6                          wreg 000FE8                         l1201 FF52  
                       l1131 FE62                         l1203 FF5A                         l1141 FEFA  
                       l1133 FED2                         l1205 FF62                         l1135 FED6  
                       l1151 FFD8                         l1143 FF70                         l1207 FF64  
                       l1137 FEE0                         l1161 FFF2                         l1153 FFDA  
                       l1145 FF80                         l1209 FF66                         l1139 FEF0  
                       l1163 FFFC                         l1155 FFE4                         l1147 FFAA  
                       l1171 FF16                         l1157 FFE6                         l1149 FFCE  
                       l1181 FF1E                         l1173 FF16                         l1165 FF06  
                       l1159 FFF0                         l1191 FF32                         l1183 FF20  
                       l1175 FF18                         l1167 FF06                         l1193 FF3A  
                       l1185 FF22                         l1177 FF1A                         l1169 FF12  
                       l1195 FF42                         l1187 FF26                         l1179 FF1C  
                       l1197 FF46                         l1189 FF2A                         l1199 FF4A  
                       _T2PR 000FBC                         _main FF06                         start 0000  
               ___param_bank 000000                        ?_main 0001   __end_of_I2C_2_Master_Start FE4A  
 __end_of_I2C_2_Master_Write FE60                        status 000FD8              __initialization FE3A  
               __end_of_main FF70                       ??_main 0006                __activetblptr 000000  
                     _CCPR1H 000FAA                       _CCPR2H 000FA6                       _CCPR3H 000F25  
                     _CCPR4H 000F21                       _RE2PPS 000E74                       _RD5PPS 000E6F  
                     _RC7PPS 000E69                       _RE4PPS 000E76                       _RD6PPS 000E70  
                     _RG6PPS 000E88     __end_of_color_click_init FF06                 _CCPTMRS0bits 000FAD  
                     isa$std 000001            ??_initDCmotorsPWM 0003                   __accesstop 0060  
    __end_of__initialization FE3A                ___rparam_used 000001               __pcstackCOMRAM 0001  
          _color_writetoaddr FE60                 _T2CLKCONbits 000FBF           ?_color_writetoaddr 0003  
        ??_color_writetoaddr 0004                      _SSP2ADD 000ED6                      _SSP2BUF 000ED5  
     color_writetoaddr@value 0003    __end_of_color_writetoaddr FE80           _I2C_2_Master_Start FE40  
         _I2C_2_Master_Write FE54                      __Hparam 0000                      __Lparam 0000  
        ?_I2C_2_Master_Start 0001          ?_I2C_2_Master_Write 0001                      __pcinit FE3A  
                    __ramtop 0E00                      __ptext0 FF06                      __ptext1 FF70  
                    __ptext2 FED2                      __ptext3 FE60                      __ptext4 FE54  
                    __ptext5 FE4A                      __ptext6 FE40                      __ptext7 FE80  
                    __ptext8 FEA8                    _T2CONbits 000FBD                    _T2HLTbits 000FBE  
       ??_I2C_2_Master_Start 0002         ??_I2C_2_Master_Write 0002         end_of_initialization FE3A  
          ?_color_click_init 0001           ??_color_click_init 0005              _initDCmotorsPWM FF70  
                  _TRISCbits 000F83                    _TRISDbits 000F84                    _TRISEbits 000F85  
                  _TRISGbits 000F87                    _TRISHbits 000F88     color_writetoaddr@address 0004  
                _CCP1CONbits 000FAB                  _CCP2CONbits 000FA7                  _CCP3CONbits 000F26  
                _CCP4CONbits 000F22                   main@motorL 0006                   main@motorR 000F  
        start_initialization FE3A      __end_of_initDCmotorsPWM 0000            _I2C_2_Master_Idle FE80  
          _I2C_2_Master_Init FEA8            _I2C_2_Master_Stop FE4A           ?_I2C_2_Master_Idle 0001  
         ?_I2C_2_Master_Init 0001           ?_I2C_2_Master_Stop 0001     initDCmotorsPWM@PWMperiod 0001  
        ??_I2C_2_Master_Idle 0001          ??_I2C_2_Master_Init 0001          ??_I2C_2_Master_Stop 0002  
                   _LATCbits 000F7B                     _LATDbits 000F7C                     _LATEbits 000F7D  
                   _LATGbits 000F7F                     _LATHbits 000F80             ?_initDCmotorsPWM 0001  
                   _SSP2CON2 000EDA                     _SSP2STAT 000ED8    __end_of_I2C_2_Master_Idle FEA8  
  __end_of_I2C_2_Master_Init FED2    __end_of_I2C_2_Master_Stop FE54  I2C_2_Master_Write@data_byte 0002  
                   __Hrparam 0000                     __Lrparam 0000                   _ANSELDbits 000EA7  
               _SSP2CON1bits 000ED9                 _SSP2CON2bits 000EDA                     isa$xinst 000000  
           _color_click_init FED2                   _SSP2DATPPS 000E1D                   _SSP2CLKPPS 000E1C  
