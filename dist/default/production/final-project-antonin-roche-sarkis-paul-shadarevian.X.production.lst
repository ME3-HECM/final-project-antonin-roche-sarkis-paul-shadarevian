

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Dec 12 14:20:53 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    57                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    58                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    59   000000                     
    60                           ; Version 2.35
    61                           ; Generated 05/05/2021 GMT
    62                           ; 
    63                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution. Publication is not required when
    77                           ;        this file is used in an embedded application.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F67K40 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95   000000                     _T0CON0bits	set	4053
    96   000000                     _T0CON1bits	set	4054
    97   000000                     _INTCONbits	set	4082
    98   000000                     _TRISFbits	set	3974
    99   000000                     _LATFbits	set	3966
   100   000000                     _LATDbits	set	3964
   101   000000                     _TRISGbits	set	3975
   102   000000                     _TRISEbits	set	3973
   103   000000                     _LATGbits	set	3967
   104   000000                     _SSP2CON2bits	set	3802
   105   000000                     _SSP2CLKPPS	set	3612
   106   000000                     _SSP2DATPPS	set	3613
   107   000000                     _ANSELDbits	set	3751
   108   000000                     _SSP2ADD	set	3798
   109   000000                     _SSP2CON1bits	set	3801
   110   000000                     _LATCbits	set	3963
   111   000000                     _LATEbits	set	3965
   112   000000                     _SSP2CON2	set	3802
   113   000000                     _TRISDbits	set	3972
   114   000000                     _CCPR4H	set	3873
   115   000000                     _CCPR3H	set	3877
   116   000000                     _SSP2STAT	set	3800
   117   000000                     _ANSELEbits	set	3759
   118   000000                     _ANSELFbits	set	3764
   119   000000                     _SSP2BUF	set	3797
   120   000000                     _PIE0bits	set	3625
   121   000000                     _PIR0bits	set	3635
   122   000000                     _RC7PPS	set	3689
   123   000000                     _RD5PPS	set	3695
   124   000000                     _RE2PPS	set	3700
   125   000000                     _RD6PPS	set	3696
   126   000000                     _TRISAbits	set	3969
   127   000000                     _LATHbits	set	3968
   128   000000                     _TRISCbits	set	3971
   129   000000                     _PORTFbits	set	3982
   130   000000                     _TRISHbits	set	3976
   131   000000                     _T2PR	set	4028
   132   000000                     _T2CONbits	set	4029
   133   000000                     _CCPR2H	set	4006
   134   000000                     _CCPR1H	set	4010
   135   000000                     _RE4PPS	set	3702
   136   000000                     _RG6PPS	set	3720
   137   000000                     _TMR0L	set	4051
   138   000000                     _TMR0H	set	4052
   139   000000                     _T2CLKCONbits	set	4031
   140   000000                     _T2HLTbits	set	4030
   141   000000                     _CCP1CONbits	set	4011
   142   000000                     _CCPTMRS0bits	set	4013
   143   000000                     _CCP2CONbits	set	4007
   144   000000                     _ADREFbits	set	3928
   145   000000                     _LATAbits	set	3961
   146   000000                     _CCP3CONbits	set	3878
   147   000000                     _CCP4CONbits	set	3874
   148   000000                     _ADPCH	set	3935
   149   000000                     _ADRESH	set	3940
   150   000000                     _ADCON0bits	set	3936
   151                           
   152                           ; #config settings
   153                           
   154                           	psect	cinit
   155   0026E8                     __pcinit:
   156                           	callstack 0
   157   0026E8                     start_initialization:
   158                           	callstack 0
   159   0026E8                     __initialization:
   160                           	callstack 0
   161                           
   162                           ; Clear objects allocated to BANK2 (200 bytes)
   163   0026E8  EE02  F000         	lfsr	0,__pbssBANK2
   164   0026EC  0EC8               	movlw	200
   165   0026EE                     clear_0:
   166   0026EE  6AEE               	clrf	postinc0,c
   167   0026F0  06E8               	decf	wreg,f,c
   168   0026F2  E1FD               	bnz	clear_0
   169                           
   170                           ; Clear objects allocated to BANK1 (100 bytes)
   171   0026F4  EE01  F000         	lfsr	0,__pbssBANK1
   172   0026F8  0E64               	movlw	100
   173   0026FA                     clear_1:
   174   0026FA  6AEE               	clrf	postinc0,c
   175   0026FC  06E8               	decf	wreg,f,c
   176   0026FE  E1FD               	bnz	clear_1
   177                           
   178                           ; Clear objects allocated to BANK0 (1 bytes)
   179   002700  0100               	movlb	0
   180   002702  6BA6               	clrf	__pbssBANK0& (0+255),b
   181                           
   182                           ; Clear objects allocated to COMRAM (9 bytes)
   183   002704  EE00  F04E         	lfsr	0,__pbssCOMRAM
   184   002708  0E09               	movlw	9
   185   00270A                     clear_2:
   186   00270A  6AEE               	clrf	postinc0,c
   187   00270C  06E8               	decf	wreg,f,c
   188   00270E  E1FD               	bnz	clear_2
   189   002710                     end_of_initialization:
   190                           	callstack 0
   191   002710                     __end_of__initialization:
   192                           	callstack 0
   193   002710  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   194   002712  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   195   002714  0100               	movlb	0
   196   002716  EF69  F003         	goto	_main	;jump to C main() function
   197                           
   198                           	psect	bssCOMRAM
   199   00004E                     __pbssCOMRAM:
   200                           	callstack 0
   201   00004E                     _off_period:
   202                           	callstack 0
   203   00004E                     	ds	2
   204   000050                     _on_period:
   205                           	callstack 0
   206   000050                     	ds	2
   207   000052                     _timercount:
   208                           	callstack 0
   209   000052                     	ds	2
   210   000054                     _interruptenable:
   211                           	callstack 0
   212   000054                     	ds	1
   213   000055                     _pathposition:
   214                           	callstack 0
   215   000055                     	ds	1
   216   000056                     _timeposition:
   217                           	callstack 0
   218   000056                     	ds	1
   219                           
   220                           	psect	bssBANK0
   221   0000A6                     __pbssBANK0:
   222                           	callstack 0
   223   0000A6                     _step:
   224                           	callstack 0
   225   0000A6                     	ds	1
   226                           
   227                           	psect	bssBANK1
   228   000100                     __pbssBANK1:
   229                           	callstack 0
   230   000100                     _path:
   231                           	callstack 0
   232   000100                     	ds	100
   233                           
   234                           	psect	bssBANK2
   235   000200                     __pbssBANK2:
   236                           	callstack 0
   237   000200                     _timearray:
   238                           	callstack 0
   239   000200                     	ds	200
   240                           
   241                           	psect	cstackBANK0
   242   000060                     __pcstackBANK0:
   243                           	callstack 0
   244   000060                     carryoutstep@motorL:
   245                           	callstack 0
   246                           
   247                           ; 9 bytes @ 0x0
   248   000060                     	ds	9
   249   000069                     carryoutstep@motorR:
   250                           	callstack 0
   251                           
   252                           ; 9 bytes @ 0x9
   253   000069                     	ds	9
   254   000072                     carryoutstep@read:
   255                           	callstack 0
   256                           
   257                           ; 2 bytes @ 0x12
   258   000072                     	ds	2
   259   000074                     carryoutstep@mx:
   260                           	callstack 0
   261                           
   262                           ; 2 bytes @ 0x14
   263   000074                     	ds	2
   264   000076                     carryoutstep@amb:
   265                           	callstack 0
   266                           
   267                           ; 2 bytes @ 0x16
   268   000076                     	ds	2
   269   000078                     carryoutstep@step:
   270                           	callstack 0
   271                           
   272                           ; 1 bytes @ 0x18
   273   000078                     	ds	1
   274   000079                     main@a:
   275                           	callstack 0
   276                           
   277                           ; 1 bytes @ 0x19
   278   000079                     	ds	1
   279   00007A                     _main$2859:
   280                           	callstack 0
   281                           
   282                           ; 2 bytes @ 0x1A
   283   00007A                     	ds	2
   284   00007C                     main@motorL:
   285                           	callstack 0
   286                           
   287                           ; 9 bytes @ 0x1C
   288   00007C                     	ds	9
   289   000085                     main@motorR:
   290                           	callstack 0
   291                           
   292                           ; 9 bytes @ 0x25
   293   000085                     	ds	9
   294   00008E                     main@max:
   295                           	callstack 0
   296                           
   297                           ; 8 bytes @ 0x2E
   298   00008E                     	ds	8
   299   000096                     main@ambient:
   300                           	callstack 0
   301                           
   302                           ; 8 bytes @ 0x36
   303   000096                     	ds	8
   304   00009E                     main@reading:
   305                           	callstack 0
   306                           
   307                           ; 8 bytes @ 0x3E
   308   00009E                     	ds	8
   309                           
   310                           	psect	cstackCOMRAM
   311   000001                     __pcstackCOMRAM:
   312                           	callstack 0
   313   000001                     ??_I2C_2_Master_Idle:
   314   000001                     ?_ADC_getval:
   315                           	callstack 0
   316   000001                     ?___wmul:
   317                           	callstack 0
   318   000001                     ?___flmul:
   319                           	callstack 0
   320   000001                     ?___xxtofl:
   321                           	callstack 0
   322   000001                     savepath@instruction:
   323                           	callstack 0
   324   000001                     initDCmotorsPWM@PWMperiod:
   325                           	callstack 0
   326   000001                     savetime@timercount:
   327                           	callstack 0
   328   000001                     ___wmul@multiplier:
   329                           	callstack 0
   330   000001                     ___flmul@b:
   331                           	callstack 0
   332   000001                     ___xxtofl@val:
   333                           	callstack 0
   334                           
   335                           ; 4 bytes @ 0x0
   336   000001                     	ds	1
   337   000002                     ??_I2C_2_Master_Read:
   338   000002                     I2C_2_Master_Write@data_byte:
   339                           	callstack 0
   340                           
   341                           ; 1 bytes @ 0x1
   342   000002                     	ds	1
   343   000003                     I2C_2_Master_Read@ack:
   344                           	callstack 0
   345   000003                     color_writetoaddr@value:
   346                           	callstack 0
   347   000003                     ADC_getval@tmpval:
   348                           	callstack 0
   349   000003                     ___wmul@multiplicand:
   350                           	callstack 0
   351                           
   352                           ; 2 bytes @ 0x2
   353   000003                     	ds	1
   354   000004                     I2C_2_Master_Read@tmp:
   355                           	callstack 0
   356   000004                     color_writetoaddr@address:
   357                           	callstack 0
   358                           
   359                           ; 1 bytes @ 0x3
   360   000004                     	ds	1
   361   000005                     ??_color_click_init:
   362   000005                     ??___xxtofl:
   363   000005                     ?_color_read_Red:
   364                           	callstack 0
   365   000005                     ?_color_read_Blue:
   366                           	callstack 0
   367   000005                     ?_color_read_Green:
   368                           	callstack 0
   369   000005                     ?_color_read_Clear:
   370                           	callstack 0
   371   000005                     ___wmul@product:
   372                           	callstack 0
   373   000005                     ___flmul@a:
   374                           	callstack 0
   375                           
   376                           ; 4 bytes @ 0x4
   377   000005                     	ds	2
   378   000007                     ??_color_read_Red:
   379   000007                     ??_color_read_Blue:
   380   000007                     ??_color_read_Green:
   381   000007                     ??_color_read_Clear:
   382                           
   383                           ; 1 bytes @ 0x6
   384   000007                     	ds	2
   385   000009                     ??___flmul:
   386   000009                     ___xxtofl@sign:
   387                           	callstack 0
   388                           
   389                           ; 1 bytes @ 0x8
   390   000009                     	ds	1
   391   00000A                     ___xxtofl@exp:
   392                           	callstack 0
   393   00000A                     color_read_Red@tmp:
   394                           	callstack 0
   395   00000A                     color_read_Green@tmp:
   396                           	callstack 0
   397   00000A                     color_read_Blue@tmp:
   398                           	callstack 0
   399   00000A                     color_read_Clear@tmp:
   400                           	callstack 0
   401                           
   402                           ; 2 bytes @ 0x9
   403   00000A                     	ds	1
   404   00000B                     ___xxtofl@arg:
   405                           	callstack 0
   406                           
   407                           ; 4 bytes @ 0xA
   408   00000B                     	ds	1
   409   00000C                     ?___lwdiv:
   410                           	callstack 0
   411   00000C                     ___lwdiv@dividend:
   412                           	callstack 0
   413                           
   414                           ; 2 bytes @ 0xB
   415   00000C                     	ds	1
   416   00000D                     ___flmul@sign:
   417                           	callstack 0
   418                           
   419                           ; 1 bytes @ 0xC
   420   00000D                     	ds	1
   421   00000E                     ___lwdiv@divisor:
   422                           	callstack 0
   423   00000E                     ___flmul@grs:
   424                           	callstack 0
   425                           
   426                           ; 4 bytes @ 0xD
   427   00000E                     	ds	1
   428   00000F                     ?___fldiv:
   429                           	callstack 0
   430   00000F                     ___fldiv@b:
   431                           	callstack 0
   432                           
   433                           ; 4 bytes @ 0xE
   434   00000F                     	ds	1
   435   000010                     ___lwdiv@quotient:
   436                           	callstack 0
   437                           
   438                           ; 2 bytes @ 0xF
   439   000010                     	ds	2
   440   000012                     ___lwdiv@counter:
   441                           	callstack 0
   442   000012                     ___flmul@aexp:
   443                           	callstack 0
   444                           
   445                           ; 1 bytes @ 0x11
   446   000012                     	ds	1
   447   000013                     ___flmul@bexp:
   448                           	callstack 0
   449   000013                     setMotorPWM@m:
   450                           	callstack 0
   451   000013                     ___fldiv@a:
   452                           	callstack 0
   453                           
   454                           ; 4 bytes @ 0x12
   455   000013                     	ds	1
   456   000014                     ___flmul@prod:
   457                           	callstack 0
   458                           
   459                           ; 4 bytes @ 0x13
   460   000014                     	ds	1
   461   000015                     ??_setMotorPWM:
   462                           
   463                           ; 1 bytes @ 0x14
   464   000015                     	ds	2
   465   000017                     ??___fldiv:
   466   000017                     setMotorPWM@posDuty:
   467                           	callstack 0
   468                           
   469                           ; 1 bytes @ 0x16
   470   000017                     	ds	1
   471   000018                     setMotorPWM@negDuty:
   472                           	callstack 0
   473   000018                     ___flmul@temp:
   474                           	callstack 0
   475                           
   476                           ; 2 bytes @ 0x17
   477   000018                     	ds	1
   478   000019                     stop@mL:
   479                           	callstack 0
   480   000019                     fullSpeedAhead@mL:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0x18
   484   000019                     	ds	1
   485   00001A                     ?___fltol:
   486                           	callstack 0
   487   00001A                     ___fltol@f1:
   488                           	callstack 0
   489                           
   490                           ; 4 bytes @ 0x19
   491   00001A                     	ds	1
   492   00001B                     stop@mR:
   493                           	callstack 0
   494   00001B                     fullSpeedAhead@mR:
   495                           	callstack 0
   496   00001B                     ___fldiv@rem:
   497                           	callstack 0
   498                           
   499                           ; 4 bytes @ 0x1A
   500   00001B                     	ds	2
   501   00001D                     ??_stop:
   502   00001D                     fullSpeedAhead@dir:
   503                           	callstack 0
   504                           
   505                           ; 1 bytes @ 0x1C
   506   00001D                     	ds	1
   507   00001E                     ??_fullSpeedAhead:
   508   00001E                     ??___fltol:
   509   00001E                     turnLeft90@mL:
   510                           	callstack 0
   511   00001E                     turnRight90@mL:
   512                           	callstack 0
   513   00001E                     turnLeft135@mL:
   514                           	callstack 0
   515   00001E                     turnRight135@mL:
   516                           	callstack 0
   517   00001E                     turn180@mL:
   518                           	callstack 0
   519   00001E                     square@mL:
   520                           	callstack 0
   521   00001E                     smallmovement@mL:
   522                           	callstack 0
   523                           
   524                           ; 2 bytes @ 0x1D
   525   00001E                     	ds	1
   526   00001F                     ___fldiv@sign:
   527                           	callstack 0
   528                           
   529                           ; 1 bytes @ 0x1E
   530   00001F                     	ds	1
   531   000020                     turnLeft90@mR:
   532                           	callstack 0
   533   000020                     turnRight90@mR:
   534                           	callstack 0
   535   000020                     turnLeft135@mR:
   536                           	callstack 0
   537   000020                     turnRight135@mR:
   538                           	callstack 0
   539   000020                     turn180@mR:
   540                           	callstack 0
   541   000020                     square@mR:
   542                           	callstack 0
   543   000020                     smallmovement@mR:
   544                           	callstack 0
   545   000020                     ___fldiv@new_exp:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x1F
   549   000020                     	ds	2
   550   000022                     ??_turnLeft90:
   551   000022                     ??_turnRight90:
   552   000022                     ??_turnLeft135:
   553   000022                     ??_turnRight135:
   554   000022                     ??_turn180:
   555   000022                     square@dir:
   556                           	callstack 0
   557   000022                     smallmovement@dir:
   558                           	callstack 0
   559   000022                     ___fltol@sign1:
   560                           	callstack 0
   561   000022                     ___fldiv@grs:
   562                           	callstack 0
   563                           
   564                           ; 4 bytes @ 0x21
   565   000022                     	ds	1
   566   000023                     ??_square:
   567   000023                     ??_smallmovement:
   568   000023                     ___fltol@exp1:
   569                           	callstack 0
   570                           
   571                           ; 1 bytes @ 0x22
   572   000023                     	ds	1
   573   000024                     returnstep@motorL:
   574                           	callstack 0
   575                           
   576                           ; 9 bytes @ 0x23
   577   000024                     	ds	2
   578   000026                     ___fldiv@bexp:
   579                           	callstack 0
   580                           
   581                           ; 1 bytes @ 0x25
   582   000026                     	ds	1
   583   000027                     ___fldiv@aexp:
   584                           	callstack 0
   585                           
   586                           ; 1 bytes @ 0x26
   587   000027                     	ds	1
   588   000028                     decide_color@mx:
   589                           	callstack 0
   590                           
   591                           ; 2 bytes @ 0x27
   592   000028                     	ds	2
   593   00002A                     ??_decide_color:
   594                           
   595                           ; 1 bytes @ 0x29
   596   00002A                     	ds	3
   597   00002D                     returnstep@motorR:
   598                           	callstack 0
   599                           
   600                           ; 9 bytes @ 0x2C
   601   00002D                     	ds	1
   602   00002E                     decide_color@rrf:
   603                           	callstack 0
   604                           
   605                           ; 4 bytes @ 0x2D
   606   00002E                     	ds	4
   607   000032                     decide_color@brf:
   608                           	callstack 0
   609                           
   610                           ; 4 bytes @ 0x31
   611   000032                     	ds	4
   612   000036                     returnstep@instruction:
   613                           	callstack 0
   614   000036                     decide_color@grf:
   615                           	callstack 0
   616                           
   617                           ; 4 bytes @ 0x35
   618   000036                     	ds	1
   619   000037                     returnhome@motorL:
   620                           	callstack 0
   621                           
   622                           ; 9 bytes @ 0x36
   623   000037                     	ds	3
   624   00003A                     decide_color@gr:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0x39
   628   00003A                     	ds	2
   629   00003C                     decide_color@rr:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x3B
   633   00003C                     	ds	2
   634   00003E                     decide_color@br:
   635                           	callstack 0
   636                           
   637                           ; 2 bytes @ 0x3D
   638   00003E                     	ds	2
   639   000040                     returnhome@motorR:
   640                           	callstack 0
   641                           
   642                           ; 9 bytes @ 0x3F
   643   000040                     	ds	9
   644   000049                     ??_returnhome:
   645                           
   646                           ; 1 bytes @ 0x48
   647   000049                     	ds	3
   648   00004C                     ??_main:
   649                           
   650                           ; 1 bytes @ 0x4B
   651   00004C                     	ds	2
   652                           
   653 ;;
   654 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   655 ;;
   656 ;; *************** function _main *****************
   657 ;; Defined at:
   658 ;;		line 21 in file "mainfinal.c"
   659 ;; Parameters:    Size  Location     Type
   660 ;;		None
   661 ;; Auto vars:     Size  Location     Type
   662 ;;  a               1   25[BANK0 ] unsigned char 
   663 ;;  motorR          9   37[BANK0 ] struct DC_motor
   664 ;;  motorL          9   28[BANK0 ] struct DC_motor
   665 ;;  reading         8   62[BANK0 ] struct colors
   666 ;;  ambient         8   54[BANK0 ] struct colors
   667 ;;  max             8   46[BANK0 ] struct colors
   668 ;;  PWMcycle        2    0        unsigned int 
   669 ;; Return value:  Size  Location     Type
   670 ;;                  1    wreg      void 
   671 ;; Registers used:
   672 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   673 ;; Tracked objects:
   674 ;;		On entry : 0/0
   675 ;;		On exit  : 0/0
   676 ;;		Unchanged: 0/0
   677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   679 ;;      Locals:         0      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   680 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   681 ;;      Totals:         2      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   682 ;;Total ram usage:       47 bytes
   683 ;; Hardware stack levels required when called: 8
   684 ;; This function calls:
   685 ;;		_ADC_getval
   686 ;;		_ADC_init
   687 ;;		_I2C_2_Master_Init
   688 ;;		_Interrupts_init
   689 ;;		_Timer0_init
   690 ;;		___lwdiv
   691 ;;		_carryoutstep
   692 ;;		_color_click_init
   693 ;;		_color_read_Blue
   694 ;;		_color_read_Clear
   695 ;;		_color_read_Green
   696 ;;		_color_read_Red
   697 ;;		_decide_color
   698 ;;		_fullSpeedAhead
   699 ;;		_initDCmotorsPWM
   700 ;;		_returnhome
   701 ;;		_savepath
   702 ;;		_savetime
   703 ;;		_smallmovement
   704 ;;		_square
   705 ;; This function is called by:
   706 ;;		Startup code after reset
   707 ;; This function uses a non-reentrant model
   708 ;;
   709                           
   710                           	psect	text0
   711   0006D2                     __ptext0:
   712                           	callstack 0
   713   0006D2                     _main:
   714                           	callstack 23
   715   0006D2                     
   716                           ;mainfinal.c: 23:     Timer0_init();
   717   0006D2  ECF9  F013         	call	_Timer0_init	;wreg free
   718   0006D6                     
   719                           ;mainfinal.c: 24:     Interrupts_init();
   720   0006D6  EC24  F014         	call	_Interrupts_init	;wreg free
   721   0006DA                     
   722                           ;mainfinal.c: 25:     initDCmotorsPWM(199);
   723   0006DA  0E00               	movlw	0
   724   0006DC  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   725   0006DE  0EC7               	movlw	199
   726   0006E0  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   727   0006E2  ECD8  F011         	call	_initDCmotorsPWM	;wreg free
   728   0006E6                     
   729                           ;mainfinal.c: 30:     color_click_init();
   730   0006E6  EC54  F013         	call	_color_click_init	;wreg free
   731   0006EA                     
   732                           ;mainfinal.c: 31:     I2C_2_Master_Init();
   733   0006EA  EC8D  F013         	call	_I2C_2_Master_Init	;wreg free
   734   0006EE                     
   735                           ;mainfinal.c: 35:     struct colors reading, max, ambient;;mainfinal.c: 38:     reading.
      +                          red = 0;
   736   0006EE  0E00               	movlw	0
   737   0006F0  0100               	movlb	0	; () banked
   738   0006F2  6F9F               	movwf	(main@reading+1)& (0+255),b
   739   0006F4  0E00               	movlw	0
   740   0006F6  6F9E               	movwf	main@reading& (0+255),b
   741   0006F8                     
   742                           ; BSR set to: 0
   743                           ;mainfinal.c: 39:     reading.blue = 0;
   744   0006F8  0E00               	movlw	0
   745   0006FA  6FA1               	movwf	(main@reading+3)& (0+255),b
   746   0006FC  0E00               	movlw	0
   747   0006FE  6FA0               	movwf	(main@reading+2)& (0+255),b
   748   000700                     
   749                           ; BSR set to: 0
   750                           ;mainfinal.c: 40:     reading.green = 0;
   751   000700  0E00               	movlw	0
   752   000702  6FA3               	movwf	(main@reading+5)& (0+255),b
   753   000704  0E00               	movlw	0
   754   000706  6FA2               	movwf	(main@reading+4)& (0+255),b
   755   000708                     
   756                           ; BSR set to: 0
   757                           ;mainfinal.c: 41:     reading.clear = 0;
   758   000708  0E00               	movlw	0
   759   00070A  6FA5               	movwf	(main@reading+7)& (0+255),b
   760   00070C  0E00               	movlw	0
   761   00070E  6FA4               	movwf	(main@reading+6)& (0+255),b
   762   000710                     
   763                           ; BSR set to: 0
   764                           ;mainfinal.c: 42:     max.red = 0;
   765   000710  0E00               	movlw	0
   766   000712  6F8F               	movwf	(main@max+1)& (0+255),b
   767   000714  0E00               	movlw	0
   768   000716  6F8E               	movwf	main@max& (0+255),b
   769   000718                     
   770                           ; BSR set to: 0
   771                           ;mainfinal.c: 43:     max.blue = 0;
   772   000718  0E00               	movlw	0
   773   00071A  6F91               	movwf	(main@max+3)& (0+255),b
   774   00071C  0E00               	movlw	0
   775   00071E  6F90               	movwf	(main@max+2)& (0+255),b
   776   000720                     
   777                           ; BSR set to: 0
   778                           ;mainfinal.c: 44:     max.green = 0;
   779   000720  0E00               	movlw	0
   780   000722  6F93               	movwf	(main@max+5)& (0+255),b
   781   000724  0E00               	movlw	0
   782   000726  6F92               	movwf	(main@max+4)& (0+255),b
   783   000728                     
   784                           ; BSR set to: 0
   785                           ;mainfinal.c: 45:     max.clear = 0;
   786   000728  0E00               	movlw	0
   787   00072A  6F95               	movwf	(main@max+7)& (0+255),b
   788   00072C  0E00               	movlw	0
   789   00072E  6F94               	movwf	(main@max+6)& (0+255),b
   790   000730                     
   791                           ; BSR set to: 0
   792                           ;mainfinal.c: 46:     ambient.red = 0;
   793   000730  0E00               	movlw	0
   794   000732  6F97               	movwf	(main@ambient+1)& (0+255),b
   795   000734  0E00               	movlw	0
   796   000736  6F96               	movwf	main@ambient& (0+255),b
   797   000738                     
   798                           ; BSR set to: 0
   799                           ;mainfinal.c: 47:     ambient.blue = 0;
   800   000738  0E00               	movlw	0
   801   00073A  6F99               	movwf	(main@ambient+3)& (0+255),b
   802   00073C  0E00               	movlw	0
   803   00073E  6F98               	movwf	(main@ambient+2)& (0+255),b
   804   000740                     
   805                           ; BSR set to: 0
   806                           ;mainfinal.c: 48:     ambient.green = 0;
   807   000740  0E00               	movlw	0
   808   000742  6F9B               	movwf	(main@ambient+5)& (0+255),b
   809   000744  0E00               	movlw	0
   810   000746  6F9A               	movwf	(main@ambient+4)& (0+255),b
   811   000748                     
   812                           ; BSR set to: 0
   813                           ;mainfinal.c: 49:     ambient.clear = 0;
   814   000748  0E00               	movlw	0
   815   00074A  6F9D               	movwf	(main@ambient+7)& (0+255),b
   816   00074C  0E00               	movlw	0
   817   00074E  6F9C               	movwf	(main@ambient+6)& (0+255),b
   818   000750                     
   819                           ; BSR set to: 0
   820                           ;mainfinal.c: 51:     LATFbits.LATF7 = 1;
   821   000750  8E7E               	bsf	126,7,c	;volatile
   822   000752                     
   823                           ; BSR set to: 0
   824                           ;mainfinal.c: 52:     LATGbits.LATG1 = 1;
   825   000752  827F               	bsf	127,1,c	;volatile
   826   000754                     
   827                           ; BSR set to: 0
   828                           ;mainfinal.c: 53:     LATAbits.LATA4 = 1;
   829   000754  8879               	bsf	121,4,c	;volatile
   830   000756                     
   831                           ; BSR set to: 0
   832                           ;mainfinal.c: 55:     TRISDbits.TRISD3 = 0;
   833   000756  9684               	bcf	132,3,c	;volatile
   834   000758                     
   835                           ; BSR set to: 0
   836                           ;mainfinal.c: 56:     LATDbits.LATD3 = 0;
   837   000758  967C               	bcf	124,3,c	;volatile
   838   00075A                     
   839                           ; BSR set to: 0
   840                           ;mainfinal.c: 58:     TRISFbits.TRISF2 = 1;
   841   00075A  8486               	bsf	134,2,c	;volatile
   842   00075C                     
   843                           ; BSR set to: 0
   844                           ;mainfinal.c: 59:     ANSELFbits.ANSELF2=0;
   845   00075C  010E               	movlb	14	; () banked
   846   00075E  95B4               	bcf	180,2,b	;volatile
   847   000760                     
   848                           ; BSR set to: 14
   849                           ;mainfinal.c: 60:     LATDbits.LATD7 = 0;
   850   000760  9E7C               	bcf	124,7,c	;volatile
   851   000762                     
   852                           ; BSR set to: 14
   853                           ;mainfinal.c: 61:     TRISDbits.TRISD7 = 0;
   854   000762  9E84               	bcf	132,7,c	;volatile
   855   000764                     
   856                           ; BSR set to: 14
   857                           ;mainfinal.c: 69:     ADC_init();
   858   000764  EC06  F014         	call	_ADC_init	;wreg free
   859   000768                     
   860                           ;mainfinal.c: 70:     if (ADC_getval()<250){LATDbits.LATD2 = 1;}
   861   000768  ECE9  F013         	call	_ADC_getval	;wreg free
   862   00076C  5002               	movf	(?_ADC_getval+1)^0,w,c
   863   00076E  E107               	bnz	u3181
   864   000770  0EFA               	movlw	250
   865   000772  5C01               	subwf	?_ADC_getval^0,w,c
   866   000774  B0D8               	btfsc	status,0,c
   867   000776  EFBF  F003         	goto	u3181
   868   00077A  EFC1  F003         	goto	u3180
   869   00077E                     u3181:
   870   00077E  EFC2  F003         	goto	l334
   871   000782                     u3180:
   872   000782  847C               	bsf	124,2,c	;volatile
   873   000784                     l334:
   874                           
   875                           ;mainfinal.c: 74:     LATHbits.LATH1=0;
   876   000784  9280               	bcf	128,1,c	;volatile
   877                           
   878                           ;mainfinal.c: 75:     TRISHbits.TRISH1 = 0;
   879   000786  9288               	bcf	136,1,c	;volatile
   880                           
   881                           ;mainfinal.c: 77:     LATDbits.LATD3=0;
   882   000788  967C               	bcf	124,3,c	;volatile
   883                           
   884                           ;mainfinal.c: 78:     TRISDbits.TRISD3 = 0;
   885   00078A  9684               	bcf	132,3,c	;volatile
   886                           
   887                           ;mainfinal.c: 80:     LATDbits.LATD4=0;
   888   00078C  987C               	bcf	124,4,c	;volatile
   889                           
   890                           ;mainfinal.c: 81:     TRISDbits.TRISD4 = 0;
   891   00078E  9884               	bcf	132,4,c	;volatile
   892   000790                     
   893                           ;mainfinal.c: 85:     struct DC_motor motorL, motorR;;mainfinal.c: 87:     motorR.power 
      +                          = 0;
   894   000790  0E00               	movlw	0
   895   000792  0100               	movlb	0	; () banked
   896   000794  6F85               	movwf	main@motorR& (0+255),b
   897                           
   898                           ;mainfinal.c: 88:     motorL.direction = 1;
   899   000796  0E01               	movlw	1
   900   000798  6F7D               	movwf	(main@motorL+1)& (0+255),b
   901   00079A                     
   902                           ; BSR set to: 0
   903                           ;mainfinal.c: 89:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   904   00079A  0EAA               	movlw	170
   905   00079C  6F81               	movwf	(main@motorL+5)& (0+255),b
   906   00079E  0E0F               	movlw	15
   907   0007A0  6F82               	movwf	(main@motorL+6)& (0+255),b
   908   0007A2                     
   909                           ; BSR set to: 0
   910                           ;mainfinal.c: 90:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   911   0007A2  0EA6               	movlw	166
   912   0007A4  6F83               	movwf	(main@motorL+7)& (0+255),b
   913   0007A6  0E0F               	movlw	15
   914   0007A8  6F84               	movwf	(main@motorL+8)& (0+255),b
   915   0007AA                     
   916                           ; BSR set to: 0
   917                           ;mainfinal.c: 91:     motorL.PWMperiod=PWMcycle;
   918   0007AA  0E00               	movlw	0
   919   0007AC  6F80               	movwf	(main@motorL+4)& (0+255),b
   920   0007AE  0EC7               	movlw	199
   921   0007B0  6F7F               	movwf	(main@motorL+3)& (0+255),b
   922                           
   923                           ;mainfinal.c: 93:     motorL.power = 0;
   924   0007B2  0E00               	movlw	0
   925   0007B4  6F7C               	movwf	main@motorL& (0+255),b
   926                           
   927                           ;mainfinal.c: 94:     motorR.direction = 1;
   928   0007B6  0E01               	movlw	1
   929   0007B8  6F86               	movwf	(main@motorR+1)& (0+255),b
   930   0007BA                     
   931                           ; BSR set to: 0
   932                           ;mainfinal.c: 95:     motorR.PWMperiod=PWMcycle;
   933   0007BA  0E00               	movlw	0
   934   0007BC  6F89               	movwf	(main@motorR+4)& (0+255),b
   935   0007BE  0EC7               	movlw	199
   936   0007C0  6F88               	movwf	(main@motorR+3)& (0+255),b
   937   0007C2                     
   938                           ; BSR set to: 0
   939                           ;mainfinal.c: 96:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
   940   0007C2  0E25               	movlw	37
   941   0007C4  6F8A               	movwf	(main@motorR+5)& (0+255),b
   942   0007C6  0E0F               	movlw	15
   943   0007C8  6F8B               	movwf	(main@motorR+6)& (0+255),b
   944   0007CA                     
   945                           ; BSR set to: 0
   946                           ;mainfinal.c: 97:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
   947   0007CA  0E21               	movlw	33
   948   0007CC  6F8C               	movwf	(main@motorR+7)& (0+255),b
   949   0007CE  0E0F               	movlw	15
   950   0007D0  6F8D               	movwf	(main@motorR+8)& (0+255),b
   951   0007D2                     
   952                           ; BSR set to: 0
   953                           ;mainfinal.c: 104:     TRISFbits.TRISF2 = 1;
   954   0007D2  8486               	bsf	134,2,c	;volatile
   955   0007D4                     
   956                           ; BSR set to: 0
   957                           ;mainfinal.c: 105:     ANSELFbits.ANSELF2=0;
   958   0007D4  010E               	movlb	14	; () banked
   959   0007D6  95B4               	bcf	180,2,b	;volatile
   960   0007D8                     
   961                           ; BSR set to: 14
   962                           ;mainfinal.c: 106:     LATDbits.LATD7 = 0;
   963   0007D8  9E7C               	bcf	124,7,c	;volatile
   964   0007DA                     
   965                           ; BSR set to: 14
   966                           ;mainfinal.c: 107:     TRISDbits.TRISD7 = 0;
   967   0007DA  9E84               	bcf	132,7,c	;volatile
   968   0007DC                     
   969                           ; BSR set to: 14
   970                           ;mainfinal.c: 110:     TRISFbits.TRISF3 = 1;
   971   0007DC  8686               	bsf	134,3,c	;volatile
   972   0007DE                     
   973                           ; BSR set to: 14
   974                           ;mainfinal.c: 111:     ANSELFbits.ANSELF3 = 0;
   975   0007DE  97B4               	bcf	180,3,b	;volatile
   976   0007E0                     
   977                           ; BSR set to: 14
   978                           ;mainfinal.c: 112:     LATHbits.LATH3 = 0;
   979   0007E0  9680               	bcf	128,3,c	;volatile
   980   0007E2                     
   981                           ; BSR set to: 14
   982                           ;mainfinal.c: 113:     TRISHbits.TRISH3 = 0;
   983   0007E2  9688               	bcf	136,3,c	;volatile
   984   0007E4                     l335:
   985   0007E4  B48E               	btfsc	142,2,c	;volatile
   986   0007E6  EFF7  F003         	goto	u3191
   987   0007EA  EFF9  F003         	goto	u3190
   988   0007EE                     u3191:
   989   0007EE  EFF2  F003         	goto	l335
   990   0007F2                     u3190:
   991   0007F2                     
   992                           ;mainfinal.c: 118:     LATDbits.LATD7 = 1;
   993   0007F2  8E7C               	bsf	124,7,c	;volatile
   994   0007F4                     
   995                           ;mainfinal.c: 119:     max.red = color_read_Red();
   996   0007F4  EC93  F012         	call	_color_read_Red	;wreg free
   997   0007F8  C005  F08E         	movff	?_color_read_Red,main@max
   998   0007FC  C006  F08F         	movff	?_color_read_Red+1,main@max+1
   999                           
  1000                           ;mainfinal.c: 120:     max.blue = color_read_Blue();
  1001   000800  EC0B  F013         	call	_color_read_Blue	;wreg free
  1002   000804  C005  F090         	movff	?_color_read_Blue,main@max+2
  1003   000808  C006  F091         	movff	?_color_read_Blue+1,main@max+3
  1004                           
  1005                           ;mainfinal.c: 121:     max.green = color_read_Green();
  1006   00080C  ECBB  F012         	call	_color_read_Green	;wreg free
  1007   000810  C005  F092         	movff	?_color_read_Green,main@max+4
  1008   000814  C006  F093         	movff	?_color_read_Green+1,main@max+5
  1009                           
  1010                           ;mainfinal.c: 122:     max.clear = color_read_Clear();
  1011   000818  ECE3  F012         	call	_color_read_Clear	;wreg free
  1012   00081C  C005  F094         	movff	?_color_read_Clear,main@max+6
  1013   000820  C006  F095         	movff	?_color_read_Clear+1,main@max+7
  1014   000824                     
  1015                           ;mainfinal.c: 123:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1016   000824  0E29               	movlw	41
  1017   000826  6E4D               	movwf	(??_main+1)^0,c
  1018   000828  0E96               	movlw	150
  1019   00082A  6E4C               	movwf	??_main^0,c
  1020   00082C  0E7F               	movlw	127
  1021   00082E                     u3337:
  1022   00082E  2EE8               	decfsz	wreg,f,c
  1023   000830  D7FE               	bra	u3337
  1024   000832  2E4C               	decfsz	??_main^0,f,c
  1025   000834  D7FC               	bra	u3337
  1026   000836  2E4D               	decfsz	(??_main+1)^0,f,c
  1027   000838  D7FA               	bra	u3337
  1028   00083A  F000               	nop	
  1029   00083C                     
  1030                           ;mainfinal.c: 124:     LATDbits.LATD7 = 0;
  1031   00083C  9E7C               	bcf	124,7,c	;volatile
  1032   00083E                     l338:
  1033   00083E  B68E               	btfsc	142,3,c	;volatile
  1034   000840  EF24  F004         	goto	u3201
  1035   000844  EF26  F004         	goto	u3200
  1036   000848                     u3201:
  1037   000848  EF1F  F004         	goto	l338
  1038   00084C                     u3200:
  1039   00084C                     
  1040                           ;mainfinal.c: 130:     LATHbits.LATH3 = 1;
  1041   00084C  8680               	bsf	128,3,c	;volatile
  1042   00084E                     
  1043                           ;mainfinal.c: 131:     ambient.red = color_read_Red();
  1044   00084E  EC93  F012         	call	_color_read_Red	;wreg free
  1045   000852  C005  F096         	movff	?_color_read_Red,main@ambient
  1046   000856  C006  F097         	movff	?_color_read_Red+1,main@ambient+1
  1047                           
  1048                           ;mainfinal.c: 132:     ambient.blue = color_read_Blue();
  1049   00085A  EC0B  F013         	call	_color_read_Blue	;wreg free
  1050   00085E  C005  F098         	movff	?_color_read_Blue,main@ambient+2
  1051   000862  C006  F099         	movff	?_color_read_Blue+1,main@ambient+3
  1052                           
  1053                           ;mainfinal.c: 133:     ambient.green = color_read_Green();
  1054   000866  ECBB  F012         	call	_color_read_Green	;wreg free
  1055   00086A  C005  F09A         	movff	?_color_read_Green,main@ambient+4
  1056   00086E  C006  F09B         	movff	?_color_read_Green+1,main@ambient+5
  1057                           
  1058                           ;mainfinal.c: 134:     ambient.clear = color_read_Clear();
  1059   000872  ECE3  F012         	call	_color_read_Clear	;wreg free
  1060   000876  C005  F09C         	movff	?_color_read_Clear,main@ambient+6
  1061   00087A  C006  F09D         	movff	?_color_read_Clear+1,main@ambient+7
  1062   00087E                     
  1063                           ;mainfinal.c: 135:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1064   00087E  0E29               	movlw	41
  1065   000880  6E4D               	movwf	(??_main+1)^0,c
  1066   000882  0E96               	movlw	150
  1067   000884  6E4C               	movwf	??_main^0,c
  1068   000886  0E7F               	movlw	127
  1069   000888                     u3347:
  1070   000888  2EE8               	decfsz	wreg,f,c
  1071   00088A  D7FE               	bra	u3347
  1072   00088C  2E4C               	decfsz	??_main^0,f,c
  1073   00088E  D7FC               	bra	u3347
  1074   000890  2E4D               	decfsz	(??_main+1)^0,f,c
  1075   000892  D7FA               	bra	u3347
  1076   000894  F000               	nop	
  1077   000896                     
  1078                           ;mainfinal.c: 136:     LATHbits.LATH3 = 0;
  1079   000896  9680               	bcf	128,3,c	;volatile
  1080   000898                     l3479:
  1081                           
  1082                           ;mainfinal.c: 140:     fullSpeedAhead(&motorL,&motorR, 1);
  1083   000898  0E7C               	movlw	low main@motorL
  1084   00089A  6E19               	movwf	fullSpeedAhead@mL^0,c
  1085   00089C  0E00               	movlw	high main@motorL
  1086   00089E  6E1A               	movwf	(fullSpeedAhead@mL+1)^0,c
  1087   0008A0  0E85               	movlw	low main@motorR
  1088   0008A2  6E1B               	movwf	fullSpeedAhead@mR^0,c
  1089   0008A4  0E00               	movlw	high main@motorR
  1090   0008A6  6E1C               	movwf	(fullSpeedAhead@mR+1)^0,c
  1091   0008A8  0E01               	movlw	1
  1092   0008AA  6E1D               	movwf	fullSpeedAhead@dir^0,c
  1093   0008AC  EC50  F010         	call	_fullSpeedAhead	;wreg free
  1094   0008B0                     
  1095                           ;mainfinal.c: 142:     reading.clear = (color_read_Clear()-ambient.clear)/(max.clear/100
      +                          0+1);
  1096   0008B0  0E03               	movlw	3
  1097   0008B2  6E0F               	movwf	(___lwdiv@divisor+1)^0,c
  1098   0008B4  0EE8               	movlw	232
  1099   0008B6  6E0E               	movwf	___lwdiv@divisor^0,c
  1100   0008B8  C094  F00C         	movff	main@max+6,___lwdiv@dividend
  1101   0008BC  C095  F00D         	movff	main@max+7,___lwdiv@dividend+1
  1102   0008C0  EC20  F012         	call	___lwdiv	;wreg free
  1103   0008C4  0E01               	movlw	1
  1104   0008C6  240C               	addwf	?___lwdiv^0,w,c
  1105   0008C8  0100               	movlb	0	; () banked
  1106   0008CA  6F7A               	movwf	_main$2859& (0+255),b
  1107   0008CC  0E00               	movlw	0
  1108   0008CE  200D               	addwfc	(?___lwdiv+1)^0,w,c
  1109   0008D0  6F7B               	movwf	(_main$2859+1)& (0+255),b
  1110   0008D2                     
  1111                           ; BSR set to: 0
  1112                           ;mainfinal.c: 142:     reading.clear = (color_read_Clear()-ambient.clear)/(max.clear/100
      +                          0+1);
  1113   0008D2  ECE3  F012         	call	_color_read_Clear	;wreg free
  1114   0008D6  0100               	movlb	0	; () banked
  1115   0008D8  519C               	movf	(main@ambient+6)& (0+255),w,b
  1116   0008DA  5C05               	subwf	?_color_read_Clear^0,w,c
  1117   0008DC  6E0C               	movwf	___lwdiv@dividend^0,c
  1118   0008DE  519D               	movf	(main@ambient+7)& (0+255),w,b
  1119   0008E0  5806               	subwfb	(?_color_read_Clear+1)^0,w,c
  1120   0008E2  6E0D               	movwf	(___lwdiv@dividend+1)^0,c
  1121   0008E4  C07A  F00E         	movff	_main$2859,___lwdiv@divisor
  1122   0008E8  C07B  F00F         	movff	_main$2859+1,___lwdiv@divisor+1
  1123   0008EC  EC20  F012         	call	___lwdiv	;wreg free
  1124   0008F0  C00C  F0A4         	movff	?___lwdiv,main@reading+6
  1125   0008F4  C00D  F0A5         	movff	?___lwdiv+1,main@reading+7
  1126   0008F8                     
  1127                           ;mainfinal.c: 144:     if (reading.clear < 1200 && reading.clear > 30) {
  1128   0008F8  0EB0               	movlw	176
  1129   0008FA  0100               	movlb	0	; () banked
  1130   0008FC  5DA4               	subwf	(main@reading+6)& (0+255),w,b
  1131   0008FE  0E04               	movlw	4
  1132   000900  59A5               	subwfb	(main@reading+7)& (0+255),w,b
  1133   000902  B0D8               	btfsc	status,0,c
  1134   000904  EF86  F004         	goto	u3211
  1135   000908  EF88  F004         	goto	u3210
  1136   00090C                     u3211:
  1137   00090C  EF4C  F004         	goto	l3479
  1138   000910                     u3210:
  1139   000910                     
  1140                           ; BSR set to: 0
  1141   000910  51A5               	movf	(main@reading+7)& (0+255),w,b
  1142   000912  E109               	bnz	u3220
  1143   000914  0E1F               	movlw	31
  1144   000916  5DA4               	subwf	(main@reading+6)& (0+255),w,b
  1145   000918  A0D8               	btfss	status,0,c
  1146   00091A  EF91  F004         	goto	u3221
  1147   00091E  EF93  F004         	goto	u3220
  1148   000922                     u3221:
  1149   000922  EF4C  F004         	goto	l3479
  1150   000926                     u3220:
  1151   000926                     
  1152                           ; BSR set to: 0
  1153                           ;mainfinal.c: 147:     savetime(timercount);
  1154   000926  C052  F001         	movff	_timercount,savetime@timercount
  1155   00092A  C053  F002         	movff	_timercount+1,savetime@timercount+1
  1156   00092E  ECC9  F013         	call	_savetime	;wreg free
  1157   000932                     
  1158                           ;mainfinal.c: 148:     savepath(1);
  1159   000932  0E01               	movlw	1
  1160   000934  EC13  F014         	call	_savepath
  1161   000938                     
  1162                           ;mainfinal.c: 151:     smallmovement(&motorL,&motorR, 1);
  1163   000938  0E7C               	movlw	low main@motorL
  1164   00093A  6E1E               	movwf	smallmovement@mL^0,c
  1165   00093C  0E00               	movlw	high main@motorL
  1166   00093E  6E1F               	movwf	(smallmovement@mL+1)^0,c
  1167   000940  0E85               	movlw	low main@motorR
  1168   000942  6E20               	movwf	smallmovement@mR^0,c
  1169   000944  0E00               	movlw	high main@motorR
  1170   000946  6E21               	movwf	(smallmovement@mR+1)^0,c
  1171   000948  0E01               	movlw	1
  1172   00094A  6E22               	movwf	smallmovement@dir^0,c
  1173   00094C  ECB6  F010         	call	_smallmovement	;wreg free
  1174   000950                     
  1175                           ;mainfinal.c: 152:     _delay((unsigned long)((200)*(64000000/4000.0)));
  1176   000950  0E11               	movlw	17
  1177   000952  6E4D               	movwf	(??_main+1)^0,c
  1178   000954  0E3C               	movlw	60
  1179   000956  6E4C               	movwf	??_main^0,c
  1180   000958  0ECB               	movlw	203
  1181   00095A                     u3357:
  1182   00095A  2EE8               	decfsz	wreg,f,c
  1183   00095C  D7FE               	bra	u3357
  1184   00095E  2E4C               	decfsz	??_main^0,f,c
  1185   000960  D7FC               	bra	u3357
  1186   000962  2E4D               	decfsz	(??_main+1)^0,f,c
  1187   000964  D7FA               	bra	u3357
  1188   000966  F000               	nop	
  1189   000968                     
  1190                           ;mainfinal.c: 153:     smallmovement(&motorL,&motorR, 1);
  1191   000968  0E7C               	movlw	low main@motorL
  1192   00096A  6E1E               	movwf	smallmovement@mL^0,c
  1193   00096C  0E00               	movlw	high main@motorL
  1194   00096E  6E1F               	movwf	(smallmovement@mL+1)^0,c
  1195   000970  0E85               	movlw	low main@motorR
  1196   000972  6E20               	movwf	smallmovement@mR^0,c
  1197   000974  0E00               	movlw	high main@motorR
  1198   000976  6E21               	movwf	(smallmovement@mR+1)^0,c
  1199   000978  0E01               	movlw	1
  1200   00097A  6E22               	movwf	smallmovement@dir^0,c
  1201   00097C  ECB6  F010         	call	_smallmovement	;wreg free
  1202   000980                     
  1203                           ;mainfinal.c: 155:     _delay((unsigned long)((200)*(64000000/4000.0)));
  1204   000980  0E11               	movlw	17
  1205   000982  6E4D               	movwf	(??_main+1)^0,c
  1206   000984  0E3C               	movlw	60
  1207   000986  6E4C               	movwf	??_main^0,c
  1208   000988  0ECB               	movlw	203
  1209   00098A                     u3367:
  1210   00098A  2EE8               	decfsz	wreg,f,c
  1211   00098C  D7FE               	bra	u3367
  1212   00098E  2E4C               	decfsz	??_main^0,f,c
  1213   000990  D7FC               	bra	u3367
  1214   000992  2E4D               	decfsz	(??_main+1)^0,f,c
  1215   000994  D7FA               	bra	u3367
  1216   000996  F000               	nop	
  1217   000998                     
  1218                           ;mainfinal.c: 158:     reading.red = (color_read_Red()-ambient.red)/(max.red/1000+1);
  1219   000998  0E03               	movlw	3
  1220   00099A  6E0F               	movwf	(___lwdiv@divisor+1)^0,c
  1221   00099C  0EE8               	movlw	232
  1222   00099E  6E0E               	movwf	___lwdiv@divisor^0,c
  1223   0009A0  C08E  F00C         	movff	main@max,___lwdiv@dividend
  1224   0009A4  C08F  F00D         	movff	main@max+1,___lwdiv@dividend+1
  1225   0009A8  EC20  F012         	call	___lwdiv	;wreg free
  1226   0009AC  0E01               	movlw	1
  1227   0009AE  240C               	addwf	?___lwdiv^0,w,c
  1228   0009B0  0100               	movlb	0	; () banked
  1229   0009B2  6F7A               	movwf	_main$2859& (0+255),b
  1230   0009B4  0E00               	movlw	0
  1231   0009B6  200D               	addwfc	(?___lwdiv+1)^0,w,c
  1232   0009B8  6F7B               	movwf	(_main$2859+1)& (0+255),b
  1233   0009BA                     
  1234                           ; BSR set to: 0
  1235                           ;mainfinal.c: 158:     reading.red = (color_read_Red()-ambient.red)/(max.red/1000+1);
  1236   0009BA  EC93  F012         	call	_color_read_Red	;wreg free
  1237   0009BE  0100               	movlb	0	; () banked
  1238   0009C0  5196               	movf	main@ambient& (0+255),w,b
  1239   0009C2  5C05               	subwf	?_color_read_Red^0,w,c
  1240   0009C4  6E0C               	movwf	___lwdiv@dividend^0,c
  1241   0009C6  5197               	movf	(main@ambient+1)& (0+255),w,b
  1242   0009C8  5806               	subwfb	(?_color_read_Red+1)^0,w,c
  1243   0009CA  6E0D               	movwf	(___lwdiv@dividend+1)^0,c
  1244   0009CC  C07A  F00E         	movff	_main$2859,___lwdiv@divisor
  1245   0009D0  C07B  F00F         	movff	_main$2859+1,___lwdiv@divisor+1
  1246   0009D4  EC20  F012         	call	___lwdiv	;wreg free
  1247   0009D8  C00C  F09E         	movff	?___lwdiv,main@reading
  1248   0009DC  C00D  F09F         	movff	?___lwdiv+1,main@reading+1
  1249   0009E0                     
  1250                           ;mainfinal.c: 159:     reading.blue = (color_read_Blue()-ambient.blue)/(max.blue/1000+1)
      +                          ;
  1251   0009E0  0E03               	movlw	3
  1252   0009E2  6E0F               	movwf	(___lwdiv@divisor+1)^0,c
  1253   0009E4  0EE8               	movlw	232
  1254   0009E6  6E0E               	movwf	___lwdiv@divisor^0,c
  1255   0009E8  C090  F00C         	movff	main@max+2,___lwdiv@dividend
  1256   0009EC  C091  F00D         	movff	main@max+3,___lwdiv@dividend+1
  1257   0009F0  EC20  F012         	call	___lwdiv	;wreg free
  1258   0009F4  0E01               	movlw	1
  1259   0009F6  240C               	addwf	?___lwdiv^0,w,c
  1260   0009F8  0100               	movlb	0	; () banked
  1261   0009FA  6F7A               	movwf	_main$2859& (0+255),b
  1262   0009FC  0E00               	movlw	0
  1263   0009FE  200D               	addwfc	(?___lwdiv+1)^0,w,c
  1264   000A00  6F7B               	movwf	(_main$2859+1)& (0+255),b
  1265   000A02                     
  1266                           ; BSR set to: 0
  1267                           ;mainfinal.c: 159:     reading.blue = (color_read_Blue()-ambient.blue)/(max.blue/1000+1)
      +                          ;
  1268   000A02  EC0B  F013         	call	_color_read_Blue	;wreg free
  1269   000A06  0100               	movlb	0	; () banked
  1270   000A08  5198               	movf	(main@ambient+2)& (0+255),w,b
  1271   000A0A  5C05               	subwf	?_color_read_Blue^0,w,c
  1272   000A0C  6E0C               	movwf	___lwdiv@dividend^0,c
  1273   000A0E  5199               	movf	(main@ambient+3)& (0+255),w,b
  1274   000A10  5806               	subwfb	(?_color_read_Blue+1)^0,w,c
  1275   000A12  6E0D               	movwf	(___lwdiv@dividend+1)^0,c
  1276   000A14  C07A  F00E         	movff	_main$2859,___lwdiv@divisor
  1277   000A18  C07B  F00F         	movff	_main$2859+1,___lwdiv@divisor+1
  1278   000A1C  EC20  F012         	call	___lwdiv	;wreg free
  1279   000A20  C00C  F0A0         	movff	?___lwdiv,main@reading+2
  1280   000A24  C00D  F0A1         	movff	?___lwdiv+1,main@reading+3
  1281   000A28                     
  1282                           ;mainfinal.c: 160:     reading.green = (color_read_Green()-ambient.green)/(max.green/100
      +                          0+1);
  1283   000A28  0E03               	movlw	3
  1284   000A2A  6E0F               	movwf	(___lwdiv@divisor+1)^0,c
  1285   000A2C  0EE8               	movlw	232
  1286   000A2E  6E0E               	movwf	___lwdiv@divisor^0,c
  1287   000A30  C092  F00C         	movff	main@max+4,___lwdiv@dividend
  1288   000A34  C093  F00D         	movff	main@max+5,___lwdiv@dividend+1
  1289   000A38  EC20  F012         	call	___lwdiv	;wreg free
  1290   000A3C  0E01               	movlw	1
  1291   000A3E  240C               	addwf	?___lwdiv^0,w,c
  1292   000A40  0100               	movlb	0	; () banked
  1293   000A42  6F7A               	movwf	_main$2859& (0+255),b
  1294   000A44  0E00               	movlw	0
  1295   000A46  200D               	addwfc	(?___lwdiv+1)^0,w,c
  1296   000A48  6F7B               	movwf	(_main$2859+1)& (0+255),b
  1297   000A4A                     
  1298                           ; BSR set to: 0
  1299                           ;mainfinal.c: 160:     reading.green = (color_read_Green()-ambient.green)/(max.green/100
      +                          0+1);
  1300   000A4A  ECBB  F012         	call	_color_read_Green	;wreg free
  1301   000A4E  0100               	movlb	0	; () banked
  1302   000A50  519A               	movf	(main@ambient+4)& (0+255),w,b
  1303   000A52  5C05               	subwf	?_color_read_Green^0,w,c
  1304   000A54  6E0C               	movwf	___lwdiv@dividend^0,c
  1305   000A56  519B               	movf	(main@ambient+5)& (0+255),w,b
  1306   000A58  5806               	subwfb	(?_color_read_Green+1)^0,w,c
  1307   000A5A  6E0D               	movwf	(___lwdiv@dividend+1)^0,c
  1308   000A5C  C07A  F00E         	movff	_main$2859,___lwdiv@divisor
  1309   000A60  C07B  F00F         	movff	_main$2859+1,___lwdiv@divisor+1
  1310   000A64  EC20  F012         	call	___lwdiv	;wreg free
  1311   000A68  C00C  F0A2         	movff	?___lwdiv,main@reading+4
  1312   000A6C  C00D  F0A3         	movff	?___lwdiv+1,main@reading+5
  1313   000A70                     
  1314                           ;mainfinal.c: 161:     reading.clear = (color_read_Clear()-ambient.clear)/(max.clear/100
      +                          0+1);
  1315   000A70  0E03               	movlw	3
  1316   000A72  6E0F               	movwf	(___lwdiv@divisor+1)^0,c
  1317   000A74  0EE8               	movlw	232
  1318   000A76  6E0E               	movwf	___lwdiv@divisor^0,c
  1319   000A78  C094  F00C         	movff	main@max+6,___lwdiv@dividend
  1320   000A7C  C095  F00D         	movff	main@max+7,___lwdiv@dividend+1
  1321   000A80  EC20  F012         	call	___lwdiv	;wreg free
  1322   000A84  0E01               	movlw	1
  1323   000A86  240C               	addwf	?___lwdiv^0,w,c
  1324   000A88  0100               	movlb	0	; () banked
  1325   000A8A  6F7A               	movwf	_main$2859& (0+255),b
  1326   000A8C  0E00               	movlw	0
  1327   000A8E  200D               	addwfc	(?___lwdiv+1)^0,w,c
  1328   000A90  6F7B               	movwf	(_main$2859+1)& (0+255),b
  1329   000A92                     
  1330                           ; BSR set to: 0
  1331                           ;mainfinal.c: 161:     reading.clear = (color_read_Clear()-ambient.clear)/(max.clear/100
      +                          0+1);
  1332   000A92  ECE3  F012         	call	_color_read_Clear	;wreg free
  1333   000A96  0100               	movlb	0	; () banked
  1334   000A98  519C               	movf	(main@ambient+6)& (0+255),w,b
  1335   000A9A  5C05               	subwf	?_color_read_Clear^0,w,c
  1336   000A9C  6E0C               	movwf	___lwdiv@dividend^0,c
  1337   000A9E  519D               	movf	(main@ambient+7)& (0+255),w,b
  1338   000AA0  5806               	subwfb	(?_color_read_Clear+1)^0,w,c
  1339   000AA2  6E0D               	movwf	(___lwdiv@dividend+1)^0,c
  1340   000AA4  C07A  F00E         	movff	_main$2859,___lwdiv@divisor
  1341   000AA8  C07B  F00F         	movff	_main$2859+1,___lwdiv@divisor+1
  1342   000AAC  EC20  F012         	call	___lwdiv	;wreg free
  1343   000AB0  C00C  F0A4         	movff	?___lwdiv,main@reading+6
  1344   000AB4  C00D  F0A5         	movff	?___lwdiv+1,main@reading+7
  1345   000AB8                     
  1346                           ;mainfinal.c: 163:     step = decide_color(&reading);
  1347   000AB8  0E9E               	movlw	low main@reading
  1348   000ABA  6E28               	movwf	decide_color@mx^0,c
  1349   000ABC  0E00               	movlw	high main@reading
  1350   000ABE  6E29               	movwf	(decide_color@mx+1)^0,c
  1351   000AC0  EC1F  F000         	call	_decide_color	;wreg free
  1352   000AC4  0100               	movlb	0	; () banked
  1353   000AC6  6FA6               	movwf	_step& (0+255),b
  1354   000AC8                     
  1355                           ; BSR set to: 0
  1356                           ;mainfinal.c: 165:     smallmovement(&motorL,&motorR, 0);
  1357   000AC8  0E7C               	movlw	low main@motorL
  1358   000ACA  6E1E               	movwf	smallmovement@mL^0,c
  1359   000ACC  0E00               	movlw	high main@motorL
  1360   000ACE  6E1F               	movwf	(smallmovement@mL+1)^0,c
  1361   000AD0  0E85               	movlw	low main@motorR
  1362   000AD2  6E20               	movwf	smallmovement@mR^0,c
  1363   000AD4  0E00               	movlw	high main@motorR
  1364   000AD6  6E21               	movwf	(smallmovement@mR+1)^0,c
  1365   000AD8  0E00               	movlw	0
  1366   000ADA  6E22               	movwf	smallmovement@dir^0,c
  1367   000ADC  ECB6  F010         	call	_smallmovement	;wreg free
  1368   000AE0                     
  1369                           ;mainfinal.c: 167:     if (step<=9)carryoutstep(motorL, motorR, &reading, &max, &ambient
      +                          , step);
  1370   000AE0  0E0A               	movlw	10
  1371   000AE2  0100               	movlb	0	; () banked
  1372   000AE4  61A6               	cpfslt	_step& (0+255),b
  1373   000AE6  EF77  F005         	goto	u3231
  1374   000AEA  EF79  F005         	goto	u3230
  1375   000AEE                     u3231:
  1376   000AEE  EF9D  F005         	goto	l3525
  1377   000AF2                     u3230:
  1378   000AF2                     l3523:
  1379                           
  1380                           ; BSR set to: 0
  1381   000AF2  EE20  F07C         	lfsr	2,main@motorL
  1382   000AF6  EE00  F060         	lfsr	0,carryoutstep@motorL
  1383   000AFA  0E08               	movlw	8
  1384   000AFC                     u3241:
  1385   000AFC  CFDB FFEB          	movff	plusw2,plusw0
  1386   000B00  06E8               	decf	wreg,f,c
  1387   000B02  E2FC               	bc	u3241
  1388   000B04  EE20  F085         	lfsr	2,main@motorR
  1389   000B08  EE00  F069         	lfsr	0,carryoutstep@motorR
  1390   000B0C  0E08               	movlw	8
  1391   000B0E                     u3251:
  1392   000B0E  CFDB FFEB          	movff	plusw2,plusw0
  1393   000B12  06E8               	decf	wreg,f,c
  1394   000B14  E2FC               	bc	u3251
  1395   000B16  0E9E               	movlw	low main@reading
  1396   000B18  6F72               	movwf	carryoutstep@read& (0+255),b
  1397   000B1A  0E00               	movlw	high main@reading
  1398   000B1C  6F73               	movwf	(carryoutstep@read+1)& (0+255),b
  1399   000B1E  0E8E               	movlw	low main@max
  1400   000B20  6F74               	movwf	carryoutstep@mx& (0+255),b
  1401   000B22  0E00               	movlw	high main@max
  1402   000B24  6F75               	movwf	(carryoutstep@mx+1)& (0+255),b
  1403   000B26  0E96               	movlw	low main@ambient
  1404   000B28  6F76               	movwf	carryoutstep@amb& (0+255),b
  1405   000B2A  0E00               	movlw	high main@ambient
  1406   000B2C  6F77               	movwf	(carryoutstep@amb+1)& (0+255),b
  1407   000B2E  C0A6  F078         	movff	_step,carryoutstep@step
  1408   000B32  EC6A  F00A         	call	_carryoutstep	;wreg free
  1409   000B36  EF4C  F004         	goto	l3479
  1410   000B3A                     l3525:
  1411                           
  1412                           ; BSR set to: 0
  1413                           ;mainfinal.c: 172:         square(&motorL,&motorR, 1);
  1414   000B3A  0E7C               	movlw	low main@motorL
  1415   000B3C  6E1E               	movwf	square@mL^0,c
  1416   000B3E  0E00               	movlw	high main@motorL
  1417   000B40  6E1F               	movwf	(square@mL+1)^0,c
  1418   000B42  0E85               	movlw	low main@motorR
  1419   000B44  6E20               	movwf	square@mR^0,c
  1420   000B46  0E00               	movlw	high main@motorR
  1421   000B48  6E21               	movwf	(square@mR+1)^0,c
  1422   000B4A  0E01               	movlw	1
  1423   000B4C  6E22               	movwf	square@dir^0,c
  1424   000B4E  EC7A  F011         	call	_square	;wreg free
  1425   000B52                     
  1426                           ;mainfinal.c: 173:         char a = 0;
  1427   000B52  0E00               	movlw	0
  1428   000B54  0100               	movlb	0	; () banked
  1429   000B56  6F79               	movwf	main@a& (0+255),b
  1430                           
  1431                           ;mainfinal.c: 174:         while (a<20) {
  1432   000B58  EF5D  F006         	goto	l3553
  1433   000B5C                     l3529:
  1434                           
  1435                           ; BSR set to: 0
  1436                           ;mainfinal.c: 175:             _delay((unsigned long)((20)*(64000000/4000.0)));
  1437   000B5C  0E02               	movlw	2
  1438   000B5E  6E4D               	movwf	(??_main+1)^0,c
  1439   000B60  0EA0               	movlw	160
  1440   000B62  6E4C               	movwf	??_main^0,c
  1441   000B64  0E92               	movlw	146
  1442   000B66                     u3377:
  1443   000B66  2EE8               	decfsz	wreg,f,c
  1444   000B68  D7FE               	bra	u3377
  1445   000B6A  2E4C               	decfsz	??_main^0,f,c
  1446   000B6C  D7FC               	bra	u3377
  1447   000B6E  2E4D               	decfsz	(??_main+1)^0,f,c
  1448   000B70  D7FA               	bra	u3377
  1449   000B72  D000               	nop2	
  1450   000B74                     
  1451                           ;mainfinal.c: 176:         reading.red = (color_read_Red()-ambient.red)/(max.red/1000+1)
      +                          ;
  1452   000B74  0E03               	movlw	3
  1453   000B76  6E0F               	movwf	(___lwdiv@divisor+1)^0,c
  1454   000B78  0EE8               	movlw	232
  1455   000B7A  6E0E               	movwf	___lwdiv@divisor^0,c
  1456   000B7C  C08E  F00C         	movff	main@max,___lwdiv@dividend
  1457   000B80  C08F  F00D         	movff	main@max+1,___lwdiv@dividend+1
  1458   000B84  EC20  F012         	call	___lwdiv	;wreg free
  1459   000B88  0E01               	movlw	1
  1460   000B8A  240C               	addwf	?___lwdiv^0,w,c
  1461   000B8C  0100               	movlb	0	; () banked
  1462   000B8E  6F7A               	movwf	_main$2859& (0+255),b
  1463   000B90  0E00               	movlw	0
  1464   000B92  200D               	addwfc	(?___lwdiv+1)^0,w,c
  1465   000B94  6F7B               	movwf	(_main$2859+1)& (0+255),b
  1466   000B96                     
  1467                           ; BSR set to: 0
  1468                           ;mainfinal.c: 176:         reading.red = (color_read_Red()-ambient.red)/(max.red/1000+1)
      +                          ;
  1469   000B96  EC93  F012         	call	_color_read_Red	;wreg free
  1470   000B9A  0100               	movlb	0	; () banked
  1471   000B9C  5196               	movf	main@ambient& (0+255),w,b
  1472   000B9E  5C05               	subwf	?_color_read_Red^0,w,c
  1473   000BA0  6E0C               	movwf	___lwdiv@dividend^0,c
  1474   000BA2  5197               	movf	(main@ambient+1)& (0+255),w,b
  1475   000BA4  5806               	subwfb	(?_color_read_Red+1)^0,w,c
  1476   000BA6  6E0D               	movwf	(___lwdiv@dividend+1)^0,c
  1477   000BA8  C07A  F00E         	movff	_main$2859,___lwdiv@divisor
  1478   000BAC  C07B  F00F         	movff	_main$2859+1,___lwdiv@divisor+1
  1479   000BB0  EC20  F012         	call	___lwdiv	;wreg free
  1480   000BB4  C00C  F09E         	movff	?___lwdiv,main@reading
  1481   000BB8  C00D  F09F         	movff	?___lwdiv+1,main@reading+1
  1482   000BBC                     
  1483                           ;mainfinal.c: 177:         reading.blue = (color_read_Blue()-ambient.blue)/(max.blue/100
      +                          0+1);
  1484   000BBC  0E03               	movlw	3
  1485   000BBE  6E0F               	movwf	(___lwdiv@divisor+1)^0,c
  1486   000BC0  0EE8               	movlw	232
  1487   000BC2  6E0E               	movwf	___lwdiv@divisor^0,c
  1488   000BC4  C090  F00C         	movff	main@max+2,___lwdiv@dividend
  1489   000BC8  C091  F00D         	movff	main@max+3,___lwdiv@dividend+1
  1490   000BCC  EC20  F012         	call	___lwdiv	;wreg free
  1491   000BD0  0E01               	movlw	1
  1492   000BD2  240C               	addwf	?___lwdiv^0,w,c
  1493   000BD4  0100               	movlb	0	; () banked
  1494   000BD6  6F7A               	movwf	_main$2859& (0+255),b
  1495   000BD8  0E00               	movlw	0
  1496   000BDA  200D               	addwfc	(?___lwdiv+1)^0,w,c
  1497   000BDC  6F7B               	movwf	(_main$2859+1)& (0+255),b
  1498   000BDE                     
  1499                           ; BSR set to: 0
  1500                           ;mainfinal.c: 177:         reading.blue = (color_read_Blue()-ambient.blue)/(max.blue/100
      +                          0+1);
  1501   000BDE  EC0B  F013         	call	_color_read_Blue	;wreg free
  1502   000BE2  0100               	movlb	0	; () banked
  1503   000BE4  5198               	movf	(main@ambient+2)& (0+255),w,b
  1504   000BE6  5C05               	subwf	?_color_read_Blue^0,w,c
  1505   000BE8  6E0C               	movwf	___lwdiv@dividend^0,c
  1506   000BEA  5199               	movf	(main@ambient+3)& (0+255),w,b
  1507   000BEC  5806               	subwfb	(?_color_read_Blue+1)^0,w,c
  1508   000BEE  6E0D               	movwf	(___lwdiv@dividend+1)^0,c
  1509   000BF0  C07A  F00E         	movff	_main$2859,___lwdiv@divisor
  1510   000BF4  C07B  F00F         	movff	_main$2859+1,___lwdiv@divisor+1
  1511   000BF8  EC20  F012         	call	___lwdiv	;wreg free
  1512   000BFC  C00C  F0A0         	movff	?___lwdiv,main@reading+2
  1513   000C00  C00D  F0A1         	movff	?___lwdiv+1,main@reading+3
  1514   000C04                     
  1515                           ;mainfinal.c: 178:         reading.green = (color_read_Green()-ambient.green)/(max.green
      +                          /1000+1);
  1516   000C04  0E03               	movlw	3
  1517   000C06  6E0F               	movwf	(___lwdiv@divisor+1)^0,c
  1518   000C08  0EE8               	movlw	232
  1519   000C0A  6E0E               	movwf	___lwdiv@divisor^0,c
  1520   000C0C  C092  F00C         	movff	main@max+4,___lwdiv@dividend
  1521   000C10  C093  F00D         	movff	main@max+5,___lwdiv@dividend+1
  1522   000C14  EC20  F012         	call	___lwdiv	;wreg free
  1523   000C18  0E01               	movlw	1
  1524   000C1A  240C               	addwf	?___lwdiv^0,w,c
  1525   000C1C  0100               	movlb	0	; () banked
  1526   000C1E  6F7A               	movwf	_main$2859& (0+255),b
  1527   000C20  0E00               	movlw	0
  1528   000C22  200D               	addwfc	(?___lwdiv+1)^0,w,c
  1529   000C24  6F7B               	movwf	(_main$2859+1)& (0+255),b
  1530   000C26                     
  1531                           ; BSR set to: 0
  1532                           ;mainfinal.c: 178:         reading.green = (color_read_Green()-ambient.green)/(max.green
      +                          /1000+1);
  1533   000C26  ECBB  F012         	call	_color_read_Green	;wreg free
  1534   000C2A  0100               	movlb	0	; () banked
  1535   000C2C  519A               	movf	(main@ambient+4)& (0+255),w,b
  1536   000C2E  5C05               	subwf	?_color_read_Green^0,w,c
  1537   000C30  6E0C               	movwf	___lwdiv@dividend^0,c
  1538   000C32  519B               	movf	(main@ambient+5)& (0+255),w,b
  1539   000C34  5806               	subwfb	(?_color_read_Green+1)^0,w,c
  1540   000C36  6E0D               	movwf	(___lwdiv@dividend+1)^0,c
  1541   000C38  C07A  F00E         	movff	_main$2859,___lwdiv@divisor
  1542   000C3C  C07B  F00F         	movff	_main$2859+1,___lwdiv@divisor+1
  1543   000C40  EC20  F012         	call	___lwdiv	;wreg free
  1544   000C44  C00C  F0A2         	movff	?___lwdiv,main@reading+4
  1545   000C48  C00D  F0A3         	movff	?___lwdiv+1,main@reading+5
  1546   000C4C                     
  1547                           ;mainfinal.c: 179:         reading.clear = (color_read_Clear()-ambient.clear)/(max.clear
      +                          /1000+1);
  1548   000C4C  0E03               	movlw	3
  1549   000C4E  6E0F               	movwf	(___lwdiv@divisor+1)^0,c
  1550   000C50  0EE8               	movlw	232
  1551   000C52  6E0E               	movwf	___lwdiv@divisor^0,c
  1552   000C54  C094  F00C         	movff	main@max+6,___lwdiv@dividend
  1553   000C58  C095  F00D         	movff	main@max+7,___lwdiv@dividend+1
  1554   000C5C  EC20  F012         	call	___lwdiv	;wreg free
  1555   000C60  0E01               	movlw	1
  1556   000C62  240C               	addwf	?___lwdiv^0,w,c
  1557   000C64  0100               	movlb	0	; () banked
  1558   000C66  6F7A               	movwf	_main$2859& (0+255),b
  1559   000C68  0E00               	movlw	0
  1560   000C6A  200D               	addwfc	(?___lwdiv+1)^0,w,c
  1561   000C6C  6F7B               	movwf	(_main$2859+1)& (0+255),b
  1562   000C6E                     
  1563                           ; BSR set to: 0
  1564                           ;mainfinal.c: 179:         reading.clear = (color_read_Clear()-ambient.clear)/(max.clear
      +                          /1000+1);
  1565   000C6E  ECE3  F012         	call	_color_read_Clear	;wreg free
  1566   000C72  0100               	movlb	0	; () banked
  1567   000C74  519C               	movf	(main@ambient+6)& (0+255),w,b
  1568   000C76  5C05               	subwf	?_color_read_Clear^0,w,c
  1569   000C78  6E0C               	movwf	___lwdiv@dividend^0,c
  1570   000C7A  519D               	movf	(main@ambient+7)& (0+255),w,b
  1571   000C7C  5806               	subwfb	(?_color_read_Clear+1)^0,w,c
  1572   000C7E  6E0D               	movwf	(___lwdiv@dividend+1)^0,c
  1573   000C80  C07A  F00E         	movff	_main$2859,___lwdiv@divisor
  1574   000C84  C07B  F00F         	movff	_main$2859+1,___lwdiv@divisor+1
  1575   000C88  EC20  F012         	call	___lwdiv	;wreg free
  1576   000C8C  C00C  F0A4         	movff	?___lwdiv,main@reading+6
  1577   000C90  C00D  F0A5         	movff	?___lwdiv+1,main@reading+7
  1578   000C94                     
  1579                           ;mainfinal.c: 180:             if (step == 10) {step = decide_color(&reading);}
  1580   000C94  0E0A               	movlw	10
  1581   000C96  0100               	movlb	0	; () banked
  1582   000C98  19A6               	xorwf	_step& (0+255),w,b
  1583   000C9A  A4D8               	btfss	status,2,c
  1584   000C9C  EF52  F006         	goto	u3261
  1585   000CA0  EF54  F006         	goto	u3260
  1586   000CA4                     u3261:
  1587   000CA4  EF5C  F006         	goto	l3551
  1588   000CA8                     u3260:
  1589   000CA8                     
  1590                           ; BSR set to: 0
  1591   000CA8  0E9E               	movlw	low main@reading
  1592   000CAA  6E28               	movwf	decide_color@mx^0,c
  1593   000CAC  0E00               	movlw	high main@reading
  1594   000CAE  6E29               	movwf	(decide_color@mx+1)^0,c
  1595   000CB0  EC1F  F000         	call	_decide_color	;wreg free
  1596   000CB4  0100               	movlb	0	; () banked
  1597   000CB6  6FA6               	movwf	_step& (0+255),b
  1598   000CB8                     l3551:
  1599                           
  1600                           ; BSR set to: 0
  1601                           ;mainfinal.c: 181:             a++;
  1602   000CB8  2B79               	incf	main@a& (0+255),f,b
  1603   000CBA                     l3553:
  1604                           
  1605                           ; BSR set to: 0
  1606                           ;mainfinal.c: 174:         while (a<20) {
  1607   000CBA  0E13               	movlw	19
  1608   000CBC  6579               	cpfsgt	main@a& (0+255),b
  1609   000CBE  EF63  F006         	goto	u3271
  1610   000CC2  EF65  F006         	goto	u3270
  1611   000CC6                     u3271:
  1612   000CC6  EFAE  F005         	goto	l3529
  1613   000CCA                     u3270:
  1614   000CCA                     
  1615                           ; BSR set to: 0
  1616                           ;mainfinal.c: 183:         if (step !=10) {carryoutstep(motorL, motorR, &reading, &max, 
      +                          &ambient, step);}
  1617   000CCA  0E0A               	movlw	10
  1618   000CCC  19A6               	xorwf	_step& (0+255),w,b
  1619   000CCE  B4D8               	btfsc	status,2,c
  1620   000CD0  EF6C  F006         	goto	u3281
  1621   000CD4  EF6E  F006         	goto	u3280
  1622   000CD8                     u3281:
  1623   000CD8  EF70  F006         	goto	l3559
  1624   000CDC                     u3280:
  1625   000CDC  EF79  F005         	goto	l3523
  1626   000CE0                     l3559:
  1627                           
  1628                           ; BSR set to: 0
  1629   000CE0  EE20  F07C         	lfsr	2,main@motorL
  1630   000CE4  EE00  F037         	lfsr	0,returnhome@motorL
  1631   000CE8  0E08               	movlw	8
  1632   000CEA                     u3291:
  1633   000CEA  CFDB FFEB          	movff	plusw2,plusw0
  1634   000CEE  06E8               	decf	wreg,f,c
  1635   000CF0  E2FC               	bc	u3291
  1636   000CF2  EE20  F085         	lfsr	2,main@motorR
  1637   000CF6  EE00  F040         	lfsr	0,returnhome@motorR
  1638   000CFA  0E08               	movlw	8
  1639   000CFC                     u3301:
  1640   000CFC  CFDB FFEB          	movff	plusw2,plusw0
  1641   000D00  06E8               	decf	wreg,f,c
  1642   000D02  E2FC               	bc	u3301
  1643   000D04  ECE7  F00C         	call	_returnhome	;wreg free
  1644   000D08  EF4C  F004         	goto	l3479
  1645   000D0C  EF1D  F000         	goto	start
  1646   000D10                     __end_of_main:
  1647                           	callstack 0
  1648                           
  1649 ;; *************** function _savetime *****************
  1650 ;; Defined at:
  1651 ;;		line 361 in file "dc_motor.c"
  1652 ;; Parameters:    Size  Location     Type
  1653 ;;  timercount      2    0[COMRAM] int 
  1654 ;; Auto vars:     Size  Location     Type
  1655 ;;		None
  1656 ;; Return value:  Size  Location     Type
  1657 ;;                  1    wreg      void 
  1658 ;; Registers used:
  1659 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1660 ;; Tracked objects:
  1661 ;;		On entry : 0/0
  1662 ;;		On exit  : 0/0
  1663 ;;		Unchanged: 0/0
  1664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1665 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1668 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1669 ;;Total ram usage:        2 bytes
  1670 ;; Hardware stack levels used: 1
  1671 ;; Hardware stack levels required when called: 1
  1672 ;; This function calls:
  1673 ;;		Nothing
  1674 ;; This function is called by:
  1675 ;;		_main
  1676 ;; This function uses a non-reentrant model
  1677 ;;
  1678                           
  1679                           	psect	text1
  1680   002792                     __ptext1:
  1681                           	callstack 0
  1682   002792                     _savetime:
  1683                           	callstack 29
  1684   002792                     
  1685                           ;dc_motor.c: 361: void savetime(int timercount);dc_motor.c: 362: {;dc_motor.c: 363:     
      +                          interruptenable = 0;
  1686   002792  0E00               	movlw	0
  1687   002794  6E54               	movwf	_interruptenable^0,c
  1688   002796                     
  1689                           ;dc_motor.c: 364:     timearray[timeposition]=timercount;
  1690   002796  5056               	movf	_timeposition^0,w,c
  1691   002798  0D02               	mullw	2
  1692   00279A  0E00               	movlw	low _timearray
  1693   00279C  24F3               	addwf	243,w,c
  1694   00279E  6ED9               	movwf	fsr2l,c
  1695   0027A0  0E02               	movlw	high _timearray
  1696   0027A2  20F4               	addwfc	prodh,w,c
  1697   0027A4  6EDA               	movwf	fsr2h,c
  1698   0027A6  C001  FFDE         	movff	savetime@timercount,postinc2
  1699   0027AA  C002  FFDD         	movff	savetime@timercount+1,postdec2
  1700   0027AE                     
  1701                           ;dc_motor.c: 365:     timeposition++;
  1702   0027AE  2A56               	incf	_timeposition^0,f,c
  1703   0027B0  0012               	return		;funcret
  1704   0027B2                     __end_of_savetime:
  1705                           	callstack 0
  1706                           
  1707 ;; *************** function _initDCmotorsPWM *****************
  1708 ;; Defined at:
  1709 ;;		line 7 in file "dc_motor.c"
  1710 ;; Parameters:    Size  Location     Type
  1711 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  1712 ;; Auto vars:     Size  Location     Type
  1713 ;;		None
  1714 ;; Return value:  Size  Location     Type
  1715 ;;                  1    wreg      void 
  1716 ;; Registers used:
  1717 ;;		wreg, status,2
  1718 ;; Tracked objects:
  1719 ;;		On entry : 0/0
  1720 ;;		On exit  : 0/0
  1721 ;;		Unchanged: 0/0
  1722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1723 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1726 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1727 ;;Total ram usage:        2 bytes
  1728 ;; Hardware stack levels used: 1
  1729 ;; Hardware stack levels required when called: 1
  1730 ;; This function calls:
  1731 ;;		Nothing
  1732 ;; This function is called by:
  1733 ;;		_main
  1734 ;; This function uses a non-reentrant model
  1735 ;;
  1736                           
  1737                           	psect	text2
  1738   0023B0                     __ptext2:
  1739                           	callstack 0
  1740   0023B0                     _initDCmotorsPWM:
  1741                           	callstack 29
  1742   0023B0                     
  1743                           ;dc_motor.c: 10:     LATEbits.LATE2 = 0;
  1744   0023B0  947D               	bcf	125,2,c	;volatile
  1745                           
  1746                           ;dc_motor.c: 11:     LATEbits.LATE4 = 0;
  1747   0023B2  987D               	bcf	125,4,c	;volatile
  1748                           
  1749                           ;dc_motor.c: 12:     LATCbits.LATC7 = 0;
  1750   0023B4  9E7B               	bcf	123,7,c	;volatile
  1751                           
  1752                           ;dc_motor.c: 13:     LATGbits.LATG6 = 0;
  1753   0023B6  9C7F               	bcf	127,6,c	;volatile
  1754                           
  1755                           ;dc_motor.c: 15:     TRISEbits.TRISE2 = 0;
  1756   0023B8  9485               	bcf	133,2,c	;volatile
  1757                           
  1758                           ;dc_motor.c: 16:     TRISEbits.TRISE4 = 0;
  1759   0023BA  9885               	bcf	133,4,c	;volatile
  1760                           
  1761                           ;dc_motor.c: 17:     TRISCbits.TRISC7 = 0;
  1762   0023BC  9E83               	bcf	131,7,c	;volatile
  1763                           
  1764                           ;dc_motor.c: 18:     TRISGbits.TRISG6 = 0;
  1765   0023BE  9C87               	bcf	135,6,c	;volatile
  1766   0023C0                     
  1767                           ;dc_motor.c: 21:     RE2PPS=0x05;
  1768   0023C0  0E05               	movlw	5
  1769   0023C2  010E               	movlb	14	; () banked
  1770   0023C4  6F74               	movwf	116,b	;volatile
  1771                           
  1772                           ;dc_motor.c: 22:     RE4PPS=0x06;
  1773   0023C6  0E06               	movlw	6
  1774   0023C8  6F76               	movwf	118,b	;volatile
  1775                           
  1776                           ;dc_motor.c: 23:     RC7PPS=0x07;
  1777   0023CA  0E07               	movlw	7
  1778   0023CC  6F69               	movwf	105,b	;volatile
  1779                           
  1780                           ;dc_motor.c: 24:     RG6PPS=0x08;
  1781   0023CE  0E08               	movlw	8
  1782   0023D0  6F88               	movwf	136,b	;volatile
  1783                           
  1784                           ;dc_motor.c: 33:     T2CONbits.CKPS=011;
  1785   0023D2  50BD               	movf	189,w,c	;volatile
  1786   0023D4  0B8F               	andlw	-113
  1787   0023D6  0910               	iorlw	16
  1788   0023D8  6EBD               	movwf	189,c	;volatile
  1789                           
  1790                           ;dc_motor.c: 34:     T2HLTbits.MODE=0b00000;
  1791   0023DA  0EE0               	movlw	-32
  1792   0023DC  16BE               	andwf	190,f,c	;volatile
  1793                           
  1794                           ;dc_motor.c: 35:     T2CLKCONbits.CS=0b0001;
  1795   0023DE  50BF               	movf	191,w,c	;volatile
  1796   0023E0  0BF0               	andlw	-16
  1797   0023E2  0901               	iorlw	1
  1798   0023E4  6EBF               	movwf	191,c	;volatile
  1799                           
  1800                           ;dc_motor.c: 39:     T2PR=199;
  1801   0023E6  0EC7               	movlw	199
  1802   0023E8  6EBC               	movwf	188,c	;volatile
  1803   0023EA                     
  1804                           ; BSR set to: 14
  1805                           ;dc_motor.c: 40:     T2CONbits.ON=1;
  1806   0023EA  8EBD               	bsf	189,7,c	;volatile
  1807                           
  1808                           ;dc_motor.c: 44:     CCPR1H=0;
  1809   0023EC  0E00               	movlw	0
  1810   0023EE  6EAA               	movwf	170,c	;volatile
  1811                           
  1812                           ;dc_motor.c: 45:     CCPR2H=0;
  1813   0023F0  0E00               	movlw	0
  1814   0023F2  6EA6               	movwf	166,c	;volatile
  1815                           
  1816                           ;dc_motor.c: 46:     CCPR3H=0;
  1817   0023F4  0E00               	movlw	0
  1818   0023F6  010F               	movlb	15	; () banked
  1819   0023F8  6F25               	movwf	37,b	;volatile
  1820                           
  1821                           ;dc_motor.c: 47:     CCPR4H=0;
  1822   0023FA  0E00               	movlw	0
  1823   0023FC  6F21               	movwf	33,b	;volatile
  1824                           
  1825                           ;dc_motor.c: 50:     CCPTMRS0bits.C1TSEL=0;
  1826   0023FE  0EFC               	movlw	-4
  1827   002400  16AD               	andwf	173,f,c	;volatile
  1828                           
  1829                           ;dc_motor.c: 51:     CCPTMRS0bits.C2TSEL=0;
  1830   002402  0EF3               	movlw	-13
  1831   002404  16AD               	andwf	173,f,c	;volatile
  1832                           
  1833                           ;dc_motor.c: 52:     CCPTMRS0bits.C3TSEL=0;
  1834   002406  0ECF               	movlw	-49
  1835   002408  16AD               	andwf	173,f,c	;volatile
  1836                           
  1837                           ;dc_motor.c: 53:     CCPTMRS0bits.C4TSEL=0;
  1838   00240A  0E3F               	movlw	-193
  1839   00240C  16AD               	andwf	173,f,c	;volatile
  1840   00240E                     
  1841                           ; BSR set to: 15
  1842                           ;dc_motor.c: 56:     CCP1CONbits.FMT=1;
  1843   00240E  88AB               	bsf	171,4,c	;volatile
  1844                           
  1845                           ;dc_motor.c: 57:     CCP1CONbits.CCP1MODE=0b1100;
  1846   002410  50AB               	movf	171,w,c	;volatile
  1847   002412  0BF0               	andlw	-16
  1848   002414  090C               	iorlw	12
  1849   002416  6EAB               	movwf	171,c	;volatile
  1850   002418                     
  1851                           ; BSR set to: 15
  1852                           ;dc_motor.c: 58:     CCP1CONbits.EN=1;
  1853   002418  8EAB               	bsf	171,7,c	;volatile
  1854   00241A                     
  1855                           ; BSR set to: 15
  1856                           ;dc_motor.c: 60:     CCP2CONbits.FMT=1;
  1857   00241A  88A7               	bsf	167,4,c	;volatile
  1858                           
  1859                           ;dc_motor.c: 61:     CCP2CONbits.CCP2MODE=0b1100;
  1860   00241C  50A7               	movf	167,w,c	;volatile
  1861   00241E  0BF0               	andlw	-16
  1862   002420  090C               	iorlw	12
  1863   002422  6EA7               	movwf	167,c	;volatile
  1864   002424                     
  1865                           ; BSR set to: 15
  1866                           ;dc_motor.c: 62:     CCP2CONbits.EN=1;
  1867   002424  8EA7               	bsf	167,7,c	;volatile
  1868   002426                     
  1869                           ; BSR set to: 15
  1870                           ;dc_motor.c: 64:     CCP3CONbits.FMT=1;
  1871   002426  8926               	bsf	38,4,b	;volatile
  1872                           
  1873                           ;dc_motor.c: 65:     CCP3CONbits.CCP3MODE=0b1100;
  1874   002428  5126               	movf	38,w,b	;volatile
  1875   00242A  0BF0               	andlw	-16
  1876   00242C  090C               	iorlw	12
  1877   00242E  6F26               	movwf	38,b	;volatile
  1878   002430                     
  1879                           ; BSR set to: 15
  1880                           ;dc_motor.c: 66:     CCP3CONbits.EN=1;
  1881   002430  8F26               	bsf	38,7,b	;volatile
  1882   002432                     
  1883                           ; BSR set to: 15
  1884                           ;dc_motor.c: 68:     CCP4CONbits.FMT=1;
  1885   002432  8922               	bsf	34,4,b	;volatile
  1886                           
  1887                           ;dc_motor.c: 69:     CCP4CONbits.CCP4MODE=0b1100;
  1888   002434  5122               	movf	34,w,b	;volatile
  1889   002436  0BF0               	andlw	-16
  1890   002438  090C               	iorlw	12
  1891   00243A  6F22               	movwf	34,b	;volatile
  1892   00243C                     
  1893                           ; BSR set to: 15
  1894                           ;dc_motor.c: 70:     CCP4CONbits.EN=1;
  1895   00243C  8F22               	bsf	34,7,b	;volatile
  1896   00243E                     
  1897                           ; BSR set to: 15
  1898   00243E  0012               	return		;funcret
  1899   002440                     __end_of_initDCmotorsPWM:
  1900                           	callstack 0
  1901                           
  1902 ;; *************** function _decide_color *****************
  1903 ;; Defined at:
  1904 ;;		line 105 in file "color.c"
  1905 ;; Parameters:    Size  Location     Type
  1906 ;;  mx              2   39[COMRAM] PTR struct colors
  1907 ;;		 -> main@reading(8), 
  1908 ;; Auto vars:     Size  Location     Type
  1909 ;;  grf             4   53[COMRAM] float 
  1910 ;;  brf             4   49[COMRAM] float 
  1911 ;;  rrf             4   45[COMRAM] float 
  1912 ;;  br              2   61[COMRAM] unsigned int 
  1913 ;;  rr              2   59[COMRAM] unsigned int 
  1914 ;;  gr              2   57[COMRAM] unsigned int 
  1915 ;; Return value:  Size  Location     Type
  1916 ;;                  1    wreg      unsigned char 
  1917 ;; Registers used:
  1918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1919 ;; Tracked objects:
  1920 ;;		On entry : 0/0
  1921 ;;		On exit  : 0/0
  1922 ;;		Unchanged: 0/0
  1923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1924 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1925 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1926 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1927 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1928 ;;Total ram usage:       24 bytes
  1929 ;; Hardware stack levels used: 1
  1930 ;; Hardware stack levels required when called: 2
  1931 ;; This function calls:
  1932 ;;		___fldiv
  1933 ;;		___flmul
  1934 ;;		___fltol
  1935 ;;		___xxtofl
  1936 ;; This function is called by:
  1937 ;;		_main
  1938 ;; This function uses a non-reentrant model
  1939 ;;
  1940                           
  1941                           	psect	text3
  1942   00003E                     __ptext3:
  1943                           	callstack 0
  1944   00003E                     _decide_color:
  1945                           	callstack 28
  1946   00003E                     
  1947                           ;color.c: 105: char decide_color(colors *mx);color.c: 106: {;color.c: 108:     float rrf
      +                           = (float) mx->red/(mx->clear);
  1948   00003E  C028  FFD9         	movff	decide_color@mx,fsr2l
  1949   000042  C029  FFDA         	movff	decide_color@mx+1,fsr2h
  1950   000046  CFDE F02A          	movff	postinc2,??_decide_color
  1951   00004A  CFDD F02B          	movff	postdec2,??_decide_color+1
  1952   00004E  C02A  F001         	movff	??_decide_color,___xxtofl@val
  1953   000052  C02B  F002         	movff	??_decide_color+1,___xxtofl@val+1
  1954   000056  6A03               	clrf	(___xxtofl@val+2)^0,c
  1955   000058  6A04               	clrf	(___xxtofl@val+3)^0,c
  1956   00005A  0E00               	movlw	0
  1957   00005C  EC57  F00B         	call	___xxtofl
  1958   000060  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1959   000064  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1960   000068  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1961   00006C  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1962   000070  EE20 F006          	lfsr	2,6
  1963   000074  5028               	movf	decide_color@mx^0,w,c
  1964   000076  26D9               	addwf	fsr2l,f,c
  1965   000078  5029               	movf	(decide_color@mx+1)^0,w,c
  1966   00007A  22DA               	addwfc	fsr2h,f,c
  1967   00007C  CFDE F02C          	movff	postinc2,??_decide_color+2
  1968   000080  CFDD F02D          	movff	postdec2,??_decide_color+3
  1969   000084  C02C  F001         	movff	??_decide_color+2,___xxtofl@val
  1970   000088  C02D  F002         	movff	??_decide_color+3,___xxtofl@val+1
  1971   00008C  6A03               	clrf	(___xxtofl@val+2)^0,c
  1972   00008E  6A04               	clrf	(___xxtofl@val+3)^0,c
  1973   000090  0E00               	movlw	0
  1974   000092  EC57  F00B         	call	___xxtofl
  1975   000096  C001  F013         	movff	?___xxtofl,___fldiv@a
  1976   00009A  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1977   00009E  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  1978   0000A2  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  1979   0000A6  EC9D  F008         	call	___fldiv	;wreg free
  1980   0000AA  C00F  F02E         	movff	?___fldiv,decide_color@rrf
  1981   0000AE  C010  F02F         	movff	?___fldiv+1,decide_color@rrf+1
  1982   0000B2  C011  F030         	movff	?___fldiv+2,decide_color@rrf+2
  1983   0000B6  C012  F031         	movff	?___fldiv+3,decide_color@rrf+3
  1984                           
  1985                           ;color.c: 109:     float brf = (float) mx->blue/(mx->clear);
  1986   0000BA  EE20 F002          	lfsr	2,2
  1987   0000BE  5028               	movf	decide_color@mx^0,w,c
  1988   0000C0  26D9               	addwf	fsr2l,f,c
  1989   0000C2  5029               	movf	(decide_color@mx+1)^0,w,c
  1990   0000C4  22DA               	addwfc	fsr2h,f,c
  1991   0000C6  CFDE F02A          	movff	postinc2,??_decide_color
  1992   0000CA  CFDD F02B          	movff	postdec2,??_decide_color+1
  1993   0000CE  C02A  F001         	movff	??_decide_color,___xxtofl@val
  1994   0000D2  C02B  F002         	movff	??_decide_color+1,___xxtofl@val+1
  1995   0000D6  6A03               	clrf	(___xxtofl@val+2)^0,c
  1996   0000D8  6A04               	clrf	(___xxtofl@val+3)^0,c
  1997   0000DA  0E00               	movlw	0
  1998   0000DC  EC57  F00B         	call	___xxtofl
  1999   0000E0  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2000   0000E4  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2001   0000E8  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2002   0000EC  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2003   0000F0  EE20 F006          	lfsr	2,6
  2004   0000F4  5028               	movf	decide_color@mx^0,w,c
  2005   0000F6  26D9               	addwf	fsr2l,f,c
  2006   0000F8  5029               	movf	(decide_color@mx+1)^0,w,c
  2007   0000FA  22DA               	addwfc	fsr2h,f,c
  2008   0000FC  CFDE F02C          	movff	postinc2,??_decide_color+2
  2009   000100  CFDD F02D          	movff	postdec2,??_decide_color+3
  2010   000104  C02C  F001         	movff	??_decide_color+2,___xxtofl@val
  2011   000108  C02D  F002         	movff	??_decide_color+3,___xxtofl@val+1
  2012   00010C  6A03               	clrf	(___xxtofl@val+2)^0,c
  2013   00010E  6A04               	clrf	(___xxtofl@val+3)^0,c
  2014   000110  0E00               	movlw	0
  2015   000112  EC57  F00B         	call	___xxtofl
  2016   000116  C001  F013         	movff	?___xxtofl,___fldiv@a
  2017   00011A  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2018   00011E  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2019   000122  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2020   000126  EC9D  F008         	call	___fldiv	;wreg free
  2021   00012A  C00F  F032         	movff	?___fldiv,decide_color@brf
  2022   00012E  C010  F033         	movff	?___fldiv+1,decide_color@brf+1
  2023   000132  C011  F034         	movff	?___fldiv+2,decide_color@brf+2
  2024   000136  C012  F035         	movff	?___fldiv+3,decide_color@brf+3
  2025                           
  2026                           ;color.c: 110:     float grf = (float) mx->green/(mx->clear);
  2027   00013A  EE20 F004          	lfsr	2,4
  2028   00013E  5028               	movf	decide_color@mx^0,w,c
  2029   000140  26D9               	addwf	fsr2l,f,c
  2030   000142  5029               	movf	(decide_color@mx+1)^0,w,c
  2031   000144  22DA               	addwfc	fsr2h,f,c
  2032   000146  CFDE F02A          	movff	postinc2,??_decide_color
  2033   00014A  CFDD F02B          	movff	postdec2,??_decide_color+1
  2034   00014E  C02A  F001         	movff	??_decide_color,___xxtofl@val
  2035   000152  C02B  F002         	movff	??_decide_color+1,___xxtofl@val+1
  2036   000156  6A03               	clrf	(___xxtofl@val+2)^0,c
  2037   000158  6A04               	clrf	(___xxtofl@val+3)^0,c
  2038   00015A  0E00               	movlw	0
  2039   00015C  EC57  F00B         	call	___xxtofl
  2040   000160  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2041   000164  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2042   000168  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2043   00016C  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2044   000170  EE20 F006          	lfsr	2,6
  2045   000174  5028               	movf	decide_color@mx^0,w,c
  2046   000176  26D9               	addwf	fsr2l,f,c
  2047   000178  5029               	movf	(decide_color@mx+1)^0,w,c
  2048   00017A  22DA               	addwfc	fsr2h,f,c
  2049   00017C  CFDE F02C          	movff	postinc2,??_decide_color+2
  2050   000180  CFDD F02D          	movff	postdec2,??_decide_color+3
  2051   000184  C02C  F001         	movff	??_decide_color+2,___xxtofl@val
  2052   000188  C02D  F002         	movff	??_decide_color+3,___xxtofl@val+1
  2053   00018C  6A03               	clrf	(___xxtofl@val+2)^0,c
  2054   00018E  6A04               	clrf	(___xxtofl@val+3)^0,c
  2055   000190  0E00               	movlw	0
  2056   000192  EC57  F00B         	call	___xxtofl
  2057   000196  C001  F013         	movff	?___xxtofl,___fldiv@a
  2058   00019A  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2059   00019E  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2060   0001A2  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2061   0001A6  EC9D  F008         	call	___fldiv	;wreg free
  2062   0001AA  C00F  F036         	movff	?___fldiv,decide_color@grf
  2063   0001AE  C010  F037         	movff	?___fldiv+1,decide_color@grf+1
  2064   0001B2  C011  F038         	movff	?___fldiv+2,decide_color@grf+2
  2065   0001B6  C012  F039         	movff	?___fldiv+3,decide_color@grf+3
  2066   0001BA                     
  2067                           ;color.c: 112:     unsigned int rr = (int) (100*rrf);
  2068   0001BA  0E00               	movlw	0
  2069   0001BC  6E05               	movwf	___flmul@a^0,c
  2070   0001BE  0E00               	movlw	0
  2071   0001C0  6E06               	movwf	(___flmul@a+1)^0,c
  2072   0001C2  0EC8               	movlw	200
  2073   0001C4  6E07               	movwf	(___flmul@a+2)^0,c
  2074   0001C6  0E42               	movlw	66
  2075   0001C8  6E08               	movwf	(___flmul@a+3)^0,c
  2076   0001CA  C02E  F001         	movff	decide_color@rrf,___flmul@b
  2077   0001CE  C02F  F002         	movff	decide_color@rrf+1,___flmul@b+1
  2078   0001D2  C030  F003         	movff	decide_color@rrf+2,___flmul@b+2
  2079   0001D6  C031  F004         	movff	decide_color@rrf+3,___flmul@b+3
  2080   0001DA  EC88  F006         	call	___flmul	;wreg free
  2081   0001DE  C001  F01A         	movff	?___flmul,___fltol@f1
  2082   0001E2  C002  F01B         	movff	?___flmul+1,___fltol@f1+1
  2083   0001E6  C003  F01C         	movff	?___flmul+2,___fltol@f1+2
  2084   0001EA  C004  F01D         	movff	?___flmul+3,___fltol@f1+3
  2085   0001EE  EC86  F00D         	call	___fltol	;wreg free
  2086   0001F2  C01A  F03C         	movff	?___fltol,decide_color@rr
  2087   0001F6  C01B  F03D         	movff	?___fltol+1,decide_color@rr+1
  2088   0001FA                     
  2089                           ;color.c: 113:     unsigned int br = (int) (100*brf);
  2090   0001FA  0E00               	movlw	0
  2091   0001FC  6E05               	movwf	___flmul@a^0,c
  2092   0001FE  0E00               	movlw	0
  2093   000200  6E06               	movwf	(___flmul@a+1)^0,c
  2094   000202  0EC8               	movlw	200
  2095   000204  6E07               	movwf	(___flmul@a+2)^0,c
  2096   000206  0E42               	movlw	66
  2097   000208  6E08               	movwf	(___flmul@a+3)^0,c
  2098   00020A  C032  F001         	movff	decide_color@brf,___flmul@b
  2099   00020E  C033  F002         	movff	decide_color@brf+1,___flmul@b+1
  2100   000212  C034  F003         	movff	decide_color@brf+2,___flmul@b+2
  2101   000216  C035  F004         	movff	decide_color@brf+3,___flmul@b+3
  2102   00021A  EC88  F006         	call	___flmul	;wreg free
  2103   00021E  C001  F01A         	movff	?___flmul,___fltol@f1
  2104   000222  C002  F01B         	movff	?___flmul+1,___fltol@f1+1
  2105   000226  C003  F01C         	movff	?___flmul+2,___fltol@f1+2
  2106   00022A  C004  F01D         	movff	?___flmul+3,___fltol@f1+3
  2107   00022E  EC86  F00D         	call	___fltol	;wreg free
  2108   000232  C01A  F03E         	movff	?___fltol,decide_color@br
  2109   000236  C01B  F03F         	movff	?___fltol+1,decide_color@br+1
  2110   00023A                     
  2111                           ;color.c: 114:     unsigned int gr = (int) (100*grf);
  2112   00023A  0E00               	movlw	0
  2113   00023C  6E05               	movwf	___flmul@a^0,c
  2114   00023E  0E00               	movlw	0
  2115   000240  6E06               	movwf	(___flmul@a+1)^0,c
  2116   000242  0EC8               	movlw	200
  2117   000244  6E07               	movwf	(___flmul@a+2)^0,c
  2118   000246  0E42               	movlw	66
  2119   000248  6E08               	movwf	(___flmul@a+3)^0,c
  2120   00024A  C036  F001         	movff	decide_color@grf,___flmul@b
  2121   00024E  C037  F002         	movff	decide_color@grf+1,___flmul@b+1
  2122   000252  C038  F003         	movff	decide_color@grf+2,___flmul@b+2
  2123   000256  C039  F004         	movff	decide_color@grf+3,___flmul@b+3
  2124   00025A  EC88  F006         	call	___flmul	;wreg free
  2125   00025E  C001  F01A         	movff	?___flmul,___fltol@f1
  2126   000262  C002  F01B         	movff	?___flmul+1,___fltol@f1+1
  2127   000266  C003  F01C         	movff	?___flmul+2,___fltol@f1+2
  2128   00026A  C004  F01D         	movff	?___flmul+3,___fltol@f1+3
  2129   00026E  EC86  F00D         	call	___fltol	;wreg free
  2130   000272  C01A  F03A         	movff	?___fltol,decide_color@gr
  2131   000276  C01B  F03B         	movff	?___fltol+1,decide_color@gr+1
  2132   00027A                     
  2133                           ;color.c: 118:     if ((150<rr) & (br<80) & (gr<40) & (200<mx->clear && mx->clear<400)) 
      +                          {return 2;}
  2134   00027A  503D               	movf	(decide_color@rr+1)^0,w,c
  2135   00027C  E109               	bnz	u2760
  2136   00027E  0E97               	movlw	151
  2137   000280  5C3C               	subwf	decide_color@rr^0,w,c
  2138   000282  A0D8               	btfss	status,0,c
  2139   000284  EF46  F001         	goto	u2761
  2140   000288  EF48  F001         	goto	u2760
  2141   00028C                     u2761:
  2142   00028C  EF84  F001         	goto	l3269
  2143   000290                     u2760:
  2144   000290  503F               	movf	(decide_color@br+1)^0,w,c
  2145   000292  E107               	bnz	u2771
  2146   000294  0E50               	movlw	80
  2147   000296  5C3E               	subwf	decide_color@br^0,w,c
  2148   000298  B0D8               	btfsc	status,0,c
  2149   00029A  EF51  F001         	goto	u2771
  2150   00029E  EF53  F001         	goto	u2770
  2151   0002A2                     u2771:
  2152   0002A2  EF84  F001         	goto	l3269
  2153   0002A6                     u2770:
  2154   0002A6  503B               	movf	(decide_color@gr+1)^0,w,c
  2155   0002A8  E107               	bnz	u2781
  2156   0002AA  0E28               	movlw	40
  2157   0002AC  5C3A               	subwf	decide_color@gr^0,w,c
  2158   0002AE  B0D8               	btfsc	status,0,c
  2159   0002B0  EF5C  F001         	goto	u2781
  2160   0002B4  EF5E  F001         	goto	u2780
  2161   0002B8                     u2781:
  2162   0002B8  EF84  F001         	goto	l3269
  2163   0002BC                     u2780:
  2164   0002BC  EE20 F006          	lfsr	2,6
  2165   0002C0  5028               	movf	decide_color@mx^0,w,c
  2166   0002C2  26D9               	addwf	fsr2l,f,c
  2167   0002C4  5029               	movf	(decide_color@mx+1)^0,w,c
  2168   0002C6  22DA               	addwfc	fsr2h,f,c
  2169   0002C8  0E01               	movlw	1
  2170   0002CA  50DB               	movf	plusw2,w,c
  2171   0002CC  E109               	bnz	u2790
  2172   0002CE  0EC9               	movlw	201
  2173   0002D0  5CDE               	subwf	postinc2,w,c
  2174   0002D2  A0D8               	btfss	status,0,c
  2175   0002D4  EF6E  F001         	goto	u2791
  2176   0002D8  EF70  F001         	goto	u2790
  2177   0002DC                     u2791:
  2178   0002DC  EF84  F001         	goto	l3269
  2179   0002E0                     u2790:
  2180   0002E0  EE20 F006          	lfsr	2,6
  2181   0002E4  5028               	movf	decide_color@mx^0,w,c
  2182   0002E6  26D9               	addwf	fsr2l,f,c
  2183   0002E8  5029               	movf	(decide_color@mx+1)^0,w,c
  2184   0002EA  22DA               	addwfc	fsr2h,f,c
  2185   0002EC  0E90               	movlw	144
  2186   0002EE  5CDE               	subwf	postinc2,w,c
  2187   0002F0  0E01               	movlw	1
  2188   0002F2  58DE               	subwfb	postinc2,w,c
  2189   0002F4  B0D8               	btfsc	status,0,c
  2190   0002F6  EF7F  F001         	goto	u2801
  2191   0002FA  EF81  F001         	goto	u2800
  2192   0002FE                     u2801:
  2193   0002FE  EF84  F001         	goto	l3269
  2194   000302                     u2800:
  2195   000302  0E02               	movlw	2
  2196   000304  EF68  F003         	goto	l446
  2197   000308                     l3269:
  2198                           
  2199                           ;color.c: 120:     if ((60<rr && rr<100) & (60<br && br<100) & (110<gr) & (mx->clear<550
      +                          )) {return 3;}
  2200   000308  503D               	movf	(decide_color@rr+1)^0,w,c
  2201   00030A  E109               	bnz	u2810
  2202   00030C  0E3D               	movlw	61
  2203   00030E  5C3C               	subwf	decide_color@rr^0,w,c
  2204   000310  A0D8               	btfss	status,0,c
  2205   000312  EF8D  F001         	goto	u2811
  2206   000316  EF8F  F001         	goto	u2810
  2207   00031A                     u2811:
  2208   00031A  EFCF  F001         	goto	l3285
  2209   00031E                     u2810:
  2210   00031E  503D               	movf	(decide_color@rr+1)^0,w,c
  2211   000320  E107               	bnz	u2821
  2212   000322  0E64               	movlw	100
  2213   000324  5C3C               	subwf	decide_color@rr^0,w,c
  2214   000326  B0D8               	btfsc	status,0,c
  2215   000328  EF98  F001         	goto	u2821
  2216   00032C  EF9A  F001         	goto	u2820
  2217   000330                     u2821:
  2218   000330  EFCF  F001         	goto	l3285
  2219   000334                     u2820:
  2220   000334  503F               	movf	(decide_color@br+1)^0,w,c
  2221   000336  E109               	bnz	u2830
  2222   000338  0E3D               	movlw	61
  2223   00033A  5C3E               	subwf	decide_color@br^0,w,c
  2224   00033C  A0D8               	btfss	status,0,c
  2225   00033E  EFA3  F001         	goto	u2831
  2226   000342  EFA5  F001         	goto	u2830
  2227   000346                     u2831:
  2228   000346  EFCF  F001         	goto	l3285
  2229   00034A                     u2830:
  2230   00034A  503F               	movf	(decide_color@br+1)^0,w,c
  2231   00034C  E107               	bnz	u2841
  2232   00034E  0E64               	movlw	100
  2233   000350  5C3E               	subwf	decide_color@br^0,w,c
  2234   000352  B0D8               	btfsc	status,0,c
  2235   000354  EFAE  F001         	goto	u2841
  2236   000358  EFB0  F001         	goto	u2840
  2237   00035C                     u2841:
  2238   00035C  EFCF  F001         	goto	l3285
  2239   000360                     u2840:
  2240   000360  503B               	movf	(decide_color@gr+1)^0,w,c
  2241   000362  E109               	bnz	u2850
  2242   000364  0E6F               	movlw	111
  2243   000366  5C3A               	subwf	decide_color@gr^0,w,c
  2244   000368  A0D8               	btfss	status,0,c
  2245   00036A  EFB9  F001         	goto	u2851
  2246   00036E  EFBB  F001         	goto	u2850
  2247   000372                     u2851:
  2248   000372  EFCF  F001         	goto	l3285
  2249   000376                     u2850:
  2250   000376  EE20 F006          	lfsr	2,6
  2251   00037A  5028               	movf	decide_color@mx^0,w,c
  2252   00037C  26D9               	addwf	fsr2l,f,c
  2253   00037E  5029               	movf	(decide_color@mx+1)^0,w,c
  2254   000380  22DA               	addwfc	fsr2h,f,c
  2255   000382  0E26               	movlw	38
  2256   000384  5CDE               	subwf	postinc2,w,c
  2257   000386  0E02               	movlw	2
  2258   000388  58DE               	subwfb	postinc2,w,c
  2259   00038A  B0D8               	btfsc	status,0,c
  2260   00038C  EFCA  F001         	goto	u2861
  2261   000390  EFCC  F001         	goto	u2860
  2262   000394                     u2861:
  2263   000394  EFCF  F001         	goto	l3285
  2264   000398                     u2860:
  2265   000398  0E03               	movlw	3
  2266   00039A  EF68  F003         	goto	l446
  2267   00039E                     l3285:
  2268                           
  2269                           ;color.c: 122:     if ((rr<70) & (100<br) & (gr<130) & (mx->clear<180)) {return 4;}
  2270   00039E  503D               	movf	(decide_color@rr+1)^0,w,c
  2271   0003A0  E107               	bnz	u2871
  2272   0003A2  0E46               	movlw	70
  2273   0003A4  5C3C               	subwf	decide_color@rr^0,w,c
  2274   0003A6  B0D8               	btfsc	status,0,c
  2275   0003A8  EFD8  F001         	goto	u2871
  2276   0003AC  EFDA  F001         	goto	u2870
  2277   0003B0                     u2871:
  2278   0003B0  EF05  F002         	goto	l3297
  2279   0003B4                     u2870:
  2280   0003B4  503F               	movf	(decide_color@br+1)^0,w,c
  2281   0003B6  E109               	bnz	u2880
  2282   0003B8  0E65               	movlw	101
  2283   0003BA  5C3E               	subwf	decide_color@br^0,w,c
  2284   0003BC  A0D8               	btfss	status,0,c
  2285   0003BE  EFE3  F001         	goto	u2881
  2286   0003C2  EFE5  F001         	goto	u2880
  2287   0003C6                     u2881:
  2288   0003C6  EF05  F002         	goto	l3297
  2289   0003CA                     u2880:
  2290   0003CA  503B               	movf	(decide_color@gr+1)^0,w,c
  2291   0003CC  E107               	bnz	u2891
  2292   0003CE  0E82               	movlw	130
  2293   0003D0  5C3A               	subwf	decide_color@gr^0,w,c
  2294   0003D2  B0D8               	btfsc	status,0,c
  2295   0003D4  EFEE  F001         	goto	u2891
  2296   0003D8  EFF0  F001         	goto	u2890
  2297   0003DC                     u2891:
  2298   0003DC  EF05  F002         	goto	l3297
  2299   0003E0                     u2890:
  2300   0003E0  EE20 F006          	lfsr	2,6
  2301   0003E4  5028               	movf	decide_color@mx^0,w,c
  2302   0003E6  26D9               	addwf	fsr2l,f,c
  2303   0003E8  5029               	movf	(decide_color@mx+1)^0,w,c
  2304   0003EA  22DA               	addwfc	fsr2h,f,c
  2305   0003EC  0E01               	movlw	1
  2306   0003EE  50DB               	movf	plusw2,w,c
  2307   0003F0  E107               	bnz	u2901
  2308   0003F2  0EB4               	movlw	180
  2309   0003F4  5CDE               	subwf	postinc2,w,c
  2310   0003F6  B0D8               	btfsc	status,0,c
  2311   0003F8  EF00  F002         	goto	u2901
  2312   0003FC  EF02  F002         	goto	u2900
  2313   000400                     u2901:
  2314   000400  EF05  F002         	goto	l3297
  2315   000404                     u2900:
  2316   000404  0E04               	movlw	4
  2317   000406  EF68  F003         	goto	l446
  2318   00040A                     l3297:
  2319                           
  2320                           ;color.c: 124:     if ((100<rr) & (br<85) & (85<gr) & (mx->clear>650) & (br<gr)) {return
      +                           5;}
  2321   00040A  503D               	movf	(decide_color@rr+1)^0,w,c
  2322   00040C  E109               	bnz	u2910
  2323   00040E  0E65               	movlw	101
  2324   000410  5C3C               	subwf	decide_color@rr^0,w,c
  2325   000412  A0D8               	btfss	status,0,c
  2326   000414  EF0E  F002         	goto	u2911
  2327   000418  EF10  F002         	goto	u2910
  2328   00041C                     u2911:
  2329   00041C  EF45  F002         	goto	l3311
  2330   000420                     u2910:
  2331   000420  503F               	movf	(decide_color@br+1)^0,w,c
  2332   000422  E107               	bnz	u2921
  2333   000424  0E55               	movlw	85
  2334   000426  5C3E               	subwf	decide_color@br^0,w,c
  2335   000428  B0D8               	btfsc	status,0,c
  2336   00042A  EF19  F002         	goto	u2921
  2337   00042E  EF1B  F002         	goto	u2920
  2338   000432                     u2921:
  2339   000432  EF45  F002         	goto	l3311
  2340   000436                     u2920:
  2341   000436  503B               	movf	(decide_color@gr+1)^0,w,c
  2342   000438  E109               	bnz	u2930
  2343   00043A  0E56               	movlw	86
  2344   00043C  5C3A               	subwf	decide_color@gr^0,w,c
  2345   00043E  A0D8               	btfss	status,0,c
  2346   000440  EF24  F002         	goto	u2931
  2347   000444  EF26  F002         	goto	u2930
  2348   000448                     u2931:
  2349   000448  EF45  F002         	goto	l3311
  2350   00044C                     u2930:
  2351   00044C  EE20 F006          	lfsr	2,6
  2352   000450  5028               	movf	decide_color@mx^0,w,c
  2353   000452  26D9               	addwf	fsr2l,f,c
  2354   000454  5029               	movf	(decide_color@mx+1)^0,w,c
  2355   000456  22DA               	addwfc	fsr2h,f,c
  2356   000458  0E8B               	movlw	139
  2357   00045A  5CDE               	subwf	postinc2,w,c
  2358   00045C  0E02               	movlw	2
  2359   00045E  58DE               	subwfb	postinc2,w,c
  2360   000460  A0D8               	btfss	status,0,c
  2361   000462  EF35  F002         	goto	u2941
  2362   000466  EF37  F002         	goto	u2940
  2363   00046A                     u2941:
  2364   00046A  EF45  F002         	goto	l3311
  2365   00046E                     u2940:
  2366   00046E  503A               	movf	decide_color@gr^0,w,c
  2367   000470  5C3E               	subwf	decide_color@br^0,w,c
  2368   000472  503B               	movf	(decide_color@gr+1)^0,w,c
  2369   000474  583F               	subwfb	(decide_color@br+1)^0,w,c
  2370   000476  B0D8               	btfsc	status,0,c
  2371   000478  EF40  F002         	goto	u2951
  2372   00047C  EF42  F002         	goto	u2950
  2373   000480                     u2951:
  2374   000480  EF45  F002         	goto	l3311
  2375   000484                     u2950:
  2376   000484  0E05               	movlw	5
  2377   000486  EF68  F003         	goto	l446
  2378   00048A                     l3311:
  2379                           
  2380                           ;color.c: 126:     if ((100<rr && rr<120) & (br>80) & (gr<95) & (mx->clear<675)) {return
      +                           6;}
  2381   00048A  503D               	movf	(decide_color@rr+1)^0,w,c
  2382   00048C  E109               	bnz	u2960
  2383   00048E  0E65               	movlw	101
  2384   000490  5C3C               	subwf	decide_color@rr^0,w,c
  2385   000492  A0D8               	btfss	status,0,c
  2386   000494  EF4E  F002         	goto	u2961
  2387   000498  EF50  F002         	goto	u2960
  2388   00049C                     u2961:
  2389   00049C  EF85  F002         	goto	l3325
  2390   0004A0                     u2960:
  2391   0004A0  503D               	movf	(decide_color@rr+1)^0,w,c
  2392   0004A2  E107               	bnz	u2971
  2393   0004A4  0E78               	movlw	120
  2394   0004A6  5C3C               	subwf	decide_color@rr^0,w,c
  2395   0004A8  B0D8               	btfsc	status,0,c
  2396   0004AA  EF59  F002         	goto	u2971
  2397   0004AE  EF5B  F002         	goto	u2970
  2398   0004B2                     u2971:
  2399   0004B2  EF85  F002         	goto	l3325
  2400   0004B6                     u2970:
  2401   0004B6  503F               	movf	(decide_color@br+1)^0,w,c
  2402   0004B8  E109               	bnz	u2980
  2403   0004BA  0E51               	movlw	81
  2404   0004BC  5C3E               	subwf	decide_color@br^0,w,c
  2405   0004BE  A0D8               	btfss	status,0,c
  2406   0004C0  EF64  F002         	goto	u2981
  2407   0004C4  EF66  F002         	goto	u2980
  2408   0004C8                     u2981:
  2409   0004C8  EF85  F002         	goto	l3325
  2410   0004CC                     u2980:
  2411   0004CC  503B               	movf	(decide_color@gr+1)^0,w,c
  2412   0004CE  E107               	bnz	u2991
  2413   0004D0  0E5F               	movlw	95
  2414   0004D2  5C3A               	subwf	decide_color@gr^0,w,c
  2415   0004D4  B0D8               	btfsc	status,0,c
  2416   0004D6  EF6F  F002         	goto	u2991
  2417   0004DA  EF71  F002         	goto	u2990
  2418   0004DE                     u2991:
  2419   0004DE  EF85  F002         	goto	l3325
  2420   0004E2                     u2990:
  2421   0004E2  EE20 F006          	lfsr	2,6
  2422   0004E6  5028               	movf	decide_color@mx^0,w,c
  2423   0004E8  26D9               	addwf	fsr2l,f,c
  2424   0004EA  5029               	movf	(decide_color@mx+1)^0,w,c
  2425   0004EC  22DA               	addwfc	fsr2h,f,c
  2426   0004EE  0EA3               	movlw	163
  2427   0004F0  5CDE               	subwf	postinc2,w,c
  2428   0004F2  0E02               	movlw	2
  2429   0004F4  58DE               	subwfb	postinc2,w,c
  2430   0004F6  B0D8               	btfsc	status,0,c
  2431   0004F8  EF80  F002         	goto	u3001
  2432   0004FC  EF82  F002         	goto	u3000
  2433   000500                     u3001:
  2434   000500  EF85  F002         	goto	l3325
  2435   000504                     u3000:
  2436   000504  0E06               	movlw	6
  2437   000506  EF68  F003         	goto	l446
  2438   00050A                     l3325:
  2439                           
  2440                           ;color.c: 128:     if ((125<rr) & (br<85) & (gr<85) & (mx->clear > 400)) {return 7;}
  2441   00050A  503D               	movf	(decide_color@rr+1)^0,w,c
  2442   00050C  E109               	bnz	u3010
  2443   00050E  0E7E               	movlw	126
  2444   000510  5C3C               	subwf	decide_color@rr^0,w,c
  2445   000512  A0D8               	btfss	status,0,c
  2446   000514  EF8E  F002         	goto	u3011
  2447   000518  EF90  F002         	goto	u3010
  2448   00051C                     u3011:
  2449   00051C  EFBA  F002         	goto	l3337
  2450   000520                     u3010:
  2451   000520  503F               	movf	(decide_color@br+1)^0,w,c
  2452   000522  E107               	bnz	u3021
  2453   000524  0E55               	movlw	85
  2454   000526  5C3E               	subwf	decide_color@br^0,w,c
  2455   000528  B0D8               	btfsc	status,0,c
  2456   00052A  EF99  F002         	goto	u3021
  2457   00052E  EF9B  F002         	goto	u3020
  2458   000532                     u3021:
  2459   000532  EFBA  F002         	goto	l3337
  2460   000536                     u3020:
  2461   000536  503B               	movf	(decide_color@gr+1)^0,w,c
  2462   000538  E107               	bnz	u3031
  2463   00053A  0E55               	movlw	85
  2464   00053C  5C3A               	subwf	decide_color@gr^0,w,c
  2465   00053E  B0D8               	btfsc	status,0,c
  2466   000540  EFA4  F002         	goto	u3031
  2467   000544  EFA6  F002         	goto	u3030
  2468   000548                     u3031:
  2469   000548  EFBA  F002         	goto	l3337
  2470   00054C                     u3030:
  2471   00054C  EE20 F006          	lfsr	2,6
  2472   000550  5028               	movf	decide_color@mx^0,w,c
  2473   000552  26D9               	addwf	fsr2l,f,c
  2474   000554  5029               	movf	(decide_color@mx+1)^0,w,c
  2475   000556  22DA               	addwfc	fsr2h,f,c
  2476   000558  0E91               	movlw	145
  2477   00055A  5CDE               	subwf	postinc2,w,c
  2478   00055C  0E01               	movlw	1
  2479   00055E  58DE               	subwfb	postinc2,w,c
  2480   000560  A0D8               	btfss	status,0,c
  2481   000562  EFB5  F002         	goto	u3041
  2482   000566  EFB7  F002         	goto	u3040
  2483   00056A                     u3041:
  2484   00056A  EFBA  F002         	goto	l3337
  2485   00056E                     u3040:
  2486   00056E  0E07               	movlw	7
  2487   000570  EF68  F003         	goto	l446
  2488   000574                     l3337:
  2489                           
  2490                           ;color.c: 130:     if ((rr<90) & (100<br) & (110<gr) & (400<mx->clear && mx->clear<700))
      +                           {return 8;}
  2491   000574  503D               	movf	(decide_color@rr+1)^0,w,c
  2492   000576  E107               	bnz	u3051
  2493   000578  0E5A               	movlw	90
  2494   00057A  5C3C               	subwf	decide_color@rr^0,w,c
  2495   00057C  B0D8               	btfsc	status,0,c
  2496   00057E  EFC3  F002         	goto	u3051
  2497   000582  EFC5  F002         	goto	u3050
  2498   000586                     u3051:
  2499   000586  EF00  F003         	goto	l3351
  2500   00058A                     u3050:
  2501   00058A  503F               	movf	(decide_color@br+1)^0,w,c
  2502   00058C  E109               	bnz	u3060
  2503   00058E  0E65               	movlw	101
  2504   000590  5C3E               	subwf	decide_color@br^0,w,c
  2505   000592  A0D8               	btfss	status,0,c
  2506   000594  EFCE  F002         	goto	u3061
  2507   000598  EFD0  F002         	goto	u3060
  2508   00059C                     u3061:
  2509   00059C  EF00  F003         	goto	l3351
  2510   0005A0                     u3060:
  2511   0005A0  503B               	movf	(decide_color@gr+1)^0,w,c
  2512   0005A2  E109               	bnz	u3070
  2513   0005A4  0E6F               	movlw	111
  2514   0005A6  5C3A               	subwf	decide_color@gr^0,w,c
  2515   0005A8  A0D8               	btfss	status,0,c
  2516   0005AA  EFD9  F002         	goto	u3071
  2517   0005AE  EFDB  F002         	goto	u3070
  2518   0005B2                     u3071:
  2519   0005B2  EF00  F003         	goto	l3351
  2520   0005B6                     u3070:
  2521   0005B6  EE20 F006          	lfsr	2,6
  2522   0005BA  5028               	movf	decide_color@mx^0,w,c
  2523   0005BC  26D9               	addwf	fsr2l,f,c
  2524   0005BE  5029               	movf	(decide_color@mx+1)^0,w,c
  2525   0005C0  22DA               	addwfc	fsr2h,f,c
  2526   0005C2  0E91               	movlw	145
  2527   0005C4  5CDE               	subwf	postinc2,w,c
  2528   0005C6  0E01               	movlw	1
  2529   0005C8  58DE               	subwfb	postinc2,w,c
  2530   0005CA  A0D8               	btfss	status,0,c
  2531   0005CC  EFEA  F002         	goto	u3081
  2532   0005D0  EFEC  F002         	goto	u3080
  2533   0005D4                     u3081:
  2534   0005D4  EF00  F003         	goto	l3351
  2535   0005D8                     u3080:
  2536   0005D8  EE20 F006          	lfsr	2,6
  2537   0005DC  5028               	movf	decide_color@mx^0,w,c
  2538   0005DE  26D9               	addwf	fsr2l,f,c
  2539   0005E0  5029               	movf	(decide_color@mx+1)^0,w,c
  2540   0005E2  22DA               	addwfc	fsr2h,f,c
  2541   0005E4  0EBC               	movlw	188
  2542   0005E6  5CDE               	subwf	postinc2,w,c
  2543   0005E8  0E02               	movlw	2
  2544   0005EA  58DE               	subwfb	postinc2,w,c
  2545   0005EC  B0D8               	btfsc	status,0,c
  2546   0005EE  EFFB  F002         	goto	u3091
  2547   0005F2  EFFD  F002         	goto	u3090
  2548   0005F6                     u3091:
  2549   0005F6  EF00  F003         	goto	l3351
  2550   0005FA                     u3090:
  2551   0005FA  0E08               	movlw	8
  2552   0005FC  EF68  F003         	goto	l446
  2553   000600                     l3351:
  2554                           
  2555                           ;color.c: 132:     if ((82<rr && rr<107) & (82<br && br<107) & (82<gr && gr<107) & (700<
      +                          mx->clear && mx->clear<1200)) {return 9;}
  2556   000600  503D               	movf	(decide_color@rr+1)^0,w,c
  2557   000602  E109               	bnz	u3100
  2558   000604  0E53               	movlw	83
  2559   000606  5C3C               	subwf	decide_color@rr^0,w,c
  2560   000608  A0D8               	btfss	status,0,c
  2561   00060A  EF09  F003         	goto	u3101
  2562   00060E  EF0B  F003         	goto	u3100
  2563   000612                     u3101:
  2564   000612  EF67  F003         	goto	l3373
  2565   000616                     u3100:
  2566   000616  503D               	movf	(decide_color@rr+1)^0,w,c
  2567   000618  E107               	bnz	u3111
  2568   00061A  0E6B               	movlw	107
  2569   00061C  5C3C               	subwf	decide_color@rr^0,w,c
  2570   00061E  B0D8               	btfsc	status,0,c
  2571   000620  EF14  F003         	goto	u3111
  2572   000624  EF16  F003         	goto	u3110
  2573   000628                     u3111:
  2574   000628  EF67  F003         	goto	l3373
  2575   00062C                     u3110:
  2576   00062C  503F               	movf	(decide_color@br+1)^0,w,c
  2577   00062E  E109               	bnz	u3120
  2578   000630  0E53               	movlw	83
  2579   000632  5C3E               	subwf	decide_color@br^0,w,c
  2580   000634  A0D8               	btfss	status,0,c
  2581   000636  EF1F  F003         	goto	u3121
  2582   00063A  EF21  F003         	goto	u3120
  2583   00063E                     u3121:
  2584   00063E  EF67  F003         	goto	l3373
  2585   000642                     u3120:
  2586   000642  503F               	movf	(decide_color@br+1)^0,w,c
  2587   000644  E107               	bnz	u3131
  2588   000646  0E6B               	movlw	107
  2589   000648  5C3E               	subwf	decide_color@br^0,w,c
  2590   00064A  B0D8               	btfsc	status,0,c
  2591   00064C  EF2A  F003         	goto	u3131
  2592   000650  EF2C  F003         	goto	u3130
  2593   000654                     u3131:
  2594   000654  EF67  F003         	goto	l3373
  2595   000658                     u3130:
  2596   000658  503B               	movf	(decide_color@gr+1)^0,w,c
  2597   00065A  E109               	bnz	u3140
  2598   00065C  0E53               	movlw	83
  2599   00065E  5C3A               	subwf	decide_color@gr^0,w,c
  2600   000660  A0D8               	btfss	status,0,c
  2601   000662  EF35  F003         	goto	u3141
  2602   000666  EF37  F003         	goto	u3140
  2603   00066A                     u3141:
  2604   00066A  EF67  F003         	goto	l3373
  2605   00066E                     u3140:
  2606   00066E  503B               	movf	(decide_color@gr+1)^0,w,c
  2607   000670  E107               	bnz	u3151
  2608   000672  0E6B               	movlw	107
  2609   000674  5C3A               	subwf	decide_color@gr^0,w,c
  2610   000676  B0D8               	btfsc	status,0,c
  2611   000678  EF40  F003         	goto	u3151
  2612   00067C  EF42  F003         	goto	u3150
  2613   000680                     u3151:
  2614   000680  EF67  F003         	goto	l3373
  2615   000684                     u3150:
  2616   000684  EE20 F006          	lfsr	2,6
  2617   000688  5028               	movf	decide_color@mx^0,w,c
  2618   00068A  26D9               	addwf	fsr2l,f,c
  2619   00068C  5029               	movf	(decide_color@mx+1)^0,w,c
  2620   00068E  22DA               	addwfc	fsr2h,f,c
  2621   000690  0EBD               	movlw	189
  2622   000692  5CDE               	subwf	postinc2,w,c
  2623   000694  0E02               	movlw	2
  2624   000696  58DE               	subwfb	postinc2,w,c
  2625   000698  A0D8               	btfss	status,0,c
  2626   00069A  EF51  F003         	goto	u3161
  2627   00069E  EF53  F003         	goto	u3160
  2628   0006A2                     u3161:
  2629   0006A2  EF67  F003         	goto	l3373
  2630   0006A6                     u3160:
  2631   0006A6  EE20 F006          	lfsr	2,6
  2632   0006AA  5028               	movf	decide_color@mx^0,w,c
  2633   0006AC  26D9               	addwf	fsr2l,f,c
  2634   0006AE  5029               	movf	(decide_color@mx+1)^0,w,c
  2635   0006B0  22DA               	addwfc	fsr2h,f,c
  2636   0006B2  0EB0               	movlw	176
  2637   0006B4  5CDE               	subwf	postinc2,w,c
  2638   0006B6  0E04               	movlw	4
  2639   0006B8  58DE               	subwfb	postinc2,w,c
  2640   0006BA  B0D8               	btfsc	status,0,c
  2641   0006BC  EF62  F003         	goto	u3171
  2642   0006C0  EF64  F003         	goto	u3170
  2643   0006C4                     u3171:
  2644   0006C4  EF67  F003         	goto	l3373
  2645   0006C8                     u3170:
  2646   0006C8  0E09               	movlw	9
  2647   0006CA  EF68  F003         	goto	l446
  2648   0006CE                     l3373:
  2649   0006CE  0E0A               	movlw	10
  2650   0006D0                     l446:
  2651   0006D0  0012               	return		;funcret
  2652   0006D2                     __end_of_decide_color:
  2653                           	callstack 0
  2654                           
  2655 ;; *************** function ___xxtofl *****************
  2656 ;; Defined at:
  2657 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  2658 ;; Parameters:    Size  Location     Type
  2659 ;;  sign            1    wreg     unsigned char 
  2660 ;;  val             4    0[COMRAM] long 
  2661 ;; Auto vars:     Size  Location     Type
  2662 ;;  sign            1    8[COMRAM] unsigned char 
  2663 ;;  arg             4   10[COMRAM] unsigned long 
  2664 ;;  exp             1    9[COMRAM] unsigned char 
  2665 ;; Return value:  Size  Location     Type
  2666 ;;                  4    0[COMRAM] unsigned char 
  2667 ;; Registers used:
  2668 ;;		wreg, status,2, status,0
  2669 ;; Tracked objects:
  2670 ;;		On entry : 0/0
  2671 ;;		On exit  : 0/0
  2672 ;;		Unchanged: 0/0
  2673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2674 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2675 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2676 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2677 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2678 ;;Total ram usage:       14 bytes
  2679 ;; Hardware stack levels used: 1
  2680 ;; Hardware stack levels required when called: 1
  2681 ;; This function calls:
  2682 ;;		Nothing
  2683 ;; This function is called by:
  2684 ;;		_decide_color
  2685 ;; This function uses a non-reentrant model
  2686 ;;
  2687                           
  2688                           	psect	text4
  2689   0016AE                     __ptext4:
  2690                           	callstack 0
  2691   0016AE                     ___xxtofl:
  2692                           	callstack 28
  2693                           
  2694                           ;incstack = 0
  2695                           ;___xxtofl@sign stored from wreg
  2696   0016AE  6E09               	movwf	___xxtofl@sign^0,c
  2697   0016B0  5009               	movf	___xxtofl@sign^0,w,c
  2698   0016B2  B4D8               	btfsc	status,2,c
  2699   0016B4  EF5E  F00B         	goto	u2551
  2700   0016B8  EF60  F00B         	goto	u2550
  2701   0016BC                     u2551:
  2702   0016BC  EF82  F00B         	goto	l1133
  2703   0016C0                     u2550:
  2704   0016C0  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  2705   0016C2  EF67  F00B         	goto	u2560
  2706   0016C6  EF65  F00B         	goto	u2561
  2707   0016CA                     u2561:
  2708   0016CA  EF82  F00B         	goto	l1133
  2709   0016CE                     u2560:
  2710   0016CE  C001  F005         	movff	___xxtofl@val,??___xxtofl
  2711   0016D2  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  2712   0016D6  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  2713   0016DA  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  2714   0016DE  1E05               	comf	??___xxtofl^0,f,c
  2715   0016E0  1E06               	comf	(??___xxtofl+1)^0,f,c
  2716   0016E2  1E07               	comf	(??___xxtofl+2)^0,f,c
  2717   0016E4  1E08               	comf	(??___xxtofl+3)^0,f,c
  2718   0016E6  2A05               	incf	??___xxtofl^0,f,c
  2719   0016E8  0E00               	movlw	0
  2720   0016EA  2206               	addwfc	(??___xxtofl+1)^0,f,c
  2721   0016EC  2207               	addwfc	(??___xxtofl+2)^0,f,c
  2722   0016EE  2208               	addwfc	(??___xxtofl+3)^0,f,c
  2723   0016F0  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  2724   0016F4  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  2725   0016F8  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  2726   0016FC  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  2727   001700  EF8A  F00B         	goto	l3051
  2728   001704                     l1133:
  2729   001704  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  2730   001708  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2731   00170C  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2732   001710  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2733   001714                     l3051:
  2734   001714  5001               	movf	___xxtofl@val^0,w,c
  2735   001716  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  2736   001718  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  2737   00171A  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  2738   00171C  A4D8               	btfss	status,2,c
  2739   00171E  EF93  F00B         	goto	u2571
  2740   001722  EF95  F00B         	goto	u2570
  2741   001726                     u2571:
  2742   001726  EF9F  F00B         	goto	l3057
  2743   00172A                     u2570:
  2744   00172A  0E00               	movlw	0
  2745   00172C  6E01               	movwf	?___xxtofl^0,c
  2746   00172E  0E00               	movlw	0
  2747   001730  6E02               	movwf	(?___xxtofl+1)^0,c
  2748   001732  0E00               	movlw	0
  2749   001734  6E03               	movwf	(?___xxtofl+2)^0,c
  2750   001736  0E00               	movlw	0
  2751   001738  6E04               	movwf	(?___xxtofl+3)^0,c
  2752   00173A  EF30  F00C         	goto	l1136
  2753   00173E                     l3057:
  2754   00173E  0E96               	movlw	150
  2755   001740  6E0A               	movwf	___xxtofl@exp^0,c
  2756   001742  EFA9  F00B         	goto	l3061
  2757   001746                     l3059:
  2758   001746  2A0A               	incf	___xxtofl@exp^0,f,c
  2759   001748  90D8               	bcf	status,0,c
  2760   00174A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  2761   00174C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  2762   00174E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  2763   001750  320B               	rrcf	___xxtofl@arg^0,f,c
  2764   001752                     l3061:
  2765   001752  0E00               	movlw	0
  2766   001754  140B               	andwf	___xxtofl@arg^0,w,c
  2767   001756  6E05               	movwf	??___xxtofl^0,c
  2768   001758  0E00               	movlw	0
  2769   00175A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  2770   00175C  6E06               	movwf	(??___xxtofl+1)^0,c
  2771   00175E  0E00               	movlw	0
  2772   001760  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  2773   001762  6E07               	movwf	(??___xxtofl+2)^0,c
  2774   001764  0EFE               	movlw	254
  2775   001766  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  2776   001768  6E08               	movwf	(??___xxtofl+3)^0,c
  2777   00176A  5005               	movf	??___xxtofl^0,w,c
  2778   00176C  1006               	iorwf	(??___xxtofl+1)^0,w,c
  2779   00176E  1007               	iorwf	(??___xxtofl+2)^0,w,c
  2780   001770  1008               	iorwf	(??___xxtofl+3)^0,w,c
  2781   001772  A4D8               	btfss	status,2,c
  2782   001774  EFBE  F00B         	goto	u2581
  2783   001778  EFC0  F00B         	goto	u2580
  2784   00177C                     u2581:
  2785   00177C  EFA3  F00B         	goto	l3059
  2786   001780                     u2580:
  2787   001780  EFCE  F00B         	goto	l1140
  2788   001784                     l3063:
  2789   001784  2A0A               	incf	___xxtofl@exp^0,f,c
  2790   001786  0E01               	movlw	1
  2791   001788  260B               	addwf	___xxtofl@arg^0,f,c
  2792   00178A  0E00               	movlw	0
  2793   00178C  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  2794   00178E  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  2795   001790  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  2796   001792  90D8               	bcf	status,0,c
  2797   001794  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  2798   001796  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  2799   001798  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  2800   00179A  320B               	rrcf	___xxtofl@arg^0,f,c
  2801   00179C                     l1140:
  2802   00179C  0E00               	movlw	0
  2803   00179E  140B               	andwf	___xxtofl@arg^0,w,c
  2804   0017A0  6E05               	movwf	??___xxtofl^0,c
  2805   0017A2  0E00               	movlw	0
  2806   0017A4  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  2807   0017A6  6E06               	movwf	(??___xxtofl+1)^0,c
  2808   0017A8  0E00               	movlw	0
  2809   0017AA  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  2810   0017AC  6E07               	movwf	(??___xxtofl+2)^0,c
  2811   0017AE  0EFF               	movlw	255
  2812   0017B0  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  2813   0017B2  6E08               	movwf	(??___xxtofl+3)^0,c
  2814   0017B4  5005               	movf	??___xxtofl^0,w,c
  2815   0017B6  1006               	iorwf	(??___xxtofl+1)^0,w,c
  2816   0017B8  1007               	iorwf	(??___xxtofl+2)^0,w,c
  2817   0017BA  1008               	iorwf	(??___xxtofl+3)^0,w,c
  2818   0017BC  A4D8               	btfss	status,2,c
  2819   0017BE  EFE3  F00B         	goto	u2591
  2820   0017C2  EFE5  F00B         	goto	u2590
  2821   0017C6                     u2591:
  2822   0017C6  EFC2  F00B         	goto	l3063
  2823   0017CA                     u2590:
  2824   0017CA  EFED  F00B         	goto	l3071
  2825   0017CE                     l3069:
  2826   0017CE  060A               	decf	___xxtofl@exp^0,f,c
  2827   0017D0  90D8               	bcf	status,0,c
  2828   0017D2  360B               	rlcf	___xxtofl@arg^0,f,c
  2829   0017D4  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  2830   0017D6  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  2831   0017D8  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  2832   0017DA                     l3071:
  2833   0017DA  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  2834   0017DC  EFF2  F00B         	goto	u2601
  2835   0017E0  EFF4  F00B         	goto	u2600
  2836   0017E4                     u2601:
  2837   0017E4  EFFC  F00B         	goto	l1147
  2838   0017E8                     u2600:
  2839   0017E8  0E02               	movlw	2
  2840   0017EA  600A               	cpfslt	___xxtofl@exp^0,c
  2841   0017EC  EFFA  F00B         	goto	u2611
  2842   0017F0  EFFC  F00B         	goto	u2610
  2843   0017F4                     u2611:
  2844   0017F4  EFE7  F00B         	goto	l3069
  2845   0017F8                     u2610:
  2846   0017F8                     l1147:
  2847   0017F8  B00A               	btfsc	___xxtofl@exp^0,0,c
  2848   0017FA  EF01  F00C         	goto	u2621
  2849   0017FE  EF03  F00C         	goto	u2620
  2850   001802                     u2621:
  2851   001802  EF04  F00C         	goto	l3077
  2852   001806                     u2620:
  2853   001806  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  2854   001808                     l3077:
  2855   001808  90D8               	bcf	status,0,c
  2856   00180A  320A               	rrcf	___xxtofl@exp^0,f,c
  2857   00180C  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  2858   001810  6A06               	clrf	(??___xxtofl+1)^0,c
  2859   001812  6A07               	clrf	(??___xxtofl+2)^0,c
  2860   001814  6A08               	clrf	(??___xxtofl+3)^0,c
  2861   001816  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  2862   00181A  6A07               	clrf	(??___xxtofl+2)^0,c
  2863   00181C  6A06               	clrf	(??___xxtofl+1)^0,c
  2864   00181E  6A05               	clrf	??___xxtofl^0,c
  2865   001820  5005               	movf	??___xxtofl^0,w,c
  2866   001822  120B               	iorwf	___xxtofl@arg^0,f,c
  2867   001824  5006               	movf	(??___xxtofl+1)^0,w,c
  2868   001826  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  2869   001828  5007               	movf	(??___xxtofl+2)^0,w,c
  2870   00182A  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  2871   00182C  5008               	movf	(??___xxtofl+3)^0,w,c
  2872   00182E  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  2873   001830  5009               	movf	___xxtofl@sign^0,w,c
  2874   001832  B4D8               	btfsc	status,2,c
  2875   001834  EF1E  F00C         	goto	u2631
  2876   001838  EF20  F00C         	goto	u2630
  2877   00183C                     u2631:
  2878   00183C  EF28  F00C         	goto	l3087
  2879   001840                     u2630:
  2880   001840  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  2881   001842  EF27  F00C         	goto	u2640
  2882   001846  EF25  F00C         	goto	u2641
  2883   00184A                     u2641:
  2884   00184A  EF28  F00C         	goto	l3087
  2885   00184E                     u2640:
  2886   00184E  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  2887   001850                     l3087:
  2888   001850  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  2889   001854  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  2890   001858  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  2891   00185C  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  2892   001860                     l1136:
  2893   001860  0012               	return		;funcret
  2894   001862                     __end_of___xxtofl:
  2895                           	callstack 0
  2896                           
  2897 ;; *************** function ___fltol *****************
  2898 ;; Defined at:
  2899 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  2900 ;; Parameters:    Size  Location     Type
  2901 ;;  f1              4   25[COMRAM] unsigned char 
  2902 ;; Auto vars:     Size  Location     Type
  2903 ;;  exp1            1   34[COMRAM] unsigned char 
  2904 ;;  sign1           1   33[COMRAM] unsigned char 
  2905 ;; Return value:  Size  Location     Type
  2906 ;;                  4   25[COMRAM] long 
  2907 ;; Registers used:
  2908 ;;		wreg, status,2, status,0
  2909 ;; Tracked objects:
  2910 ;;		On entry : 0/0
  2911 ;;		On exit  : 0/0
  2912 ;;		Unchanged: 0/0
  2913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2914 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2915 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2916 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2917 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2918 ;;Total ram usage:       10 bytes
  2919 ;; Hardware stack levels used: 1
  2920 ;; Hardware stack levels required when called: 1
  2921 ;; This function calls:
  2922 ;;		Nothing
  2923 ;; This function is called by:
  2924 ;;		_decide_color
  2925 ;; This function uses a non-reentrant model
  2926 ;;
  2927                           
  2928                           	psect	text5
  2929   001B0C                     __ptext5:
  2930                           	callstack 0
  2931   001B0C                     ___fltol:
  2932                           	callstack 28
  2933   001B0C  341C               	rlcf	(___fltol@f1+2)^0,w,c
  2934   001B0E  341D               	rlcf	(___fltol@f1+3)^0,w,c
  2935   001B10  6E23               	movwf	___fltol@exp1^0,c
  2936   001B12  5023               	movf	___fltol@exp1^0,w,c
  2937   001B14  A4D8               	btfss	status,2,c
  2938   001B16  EF8F  F00D         	goto	u2481
  2939   001B1A  EF91  F00D         	goto	u2480
  2940   001B1E                     u2481:
  2941   001B1E  EF9B  F00D         	goto	l3007
  2942   001B22                     u2480:
  2943   001B22                     l3003:
  2944   001B22  0E00               	movlw	0
  2945   001B24  6E1A               	movwf	?___fltol^0,c
  2946   001B26  0E00               	movlw	0
  2947   001B28  6E1B               	movwf	(?___fltol+1)^0,c
  2948   001B2A  0E00               	movlw	0
  2949   001B2C  6E1C               	movwf	(?___fltol+2)^0,c
  2950   001B2E  0E00               	movlw	0
  2951   001B30  6E1D               	movwf	(?___fltol+3)^0,c
  2952   001B32  EF08  F00E         	goto	l775
  2953   001B36                     l3007:
  2954   001B36  C01A  F01E         	movff	___fltol@f1,??___fltol
  2955   001B3A  C01B  F01F         	movff	___fltol@f1+1,??___fltol+1
  2956   001B3E  C01C  F020         	movff	___fltol@f1+2,??___fltol+2
  2957   001B42  C01D  F021         	movff	___fltol@f1+3,??___fltol+3
  2958   001B46  0E20               	movlw	32
  2959   001B48  EFAB  F00D         	goto	u2490
  2960   001B4C                     u2495:
  2961   001B4C  90D8               	bcf	status,0,c
  2962   001B4E  3221               	rrcf	(??___fltol+3)^0,f,c
  2963   001B50  3220               	rrcf	(??___fltol+2)^0,f,c
  2964   001B52  321F               	rrcf	(??___fltol+1)^0,f,c
  2965   001B54  321E               	rrcf	??___fltol^0,f,c
  2966   001B56                     u2490:
  2967   001B56  2EE8               	decfsz	wreg,f,c
  2968   001B58  EFA6  F00D         	goto	u2495
  2969   001B5C  501E               	movf	??___fltol^0,w,c
  2970   001B5E  6E22               	movwf	___fltol@sign1^0,c
  2971   001B60  8E1C               	bsf	(___fltol@f1+2)^0,7,c
  2972   001B62  0EFF               	movlw	255
  2973   001B64  161A               	andwf	___fltol@f1^0,f,c
  2974   001B66  0EFF               	movlw	255
  2975   001B68  161B               	andwf	(___fltol@f1+1)^0,f,c
  2976   001B6A  0EFF               	movlw	255
  2977   001B6C  161C               	andwf	(___fltol@f1+2)^0,f,c
  2978   001B6E  0E00               	movlw	0
  2979   001B70  161D               	andwf	(___fltol@f1+3)^0,f,c
  2980   001B72  0E96               	movlw	150
  2981   001B74  5E23               	subwf	___fltol@exp1^0,f,c
  2982   001B76  BE23               	btfsc	___fltol@exp1^0,7,c
  2983   001B78  EFC2  F00D         	goto	u2500
  2984   001B7C  EFC0  F00D         	goto	u2501
  2985   001B80                     u2501:
  2986   001B80  EFD8  F00D         	goto	l3027
  2987   001B84                     u2500:
  2988   001B84  5023               	movf	___fltol@exp1^0,w,c
  2989   001B86  0A80               	xorlw	128
  2990   001B88  0F97               	addlw	151
  2991   001B8A  B0D8               	btfsc	status,0,c
  2992   001B8C  EFCA  F00D         	goto	u2511
  2993   001B90  EFCC  F00D         	goto	u2510
  2994   001B94                     u2511:
  2995   001B94  EFCE  F00D         	goto	l3023
  2996   001B98                     u2510:
  2997   001B98  EF91  F00D         	goto	l3003
  2998   001B9C                     l3023:
  2999   001B9C  90D8               	bcf	status,0,c
  3000   001B9E  321D               	rrcf	(___fltol@f1+3)^0,f,c
  3001   001BA0  321C               	rrcf	(___fltol@f1+2)^0,f,c
  3002   001BA2  321B               	rrcf	(___fltol@f1+1)^0,f,c
  3003   001BA4  321A               	rrcf	___fltol@f1^0,f,c
  3004   001BA6  3E23               	incfsz	___fltol@exp1^0,f,c
  3005   001BA8  EFCE  F00D         	goto	l3023
  3006   001BAC  EFF0  F00D         	goto	l3037
  3007   001BB0                     l3027:
  3008   001BB0  0E1F               	movlw	31
  3009   001BB2  6423               	cpfsgt	___fltol@exp1^0,c
  3010   001BB4  EFDE  F00D         	goto	u2521
  3011   001BB8  EFE0  F00D         	goto	u2520
  3012   001BBC                     u2521:
  3013   001BBC  EFE8  F00D         	goto	l3035
  3014   001BC0                     u2520:
  3015   001BC0  EF91  F00D         	goto	l3003
  3016   001BC4                     l3033:
  3017   001BC4  90D8               	bcf	status,0,c
  3018   001BC6  361A               	rlcf	___fltol@f1^0,f,c
  3019   001BC8  361B               	rlcf	(___fltol@f1+1)^0,f,c
  3020   001BCA  361C               	rlcf	(___fltol@f1+2)^0,f,c
  3021   001BCC  361D               	rlcf	(___fltol@f1+3)^0,f,c
  3022   001BCE  0623               	decf	___fltol@exp1^0,f,c
  3023   001BD0                     l3035:
  3024   001BD0  5023               	movf	___fltol@exp1^0,w,c
  3025   001BD2  A4D8               	btfss	status,2,c
  3026   001BD4  EFEE  F00D         	goto	u2531
  3027   001BD8  EFF0  F00D         	goto	u2530
  3028   001BDC                     u2531:
  3029   001BDC  EFE2  F00D         	goto	l3033
  3030   001BE0                     u2530:
  3031   001BE0                     l3037:
  3032   001BE0  5022               	movf	___fltol@sign1^0,w,c
  3033   001BE2  B4D8               	btfsc	status,2,c
  3034   001BE4  EFF6  F00D         	goto	u2541
  3035   001BE8  EFF8  F00D         	goto	u2540
  3036   001BEC                     u2541:
  3037   001BEC  EF00  F00E         	goto	l3041
  3038   001BF0                     u2540:
  3039   001BF0  1E1D               	comf	(___fltol@f1+3)^0,f,c
  3040   001BF2  1E1C               	comf	(___fltol@f1+2)^0,f,c
  3041   001BF4  1E1B               	comf	(___fltol@f1+1)^0,f,c
  3042   001BF6  6C1A               	negf	___fltol@f1^0,c
  3043   001BF8  0E00               	movlw	0
  3044   001BFA  221B               	addwfc	(___fltol@f1+1)^0,f,c
  3045   001BFC  221C               	addwfc	(___fltol@f1+2)^0,f,c
  3046   001BFE  221D               	addwfc	(___fltol@f1+3)^0,f,c
  3047   001C00                     l3041:
  3048   001C00  C01A  F01A         	movff	___fltol@f1,?___fltol
  3049   001C04  C01B  F01B         	movff	___fltol@f1+1,?___fltol+1
  3050   001C08  C01C  F01C         	movff	___fltol@f1+2,?___fltol+2
  3051   001C0C  C01D  F01D         	movff	___fltol@f1+3,?___fltol+3
  3052   001C10                     l775:
  3053   001C10  0012               	return		;funcret
  3054   001C12                     __end_of___fltol:
  3055                           	callstack 0
  3056                           
  3057 ;; *************** function ___flmul *****************
  3058 ;; Defined at:
  3059 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  3060 ;; Parameters:    Size  Location     Type
  3061 ;;  b               4    0[COMRAM] long 
  3062 ;;  a               4    4[COMRAM] long 
  3063 ;; Auto vars:     Size  Location     Type
  3064 ;;  prod            4   19[COMRAM] struct .
  3065 ;;  grs             4   13[COMRAM] unsigned long 
  3066 ;;  temp            2   23[COMRAM] struct .
  3067 ;;  bexp            1   18[COMRAM] unsigned char 
  3068 ;;  aexp            1   17[COMRAM] unsigned char 
  3069 ;;  sign            1   12[COMRAM] unsigned char 
  3070 ;; Return value:  Size  Location     Type
  3071 ;;                  4    0[COMRAM] unsigned char 
  3072 ;; Registers used:
  3073 ;;		wreg, status,2, status,0, prodl, prodh
  3074 ;; Tracked objects:
  3075 ;;		On entry : 0/0
  3076 ;;		On exit  : 0/0
  3077 ;;		Unchanged: 0/0
  3078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3079 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3080 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3081 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3082 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3083 ;;Total ram usage:       25 bytes
  3084 ;; Hardware stack levels used: 1
  3085 ;; Hardware stack levels required when called: 1
  3086 ;; This function calls:
  3087 ;;		Nothing
  3088 ;; This function is called by:
  3089 ;;		_decide_color
  3090 ;; This function uses a non-reentrant model
  3091 ;;
  3092                           
  3093                           	psect	text6
  3094   000D10                     __ptext6:
  3095                           	callstack 0
  3096   000D10                     ___flmul:
  3097                           	callstack 28
  3098   000D10  5004               	movf	(___flmul@b+3)^0,w,c
  3099   000D12  0B80               	andlw	128
  3100   000D14  6E0D               	movwf	___flmul@sign^0,c
  3101   000D16  5004               	movf	(___flmul@b+3)^0,w,c
  3102   000D18  2404               	addwf	(___flmul@b+3)^0,w,c
  3103   000D1A  6E13               	movwf	___flmul@bexp^0,c
  3104   000D1C  AE03               	btfss	(___flmul@b+2)^0,7,c
  3105   000D1E  EF93  F006         	goto	u2291
  3106   000D22  EF95  F006         	goto	u2290
  3107   000D26                     u2291:
  3108   000D26  EF96  F006         	goto	l2877
  3109   000D2A                     u2290:
  3110   000D2A  8013               	bsf	___flmul@bexp^0,0,c
  3111   000D2C                     l2877:
  3112   000D2C  5013               	movf	___flmul@bexp^0,w,c
  3113   000D2E  B4D8               	btfsc	status,2,c
  3114   000D30  EF9C  F006         	goto	u2301
  3115   000D34  EF9E  F006         	goto	u2300
  3116   000D38                     u2301:
  3117   000D38  EFB1  F006         	goto	l2885
  3118   000D3C                     u2300:
  3119   000D3C  2813               	incf	___flmul@bexp^0,w,c
  3120   000D3E  A4D8               	btfss	status,2,c
  3121   000D40  EFA4  F006         	goto	u2311
  3122   000D44  EFA6  F006         	goto	u2310
  3123   000D48                     u2311:
  3124   000D48  EFAE  F006         	goto	l2883
  3125   000D4C                     u2310:
  3126   000D4C  0E00               	movlw	0
  3127   000D4E  6E01               	movwf	___flmul@b^0,c
  3128   000D50  0E00               	movlw	0
  3129   000D52  6E02               	movwf	(___flmul@b+1)^0,c
  3130   000D54  0E00               	movlw	0
  3131   000D56  6E03               	movwf	(___flmul@b+2)^0,c
  3132   000D58  0E00               	movlw	0
  3133   000D5A  6E04               	movwf	(___flmul@b+3)^0,c
  3134   000D5C                     l2883:
  3135   000D5C  8E03               	bsf	(___flmul@b+2)^0,7,c
  3136   000D5E  EFB9  F006         	goto	l2887
  3137   000D62                     l2885:
  3138   000D62  0E00               	movlw	0
  3139   000D64  6E01               	movwf	___flmul@b^0,c
  3140   000D66  0E00               	movlw	0
  3141   000D68  6E02               	movwf	(___flmul@b+1)^0,c
  3142   000D6A  0E00               	movlw	0
  3143   000D6C  6E03               	movwf	(___flmul@b+2)^0,c
  3144   000D6E  0E00               	movlw	0
  3145   000D70  6E04               	movwf	(___flmul@b+3)^0,c
  3146   000D72                     l2887:
  3147   000D72  5008               	movf	(___flmul@a+3)^0,w,c
  3148   000D74  0B80               	andlw	128
  3149   000D76  1A0D               	xorwf	___flmul@sign^0,f,c
  3150   000D78  5008               	movf	(___flmul@a+3)^0,w,c
  3151   000D7A  2408               	addwf	(___flmul@a+3)^0,w,c
  3152   000D7C  6E12               	movwf	___flmul@aexp^0,c
  3153   000D7E  AE07               	btfss	(___flmul@a+2)^0,7,c
  3154   000D80  EFC4  F006         	goto	u2321
  3155   000D84  EFC6  F006         	goto	u2320
  3156   000D88                     u2321:
  3157   000D88  EFC7  F006         	goto	l2895
  3158   000D8C                     u2320:
  3159   000D8C  8012               	bsf	___flmul@aexp^0,0,c
  3160   000D8E                     l2895:
  3161   000D8E  5012               	movf	___flmul@aexp^0,w,c
  3162   000D90  B4D8               	btfsc	status,2,c
  3163   000D92  EFCD  F006         	goto	u2331
  3164   000D96  EFCF  F006         	goto	u2330
  3165   000D9A                     u2331:
  3166   000D9A  EFE2  F006         	goto	l2903
  3167   000D9E                     u2330:
  3168   000D9E  2812               	incf	___flmul@aexp^0,w,c
  3169   000DA0  A4D8               	btfss	status,2,c
  3170   000DA2  EFD5  F006         	goto	u2341
  3171   000DA6  EFD7  F006         	goto	u2340
  3172   000DAA                     u2341:
  3173   000DAA  EFDF  F006         	goto	l2901
  3174   000DAE                     u2340:
  3175   000DAE  0E00               	movlw	0
  3176   000DB0  6E05               	movwf	___flmul@a^0,c
  3177   000DB2  0E00               	movlw	0
  3178   000DB4  6E06               	movwf	(___flmul@a+1)^0,c
  3179   000DB6  0E00               	movlw	0
  3180   000DB8  6E07               	movwf	(___flmul@a+2)^0,c
  3181   000DBA  0E00               	movlw	0
  3182   000DBC  6E08               	movwf	(___flmul@a+3)^0,c
  3183   000DBE                     l2901:
  3184   000DBE  8E07               	bsf	(___flmul@a+2)^0,7,c
  3185   000DC0  EFEA  F006         	goto	l1092
  3186   000DC4                     l2903:
  3187   000DC4  0E00               	movlw	0
  3188   000DC6  6E05               	movwf	___flmul@a^0,c
  3189   000DC8  0E00               	movlw	0
  3190   000DCA  6E06               	movwf	(___flmul@a+1)^0,c
  3191   000DCC  0E00               	movlw	0
  3192   000DCE  6E07               	movwf	(___flmul@a+2)^0,c
  3193   000DD0  0E00               	movlw	0
  3194   000DD2  6E08               	movwf	(___flmul@a+3)^0,c
  3195   000DD4                     l1092:
  3196   000DD4  5012               	movf	___flmul@aexp^0,w,c
  3197   000DD6  B4D8               	btfsc	status,2,c
  3198   000DD8  EFF0  F006         	goto	u2351
  3199   000DDC  EFF2  F006         	goto	u2350
  3200   000DE0                     u2351:
  3201   000DE0  EFFA  F006         	goto	l2907
  3202   000DE4                     u2350:
  3203   000DE4  5013               	movf	___flmul@bexp^0,w,c
  3204   000DE6  A4D8               	btfss	status,2,c
  3205   000DE8  EFF8  F006         	goto	u2361
  3206   000DEC  EFFA  F006         	goto	u2360
  3207   000DF0                     u2361:
  3208   000DF0  EF04  F007         	goto	l2911
  3209   000DF4                     u2360:
  3210   000DF4                     l2907:
  3211   000DF4  0E00               	movlw	0
  3212   000DF6  6E01               	movwf	?___flmul^0,c
  3213   000DF8  0E00               	movlw	0
  3214   000DFA  6E02               	movwf	(?___flmul+1)^0,c
  3215   000DFC  0E00               	movlw	0
  3216   000DFE  6E03               	movwf	(?___flmul+2)^0,c
  3217   000E00  0E00               	movlw	0
  3218   000E02  6E04               	movwf	(?___flmul+3)^0,c
  3219   000E04  EF9C  F008         	goto	l1096
  3220   000E08                     l2911:
  3221   000E08  5007               	movf	(___flmul@a+2)^0,w,c
  3222   000E0A  0201               	mulwf	___flmul@b^0,c
  3223   000E0C  CFF3 F018          	movff	prodl,___flmul@temp
  3224   000E10  CFF4 F019          	movff	prodh,___flmul@temp+1
  3225   000E14  5018               	movf	___flmul@temp^0,w,c
  3226   000E16  6E0E               	movwf	___flmul@grs^0,c
  3227   000E18  6A0F               	clrf	(___flmul@grs+1)^0,c
  3228   000E1A  6A10               	clrf	(___flmul@grs+2)^0,c
  3229   000E1C  6A11               	clrf	(___flmul@grs+3)^0,c
  3230   000E1E  5019               	movf	(___flmul@temp+1)^0,w,c
  3231   000E20  6E14               	movwf	___flmul@prod^0,c
  3232   000E22  6A15               	clrf	(___flmul@prod+1)^0,c
  3233   000E24  6A16               	clrf	(___flmul@prod+2)^0,c
  3234   000E26  6A17               	clrf	(___flmul@prod+3)^0,c
  3235   000E28  5006               	movf	(___flmul@a+1)^0,w,c
  3236   000E2A  0202               	mulwf	(___flmul@b+1)^0,c
  3237   000E2C  CFF3 F018          	movff	prodl,___flmul@temp
  3238   000E30  CFF4 F019          	movff	prodh,___flmul@temp+1
  3239   000E34  5018               	movf	___flmul@temp^0,w,c
  3240   000E36  260E               	addwf	___flmul@grs^0,f,c
  3241   000E38  0E00               	movlw	0
  3242   000E3A  220F               	addwfc	(___flmul@grs+1)^0,f,c
  3243   000E3C  2210               	addwfc	(___flmul@grs+2)^0,f,c
  3244   000E3E  2211               	addwfc	(___flmul@grs+3)^0,f,c
  3245   000E40  5019               	movf	(___flmul@temp+1)^0,w,c
  3246   000E42  2614               	addwf	___flmul@prod^0,f,c
  3247   000E44  0E00               	movlw	0
  3248   000E46  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3249   000E48  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3250   000E4A  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3251   000E4C  5005               	movf	___flmul@a^0,w,c
  3252   000E4E  0203               	mulwf	(___flmul@b+2)^0,c
  3253   000E50  CFF3 F018          	movff	prodl,___flmul@temp
  3254   000E54  CFF4 F019          	movff	prodh,___flmul@temp+1
  3255   000E58  5018               	movf	___flmul@temp^0,w,c
  3256   000E5A  260E               	addwf	___flmul@grs^0,f,c
  3257   000E5C  0E00               	movlw	0
  3258   000E5E  220F               	addwfc	(___flmul@grs+1)^0,f,c
  3259   000E60  2210               	addwfc	(___flmul@grs+2)^0,f,c
  3260   000E62  2211               	addwfc	(___flmul@grs+3)^0,f,c
  3261   000E64  5019               	movf	(___flmul@temp+1)^0,w,c
  3262   000E66  2614               	addwf	___flmul@prod^0,f,c
  3263   000E68  0E00               	movlw	0
  3264   000E6A  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3265   000E6C  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3266   000E6E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3267   000E70  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  3268   000E74  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  3269   000E78  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  3270   000E7C  6A0E               	clrf	___flmul@grs^0,c
  3271   000E7E  5005               	movf	___flmul@a^0,w,c
  3272   000E80  0202               	mulwf	(___flmul@b+1)^0,c
  3273   000E82  CFF3 F018          	movff	prodl,___flmul@temp
  3274   000E86  CFF4 F019          	movff	prodh,___flmul@temp+1
  3275   000E8A  5018               	movf	___flmul@temp^0,w,c
  3276   000E8C  260E               	addwf	___flmul@grs^0,f,c
  3277   000E8E  5019               	movf	(___flmul@temp+1)^0,w,c
  3278   000E90  220F               	addwfc	(___flmul@grs+1)^0,f,c
  3279   000E92  0E00               	movlw	0
  3280   000E94  2210               	addwfc	(___flmul@grs+2)^0,f,c
  3281   000E96  0E00               	movlw	0
  3282   000E98  2211               	addwfc	(___flmul@grs+3)^0,f,c
  3283   000E9A  5006               	movf	(___flmul@a+1)^0,w,c
  3284   000E9C  0201               	mulwf	___flmul@b^0,c
  3285   000E9E  CFF3 F018          	movff	prodl,___flmul@temp
  3286   000EA2  CFF4 F019          	movff	prodh,___flmul@temp+1
  3287   000EA6  5018               	movf	___flmul@temp^0,w,c
  3288   000EA8  260E               	addwf	___flmul@grs^0,f,c
  3289   000EAA  5019               	movf	(___flmul@temp+1)^0,w,c
  3290   000EAC  220F               	addwfc	(___flmul@grs+1)^0,f,c
  3291   000EAE  0E00               	movlw	0
  3292   000EB0  2210               	addwfc	(___flmul@grs+2)^0,f,c
  3293   000EB2  0E00               	movlw	0
  3294   000EB4  2211               	addwfc	(___flmul@grs+3)^0,f,c
  3295   000EB6  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  3296   000EBA  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  3297   000EBE  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  3298   000EC2  6A0E               	clrf	___flmul@grs^0,c
  3299   000EC4  5005               	movf	___flmul@a^0,w,c
  3300   000EC6  0201               	mulwf	___flmul@b^0,c
  3301   000EC8  CFF3 F018          	movff	prodl,___flmul@temp
  3302   000ECC  CFF4 F019          	movff	prodh,___flmul@temp+1
  3303   000ED0  5018               	movf	___flmul@temp^0,w,c
  3304   000ED2  260E               	addwf	___flmul@grs^0,f,c
  3305   000ED4  5019               	movf	(___flmul@temp+1)^0,w,c
  3306   000ED6  220F               	addwfc	(___flmul@grs+1)^0,f,c
  3307   000ED8  0E00               	movlw	0
  3308   000EDA  2210               	addwfc	(___flmul@grs+2)^0,f,c
  3309   000EDC  0E00               	movlw	0
  3310   000EDE  2211               	addwfc	(___flmul@grs+3)^0,f,c
  3311   000EE0  5007               	movf	(___flmul@a+2)^0,w,c
  3312   000EE2  0202               	mulwf	(___flmul@b+1)^0,c
  3313   000EE4  CFF3 F018          	movff	prodl,___flmul@temp
  3314   000EE8  CFF4 F019          	movff	prodh,___flmul@temp+1
  3315   000EEC  5018               	movf	___flmul@temp^0,w,c
  3316   000EEE  2614               	addwf	___flmul@prod^0,f,c
  3317   000EF0  5019               	movf	(___flmul@temp+1)^0,w,c
  3318   000EF2  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3319   000EF4  0E00               	movlw	0
  3320   000EF6  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3321   000EF8  0E00               	movlw	0
  3322   000EFA  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3323   000EFC  5006               	movf	(___flmul@a+1)^0,w,c
  3324   000EFE  0203               	mulwf	(___flmul@b+2)^0,c
  3325   000F00  CFF3 F018          	movff	prodl,___flmul@temp
  3326   000F04  CFF4 F019          	movff	prodh,___flmul@temp+1
  3327   000F08  5018               	movf	___flmul@temp^0,w,c
  3328   000F0A  2614               	addwf	___flmul@prod^0,f,c
  3329   000F0C  5019               	movf	(___flmul@temp+1)^0,w,c
  3330   000F0E  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3331   000F10  0E00               	movlw	0
  3332   000F12  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3333   000F14  0E00               	movlw	0
  3334   000F16  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3335   000F18  5007               	movf	(___flmul@a+2)^0,w,c
  3336   000F1A  0203               	mulwf	(___flmul@b+2)^0,c
  3337   000F1C  CFF3 F018          	movff	prodl,___flmul@temp
  3338   000F20  CFF4 F019          	movff	prodh,___flmul@temp+1
  3339   000F24  5018               	movf	___flmul@temp^0,w,c
  3340   000F26  6E09               	movwf	??___flmul^0,c
  3341   000F28  5019               	movf	(___flmul@temp+1)^0,w,c
  3342   000F2A  6E0A               	movwf	(??___flmul+1)^0,c
  3343   000F2C  6A0B               	clrf	(??___flmul+2)^0,c
  3344   000F2E  6A0C               	clrf	(??___flmul+3)^0,c
  3345   000F30  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  3346   000F34  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  3347   000F38  C009  F00A         	movff	??___flmul,??___flmul+1
  3348   000F3C  6A09               	clrf	??___flmul^0,c
  3349   000F3E  5009               	movf	??___flmul^0,w,c
  3350   000F40  2614               	addwf	___flmul@prod^0,f,c
  3351   000F42  500A               	movf	(??___flmul+1)^0,w,c
  3352   000F44  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3353   000F46  500B               	movf	(??___flmul+2)^0,w,c
  3354   000F48  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3355   000F4A  500C               	movf	(??___flmul+3)^0,w,c
  3356   000F4C  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3357   000F4E  C00E  F009         	movff	___flmul@grs,??___flmul
  3358   000F52  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  3359   000F56  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  3360   000F5A  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  3361   000F5E  0E19               	movlw	25
  3362   000F60  EFB7  F007         	goto	u2370
  3363   000F64                     u2375:
  3364   000F64  90D8               	bcf	status,0,c
  3365   000F66  320C               	rrcf	(??___flmul+3)^0,f,c
  3366   000F68  320B               	rrcf	(??___flmul+2)^0,f,c
  3367   000F6A  320A               	rrcf	(??___flmul+1)^0,f,c
  3368   000F6C  3209               	rrcf	??___flmul^0,f,c
  3369   000F6E                     u2370:
  3370   000F6E  2EE8               	decfsz	wreg,f,c
  3371   000F70  EFB2  F007         	goto	u2375
  3372   000F74  5009               	movf	??___flmul^0,w,c
  3373   000F76  2614               	addwf	___flmul@prod^0,f,c
  3374   000F78  500A               	movf	(??___flmul+1)^0,w,c
  3375   000F7A  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3376   000F7C  500B               	movf	(??___flmul+2)^0,w,c
  3377   000F7E  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3378   000F80  500C               	movf	(??___flmul+3)^0,w,c
  3379   000F82  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3380   000F84  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  3381   000F88  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  3382   000F8C  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  3383   000F90  6A0E               	clrf	___flmul@grs^0,c
  3384   000F92  5012               	movf	___flmul@aexp^0,w,c
  3385   000F94  C013  F009         	movff	___flmul@bexp,??___flmul
  3386   000F98  6A0A               	clrf	(??___flmul+1)^0,c
  3387   000F9A  2609               	addwf	??___flmul^0,f,c
  3388   000F9C  0E00               	movlw	0
  3389   000F9E  220A               	addwfc	(??___flmul+1)^0,f,c
  3390   000FA0  0E82               	movlw	130
  3391   000FA2  2409               	addwf	??___flmul^0,w,c
  3392   000FA4  6E18               	movwf	___flmul@temp^0,c
  3393   000FA6  0EFF               	movlw	255
  3394   000FA8  200A               	addwfc	(??___flmul+1)^0,w,c
  3395   000FAA  6E19               	movwf	(___flmul@temp+1)^0,c
  3396   000FAC  EFED  F007         	goto	l2959
  3397   000FB0                     l2953:
  3398   000FB0  90D8               	bcf	status,0,c
  3399   000FB2  3614               	rlcf	___flmul@prod^0,f,c
  3400   000FB4  3615               	rlcf	(___flmul@prod+1)^0,f,c
  3401   000FB6  3616               	rlcf	(___flmul@prod+2)^0,f,c
  3402   000FB8  3617               	rlcf	(___flmul@prod+3)^0,f,c
  3403   000FBA  AE11               	btfss	(___flmul@grs+3)^0,7,c
  3404   000FBC  EFE2  F007         	goto	u2381
  3405   000FC0  EFE4  F007         	goto	u2380
  3406   000FC4                     u2381:
  3407   000FC4  EFE5  F007         	goto	l1099
  3408   000FC8                     u2380:
  3409   000FC8  8014               	bsf	___flmul@prod^0,0,c
  3410   000FCA                     l1099:
  3411   000FCA  90D8               	bcf	status,0,c
  3412   000FCC  360E               	rlcf	___flmul@grs^0,f,c
  3413   000FCE  360F               	rlcf	(___flmul@grs+1)^0,f,c
  3414   000FD0  3610               	rlcf	(___flmul@grs+2)^0,f,c
  3415   000FD2  3611               	rlcf	(___flmul@grs+3)^0,f,c
  3416   000FD4  0618               	decf	___flmul@temp^0,f,c
  3417   000FD6  A0D8               	btfss	status,0,c
  3418   000FD8  0619               	decf	(___flmul@temp+1)^0,f,c
  3419   000FDA                     l2959:
  3420   000FDA  AE16               	btfss	(___flmul@prod+2)^0,7,c
  3421   000FDC  EFF2  F007         	goto	u2391
  3422   000FE0  EFF4  F007         	goto	u2390
  3423   000FE4                     u2391:
  3424   000FE4  EFD8  F007         	goto	l2953
  3425   000FE8                     u2390:
  3426   000FE8  0E00               	movlw	0
  3427   000FEA  6E12               	movwf	___flmul@aexp^0,c
  3428   000FEC  AE11               	btfss	(___flmul@grs+3)^0,7,c
  3429   000FEE  EFFB  F007         	goto	u2401
  3430   000FF2  EFFD  F007         	goto	u2400
  3431   000FF6                     u2401:
  3432   000FF6  EF21  F008         	goto	l1101
  3433   000FFA                     u2400:
  3434   000FFA  0EFF               	movlw	255
  3435   000FFC  140E               	andwf	___flmul@grs^0,w,c
  3436   000FFE  6E09               	movwf	??___flmul^0,c
  3437   001000  0EFF               	movlw	255
  3438   001002  140F               	andwf	(___flmul@grs+1)^0,w,c
  3439   001004  6E0A               	movwf	(??___flmul+1)^0,c
  3440   001006  0EFF               	movlw	255
  3441   001008  1410               	andwf	(___flmul@grs+2)^0,w,c
  3442   00100A  6E0B               	movwf	(??___flmul+2)^0,c
  3443   00100C  0E7F               	movlw	127
  3444   00100E  1411               	andwf	(___flmul@grs+3)^0,w,c
  3445   001010  6E0C               	movwf	(??___flmul+3)^0,c
  3446   001012  5009               	movf	??___flmul^0,w,c
  3447   001014  100A               	iorwf	(??___flmul+1)^0,w,c
  3448   001016  100B               	iorwf	(??___flmul+2)^0,w,c
  3449   001018  100C               	iorwf	(??___flmul+3)^0,w,c
  3450   00101A  B4D8               	btfsc	status,2,c
  3451   00101C  EF12  F008         	goto	u2411
  3452   001020  EF14  F008         	goto	u2410
  3453   001024                     u2411:
  3454   001024  EF18  F008         	goto	l1102
  3455   001028                     u2410:
  3456   001028                     l2967:
  3457   001028  0E01               	movlw	1
  3458   00102A  6E12               	movwf	___flmul@aexp^0,c
  3459   00102C  EF21  F008         	goto	l1101
  3460   001030                     l1102:
  3461   001030  A014               	btfss	___flmul@prod^0,0,c
  3462   001032  EF1D  F008         	goto	u2421
  3463   001036  EF1F  F008         	goto	u2420
  3464   00103A                     u2421:
  3465   00103A  EF21  F008         	goto	l1101
  3466   00103E                     u2420:
  3467   00103E  EF14  F008         	goto	l2967
  3468   001042                     l1101:
  3469   001042  5012               	movf	___flmul@aexp^0,w,c
  3470   001044  B4D8               	btfsc	status,2,c
  3471   001046  EF27  F008         	goto	u2431
  3472   00104A  EF29  F008         	goto	u2430
  3473   00104E                     u2431:
  3474   00104E  EF4D  F008         	goto	l2979
  3475   001052                     u2430:
  3476   001052  0E01               	movlw	1
  3477   001054  2614               	addwf	___flmul@prod^0,f,c
  3478   001056  0E00               	movlw	0
  3479   001058  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3480   00105A  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3481   00105C  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3482   00105E  A017               	btfss	(___flmul@prod+3)^0,0,c
  3483   001060  EF34  F008         	goto	u2441
  3484   001064  EF36  F008         	goto	u2440
  3485   001068                     u2441:
  3486   001068  EF4D  F008         	goto	l2979
  3487   00106C                     u2440:
  3488   00106C  C014  F009         	movff	___flmul@prod,??___flmul
  3489   001070  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  3490   001074  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  3491   001078  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  3492   00107C  340C               	rlcf	(??___flmul+3)^0,w,c
  3493   00107E  320C               	rrcf	(??___flmul+3)^0,f,c
  3494   001080  320B               	rrcf	(??___flmul+2)^0,f,c
  3495   001082  320A               	rrcf	(??___flmul+1)^0,f,c
  3496   001084  3209               	rrcf	??___flmul^0,f,c
  3497   001086  C009  F014         	movff	??___flmul,___flmul@prod
  3498   00108A  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  3499   00108E  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  3500   001092  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  3501   001096  4A18               	infsnz	___flmul@temp^0,f,c
  3502   001098  2A19               	incf	(___flmul@temp+1)^0,f,c
  3503   00109A                     l2979:
  3504   00109A  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  3505   00109C  EF58  F008         	goto	u2451
  3506   0010A0  5019               	movf	(___flmul@temp+1)^0,w,c
  3507   0010A2  E108               	bnz	u2450
  3508   0010A4  2818               	incf	___flmul@temp^0,w,c
  3509   0010A6  A0D8               	btfss	status,0,c
  3510   0010A8  EF58  F008         	goto	u2451
  3511   0010AC  EF5A  F008         	goto	u2450
  3512   0010B0                     u2451:
  3513   0010B0  EF64  F008         	goto	l2983
  3514   0010B4                     u2450:
  3515   0010B4  0E00               	movlw	0
  3516   0010B6  6E14               	movwf	___flmul@prod^0,c
  3517   0010B8  0E00               	movlw	0
  3518   0010BA  6E15               	movwf	(___flmul@prod+1)^0,c
  3519   0010BC  0E80               	movlw	128
  3520   0010BE  6E16               	movwf	(___flmul@prod+2)^0,c
  3521   0010C0  0E7F               	movlw	127
  3522   0010C2  6E17               	movwf	(___flmul@prod+3)^0,c
  3523   0010C4  EF92  F008         	goto	l2995
  3524   0010C8                     l2983:
  3525   0010C8  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  3526   0010CA  EF71  F008         	goto	u2460
  3527   0010CE  5019               	movf	(___flmul@temp+1)^0,w,c
  3528   0010D0  E106               	bnz	u2461
  3529   0010D2  0418               	decf	___flmul@temp^0,w,c
  3530   0010D4  B0D8               	btfsc	status,0,c
  3531   0010D6  EF6F  F008         	goto	u2461
  3532   0010DA  EF71  F008         	goto	u2460
  3533   0010DE                     u2461:
  3534   0010DE  EF7D  F008         	goto	l1109
  3535   0010E2                     u2460:
  3536   0010E2  0E00               	movlw	0
  3537   0010E4  6E14               	movwf	___flmul@prod^0,c
  3538   0010E6  0E00               	movlw	0
  3539   0010E8  6E15               	movwf	(___flmul@prod+1)^0,c
  3540   0010EA  0E00               	movlw	0
  3541   0010EC  6E16               	movwf	(___flmul@prod+2)^0,c
  3542   0010EE  0E00               	movlw	0
  3543   0010F0  6E17               	movwf	(___flmul@prod+3)^0,c
  3544   0010F2  0E00               	movlw	0
  3545   0010F4  6E0D               	movwf	___flmul@sign^0,c
  3546   0010F6  EF92  F008         	goto	l2995
  3547   0010FA                     l1109:
  3548   0010FA  C018  F013         	movff	___flmul@temp,___flmul@bexp
  3549   0010FE  0EFF               	movlw	255
  3550   001100  1614               	andwf	___flmul@prod^0,f,c
  3551   001102  0EFF               	movlw	255
  3552   001104  1615               	andwf	(___flmul@prod+1)^0,f,c
  3553   001106  0E7F               	movlw	127
  3554   001108  1616               	andwf	(___flmul@prod+2)^0,f,c
  3555   00110A  0E00               	movlw	0
  3556   00110C  1617               	andwf	(___flmul@prod+3)^0,f,c
  3557   00110E  A013               	btfss	___flmul@bexp^0,0,c
  3558   001110  EF8C  F008         	goto	u2471
  3559   001114  EF8E  F008         	goto	u2470
  3560   001118                     u2471:
  3561   001118  EF8F  F008         	goto	l2993
  3562   00111C                     u2470:
  3563   00111C  8E16               	bsf	(___flmul@prod+2)^0,7,c
  3564   00111E                     l2993:
  3565   00111E  90D8               	bcf	status,0,c
  3566   001120  3013               	rrcf	___flmul@bexp^0,w,c
  3567   001122  6E17               	movwf	(___flmul@prod+3)^0,c
  3568   001124                     l2995:
  3569   001124  500D               	movf	___flmul@sign^0,w,c
  3570   001126  1217               	iorwf	(___flmul@prod+3)^0,f,c
  3571   001128  C014  F001         	movff	___flmul@prod,?___flmul
  3572   00112C  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  3573   001130  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  3574   001134  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  3575   001138                     l1096:
  3576   001138  0012               	return		;funcret
  3577   00113A                     __end_of___flmul:
  3578                           	callstack 0
  3579                           
  3580 ;; *************** function ___fldiv *****************
  3581 ;; Defined at:
  3582 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  3583 ;; Parameters:    Size  Location     Type
  3584 ;;  b               4   14[COMRAM] unsigned char 
  3585 ;;  a               4   18[COMRAM] unsigned char 
  3586 ;; Auto vars:     Size  Location     Type
  3587 ;;  grs             4   33[COMRAM] unsigned long 
  3588 ;;  rem             4   26[COMRAM] unsigned long 
  3589 ;;  new_exp         2   31[COMRAM] short 
  3590 ;;  aexp            1   38[COMRAM] unsigned char 
  3591 ;;  bexp            1   37[COMRAM] unsigned char 
  3592 ;;  sign            1   30[COMRAM] unsigned char 
  3593 ;; Return value:  Size  Location     Type
  3594 ;;                  4   14[COMRAM] unsigned char 
  3595 ;; Registers used:
  3596 ;;		wreg, status,2, status,0
  3597 ;; Tracked objects:
  3598 ;;		On entry : 0/0
  3599 ;;		On exit  : 0/0
  3600 ;;		Unchanged: 0/0
  3601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3602 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3603 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3604 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3605 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3606 ;;Total ram usage:       25 bytes
  3607 ;; Hardware stack levels used: 1
  3608 ;; Hardware stack levels required when called: 1
  3609 ;; This function calls:
  3610 ;;		Nothing
  3611 ;; This function is called by:
  3612 ;;		_decide_color
  3613 ;; This function uses a non-reentrant model
  3614 ;;
  3615                           
  3616                           	psect	text7
  3617   00113A                     __ptext7:
  3618                           	callstack 0
  3619   00113A                     ___fldiv:
  3620                           	callstack 28
  3621   00113A  5012               	movf	(___fldiv@b+3)^0,w,c
  3622   00113C  0B80               	andlw	128
  3623   00113E  6E1F               	movwf	___fldiv@sign^0,c
  3624   001140  5012               	movf	(___fldiv@b+3)^0,w,c
  3625   001142  2412               	addwf	(___fldiv@b+3)^0,w,c
  3626   001144  6E26               	movwf	___fldiv@bexp^0,c
  3627   001146  AE11               	btfss	(___fldiv@b+2)^0,7,c
  3628   001148  EFA8  F008         	goto	u2061
  3629   00114C  EFAA  F008         	goto	u2060
  3630   001150                     u2061:
  3631   001150  EFAB  F008         	goto	l2739
  3632   001154                     u2060:
  3633   001154  8026               	bsf	___fldiv@bexp^0,0,c
  3634   001156                     l2739:
  3635   001156  5026               	movf	___fldiv@bexp^0,w,c
  3636   001158  B4D8               	btfsc	status,2,c
  3637   00115A  EFB1  F008         	goto	u2071
  3638   00115E  EFB3  F008         	goto	u2070
  3639   001162                     u2071:
  3640   001162  EFC8  F008         	goto	l2749
  3641   001166                     u2070:
  3642   001166  2826               	incf	___fldiv@bexp^0,w,c
  3643   001168  A4D8               	btfss	status,2,c
  3644   00116A  EFB9  F008         	goto	u2081
  3645   00116E  EFBB  F008         	goto	u2080
  3646   001172                     u2081:
  3647   001172  EFC3  F008         	goto	l2745
  3648   001176                     u2080:
  3649   001176  0E00               	movlw	0
  3650   001178  6E0F               	movwf	___fldiv@b^0,c
  3651   00117A  0E00               	movlw	0
  3652   00117C  6E10               	movwf	(___fldiv@b+1)^0,c
  3653   00117E  0E00               	movlw	0
  3654   001180  6E11               	movwf	(___fldiv@b+2)^0,c
  3655   001182  0E00               	movlw	0
  3656   001184  6E12               	movwf	(___fldiv@b+3)^0,c
  3657   001186                     l2745:
  3658   001186  8E11               	bsf	(___fldiv@b+2)^0,7,c
  3659   001188  0E00               	movlw	0
  3660   00118A  6E12               	movwf	(___fldiv@b+3)^0,c
  3661   00118C  EFD0  F008         	goto	l2751
  3662   001190                     l2749:
  3663   001190  0E00               	movlw	0
  3664   001192  6E0F               	movwf	___fldiv@b^0,c
  3665   001194  0E00               	movlw	0
  3666   001196  6E10               	movwf	(___fldiv@b+1)^0,c
  3667   001198  0E00               	movlw	0
  3668   00119A  6E11               	movwf	(___fldiv@b+2)^0,c
  3669   00119C  0E00               	movlw	0
  3670   00119E  6E12               	movwf	(___fldiv@b+3)^0,c
  3671   0011A0                     l2751:
  3672   0011A0  5016               	movf	(___fldiv@a+3)^0,w,c
  3673   0011A2  0B80               	andlw	128
  3674   0011A4  1A1F               	xorwf	___fldiv@sign^0,f,c
  3675   0011A6  5016               	movf	(___fldiv@a+3)^0,w,c
  3676   0011A8  2416               	addwf	(___fldiv@a+3)^0,w,c
  3677   0011AA  6E27               	movwf	___fldiv@aexp^0,c
  3678   0011AC  AE15               	btfss	(___fldiv@a+2)^0,7,c
  3679   0011AE  EFDB  F008         	goto	u2091
  3680   0011B2  EFDD  F008         	goto	u2090
  3681   0011B6                     u2091:
  3682   0011B6  EFDE  F008         	goto	l2759
  3683   0011BA                     u2090:
  3684   0011BA  8027               	bsf	___fldiv@aexp^0,0,c
  3685   0011BC                     l2759:
  3686   0011BC  5027               	movf	___fldiv@aexp^0,w,c
  3687   0011BE  B4D8               	btfsc	status,2,c
  3688   0011C0  EFE4  F008         	goto	u2101
  3689   0011C4  EFE6  F008         	goto	u2100
  3690   0011C8                     u2101:
  3691   0011C8  EFFB  F008         	goto	l2769
  3692   0011CC                     u2100:
  3693   0011CC  2827               	incf	___fldiv@aexp^0,w,c
  3694   0011CE  A4D8               	btfss	status,2,c
  3695   0011D0  EFEC  F008         	goto	u2111
  3696   0011D4  EFEE  F008         	goto	u2110
  3697   0011D8                     u2111:
  3698   0011D8  EFF6  F008         	goto	l2765
  3699   0011DC                     u2110:
  3700   0011DC  0E00               	movlw	0
  3701   0011DE  6E13               	movwf	___fldiv@a^0,c
  3702   0011E0  0E00               	movlw	0
  3703   0011E2  6E14               	movwf	(___fldiv@a+1)^0,c
  3704   0011E4  0E00               	movlw	0
  3705   0011E6  6E15               	movwf	(___fldiv@a+2)^0,c
  3706   0011E8  0E00               	movlw	0
  3707   0011EA  6E16               	movwf	(___fldiv@a+3)^0,c
  3708   0011EC                     l2765:
  3709   0011EC  8E15               	bsf	(___fldiv@a+2)^0,7,c
  3710   0011EE  0E00               	movlw	0
  3711   0011F0  6E16               	movwf	(___fldiv@a+3)^0,c
  3712   0011F2  EF03  F009         	goto	l2771
  3713   0011F6                     l2769:
  3714   0011F6  0E00               	movlw	0
  3715   0011F8  6E13               	movwf	___fldiv@a^0,c
  3716   0011FA  0E00               	movlw	0
  3717   0011FC  6E14               	movwf	(___fldiv@a+1)^0,c
  3718   0011FE  0E00               	movlw	0
  3719   001200  6E15               	movwf	(___fldiv@a+2)^0,c
  3720   001202  0E00               	movlw	0
  3721   001204  6E16               	movwf	(___fldiv@a+3)^0,c
  3722   001206                     l2771:
  3723   001206  5013               	movf	___fldiv@a^0,w,c
  3724   001208  1014               	iorwf	(___fldiv@a+1)^0,w,c
  3725   00120A  1015               	iorwf	(___fldiv@a+2)^0,w,c
  3726   00120C  1016               	iorwf	(___fldiv@a+3)^0,w,c
  3727   00120E  A4D8               	btfss	status,2,c
  3728   001210  EF0C  F009         	goto	u2121
  3729   001214  EF0E  F009         	goto	u2120
  3730   001218                     u2121:
  3731   001218  EF26  F009         	goto	l2783
  3732   00121C                     u2120:
  3733   00121C  0E00               	movlw	0
  3734   00121E  6E0F               	movwf	___fldiv@b^0,c
  3735   001220  0E00               	movlw	0
  3736   001222  6E10               	movwf	(___fldiv@b+1)^0,c
  3737   001224  0E00               	movlw	0
  3738   001226  6E11               	movwf	(___fldiv@b+2)^0,c
  3739   001228  0E00               	movlw	0
  3740   00122A  6E12               	movwf	(___fldiv@b+3)^0,c
  3741   00122C  0E80               	movlw	128
  3742   00122E  1211               	iorwf	(___fldiv@b+2)^0,f,c
  3743   001230  0E7F               	movlw	127
  3744   001232  1212               	iorwf	(___fldiv@b+3)^0,f,c
  3745   001234                     l2777:
  3746   001234  501F               	movf	___fldiv@sign^0,w,c
  3747   001236  1212               	iorwf	(___fldiv@b+3)^0,f,c
  3748   001238  C00F  F00F         	movff	___fldiv@b,?___fldiv
  3749   00123C  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  3750   001240  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  3751   001244  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  3752   001248  EF69  F00A         	goto	l1060
  3753   00124C                     l2783:
  3754   00124C  5026               	movf	___fldiv@bexp^0,w,c
  3755   00124E  A4D8               	btfss	status,2,c
  3756   001250  EF2C  F009         	goto	u2131
  3757   001254  EF2E  F009         	goto	u2130
  3758   001258                     u2131:
  3759   001258  EF38  F009         	goto	l2791
  3760   00125C                     u2130:
  3761   00125C  0E00               	movlw	0
  3762   00125E  6E0F               	movwf	?___fldiv^0,c
  3763   001260  0E00               	movlw	0
  3764   001262  6E10               	movwf	(?___fldiv+1)^0,c
  3765   001264  0E00               	movlw	0
  3766   001266  6E11               	movwf	(?___fldiv+2)^0,c
  3767   001268  0E00               	movlw	0
  3768   00126A  6E12               	movwf	(?___fldiv+3)^0,c
  3769   00126C  EF69  F00A         	goto	l1060
  3770   001270                     l2791:
  3771   001270  5027               	movf	___fldiv@aexp^0,w,c
  3772   001272  C026  F017         	movff	___fldiv@bexp,??___fldiv
  3773   001276  6A18               	clrf	(??___fldiv+1)^0,c
  3774   001278  5E17               	subwf	??___fldiv^0,f,c
  3775   00127A  0E00               	movlw	0
  3776   00127C  5A18               	subwfb	(??___fldiv+1)^0,f,c
  3777   00127E  0E7F               	movlw	127
  3778   001280  2417               	addwf	??___fldiv^0,w,c
  3779   001282  6E20               	movwf	___fldiv@new_exp^0,c
  3780   001284  0E00               	movlw	0
  3781   001286  2018               	addwfc	(??___fldiv+1)^0,w,c
  3782   001288  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  3783   00128A  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  3784   00128E  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  3785   001292  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  3786   001296  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  3787   00129A  0E00               	movlw	0
  3788   00129C  6E0F               	movwf	___fldiv@b^0,c
  3789   00129E  0E00               	movlw	0
  3790   0012A0  6E10               	movwf	(___fldiv@b+1)^0,c
  3791   0012A2  0E00               	movlw	0
  3792   0012A4  6E11               	movwf	(___fldiv@b+2)^0,c
  3793   0012A6  0E00               	movlw	0
  3794   0012A8  6E12               	movwf	(___fldiv@b+3)^0,c
  3795   0012AA  0E00               	movlw	0
  3796   0012AC  6E22               	movwf	___fldiv@grs^0,c
  3797   0012AE  0E00               	movlw	0
  3798   0012B0  6E23               	movwf	(___fldiv@grs+1)^0,c
  3799   0012B2  0E00               	movlw	0
  3800   0012B4  6E24               	movwf	(___fldiv@grs+2)^0,c
  3801   0012B6  0E00               	movlw	0
  3802   0012B8  6E25               	movwf	(___fldiv@grs+3)^0,c
  3803   0012BA  0E00               	movlw	0
  3804   0012BC  6E27               	movwf	___fldiv@aexp^0,c
  3805   0012BE  EF99  F009         	goto	l1062
  3806   0012C2                     l2801:
  3807   0012C2  5027               	movf	___fldiv@aexp^0,w,c
  3808   0012C4  B4D8               	btfsc	status,2,c
  3809   0012C6  EF67  F009         	goto	u2141
  3810   0012CA  EF69  F009         	goto	u2140
  3811   0012CE                     u2141:
  3812   0012CE  EF80  F009         	goto	l2809
  3813   0012D2                     u2140:
  3814   0012D2  90D8               	bcf	status,0,c
  3815   0012D4  361B               	rlcf	___fldiv@rem^0,f,c
  3816   0012D6  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  3817   0012D8  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  3818   0012DA  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  3819   0012DC  90D8               	bcf	status,0,c
  3820   0012DE  360F               	rlcf	___fldiv@b^0,f,c
  3821   0012E0  3610               	rlcf	(___fldiv@b+1)^0,f,c
  3822   0012E2  3611               	rlcf	(___fldiv@b+2)^0,f,c
  3823   0012E4  3612               	rlcf	(___fldiv@b+3)^0,f,c
  3824   0012E6  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  3825   0012E8  EF78  F009         	goto	u2151
  3826   0012EC  EF7A  F009         	goto	u2150
  3827   0012F0                     u2151:
  3828   0012F0  EF7B  F009         	goto	l1065
  3829   0012F4                     u2150:
  3830   0012F4  800F               	bsf	___fldiv@b^0,0,c
  3831   0012F6                     l1065:
  3832   0012F6  90D8               	bcf	status,0,c
  3833   0012F8  3622               	rlcf	___fldiv@grs^0,f,c
  3834   0012FA  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  3835   0012FC  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  3836   0012FE  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  3837   001300                     l2809:
  3838   001300  5013               	movf	___fldiv@a^0,w,c
  3839   001302  5C1B               	subwf	___fldiv@rem^0,w,c
  3840   001304  5014               	movf	(___fldiv@a+1)^0,w,c
  3841   001306  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  3842   001308  5015               	movf	(___fldiv@a+2)^0,w,c
  3843   00130A  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  3844   00130C  5016               	movf	(___fldiv@a+3)^0,w,c
  3845   00130E  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  3846   001310  A0D8               	btfss	status,0,c
  3847   001312  EF8D  F009         	goto	u2161
  3848   001316  EF8F  F009         	goto	u2160
  3849   00131A                     u2161:
  3850   00131A  EF98  F009         	goto	l2815
  3851   00131E                     u2160:
  3852   00131E  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  3853   001320  5013               	movf	___fldiv@a^0,w,c
  3854   001322  5E1B               	subwf	___fldiv@rem^0,f,c
  3855   001324  5014               	movf	(___fldiv@a+1)^0,w,c
  3856   001326  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  3857   001328  5015               	movf	(___fldiv@a+2)^0,w,c
  3858   00132A  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  3859   00132C  5016               	movf	(___fldiv@a+3)^0,w,c
  3860   00132E  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  3861   001330                     l2815:
  3862   001330  2A27               	incf	___fldiv@aexp^0,f,c
  3863   001332                     l1062:
  3864   001332  0E19               	movlw	25
  3865   001334  6427               	cpfsgt	___fldiv@aexp^0,c
  3866   001336  EF9F  F009         	goto	u2171
  3867   00133A  EFA1  F009         	goto	u2170
  3868   00133E                     u2171:
  3869   00133E  EF61  F009         	goto	l2801
  3870   001342                     u2170:
  3871   001342  501B               	movf	___fldiv@rem^0,w,c
  3872   001344  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  3873   001346  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  3874   001348  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  3875   00134A  B4D8               	btfsc	status,2,c
  3876   00134C  EFAA  F009         	goto	u2181
  3877   001350  EFAC  F009         	goto	u2180
  3878   001354                     u2181:
  3879   001354  EFC4  F009         	goto	l2827
  3880   001358                     u2180:
  3881   001358  8022               	bsf	___fldiv@grs^0,0,c
  3882   00135A  EFC4  F009         	goto	l2827
  3883   00135E                     l2821:
  3884   00135E  90D8               	bcf	status,0,c
  3885   001360  360F               	rlcf	___fldiv@b^0,f,c
  3886   001362  3610               	rlcf	(___fldiv@b+1)^0,f,c
  3887   001364  3611               	rlcf	(___fldiv@b+2)^0,f,c
  3888   001366  3612               	rlcf	(___fldiv@b+3)^0,f,c
  3889   001368  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  3890   00136A  EFB9  F009         	goto	u2191
  3891   00136E  EFBB  F009         	goto	u2190
  3892   001372                     u2191:
  3893   001372  EFBC  F009         	goto	l1071
  3894   001376                     u2190:
  3895   001376  800F               	bsf	___fldiv@b^0,0,c
  3896   001378                     l1071:
  3897   001378  90D8               	bcf	status,0,c
  3898   00137A  3622               	rlcf	___fldiv@grs^0,f,c
  3899   00137C  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  3900   00137E  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  3901   001380  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  3902   001382  0620               	decf	___fldiv@new_exp^0,f,c
  3903   001384  A0D8               	btfss	status,0,c
  3904   001386  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  3905   001388                     l2827:
  3906   001388  AE11               	btfss	(___fldiv@b+2)^0,7,c
  3907   00138A  EFC9  F009         	goto	u2201
  3908   00138E  EFCB  F009         	goto	u2200
  3909   001392                     u2201:
  3910   001392  EFAF  F009         	goto	l2821
  3911   001396                     u2200:
  3912   001396  0E00               	movlw	0
  3913   001398  6E27               	movwf	___fldiv@aexp^0,c
  3914   00139A  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  3915   00139C  EFD2  F009         	goto	u2211
  3916   0013A0  EFD4  F009         	goto	u2210
  3917   0013A4                     u2211:
  3918   0013A4  EFF8  F009         	goto	l1073
  3919   0013A8                     u2210:
  3920   0013A8  0EFF               	movlw	255
  3921   0013AA  1422               	andwf	___fldiv@grs^0,w,c
  3922   0013AC  6E17               	movwf	??___fldiv^0,c
  3923   0013AE  0EFF               	movlw	255
  3924   0013B0  1423               	andwf	(___fldiv@grs+1)^0,w,c
  3925   0013B2  6E18               	movwf	(??___fldiv+1)^0,c
  3926   0013B4  0EFF               	movlw	255
  3927   0013B6  1424               	andwf	(___fldiv@grs+2)^0,w,c
  3928   0013B8  6E19               	movwf	(??___fldiv+2)^0,c
  3929   0013BA  0E7F               	movlw	127
  3930   0013BC  1425               	andwf	(___fldiv@grs+3)^0,w,c
  3931   0013BE  6E1A               	movwf	(??___fldiv+3)^0,c
  3932   0013C0  5017               	movf	??___fldiv^0,w,c
  3933   0013C2  1018               	iorwf	(??___fldiv+1)^0,w,c
  3934   0013C4  1019               	iorwf	(??___fldiv+2)^0,w,c
  3935   0013C6  101A               	iorwf	(??___fldiv+3)^0,w,c
  3936   0013C8  B4D8               	btfsc	status,2,c
  3937   0013CA  EFE9  F009         	goto	u2221
  3938   0013CE  EFEB  F009         	goto	u2220
  3939   0013D2                     u2221:
  3940   0013D2  EFEF  F009         	goto	l1074
  3941   0013D6                     u2220:
  3942   0013D6                     l2835:
  3943   0013D6  0E01               	movlw	1
  3944   0013D8  6E27               	movwf	___fldiv@aexp^0,c
  3945   0013DA  EFF8  F009         	goto	l1073
  3946   0013DE                     l1074:
  3947   0013DE  A00F               	btfss	___fldiv@b^0,0,c
  3948   0013E0  EFF4  F009         	goto	u2231
  3949   0013E4  EFF6  F009         	goto	u2230
  3950   0013E8                     u2231:
  3951   0013E8  EFF8  F009         	goto	l1073
  3952   0013EC                     u2230:
  3953   0013EC  EFEB  F009         	goto	l2835
  3954   0013F0                     l1073:
  3955   0013F0  5027               	movf	___fldiv@aexp^0,w,c
  3956   0013F2  B4D8               	btfsc	status,2,c
  3957   0013F4  EFFE  F009         	goto	u2241
  3958   0013F8  EF00  F00A         	goto	u2240
  3959   0013FC                     u2241:
  3960   0013FC  EF24  F00A         	goto	l2847
  3961   001400                     u2240:
  3962   001400  0E01               	movlw	1
  3963   001402  260F               	addwf	___fldiv@b^0,f,c
  3964   001404  0E00               	movlw	0
  3965   001406  2210               	addwfc	(___fldiv@b+1)^0,f,c
  3966   001408  2211               	addwfc	(___fldiv@b+2)^0,f,c
  3967   00140A  2212               	addwfc	(___fldiv@b+3)^0,f,c
  3968   00140C  A012               	btfss	(___fldiv@b+3)^0,0,c
  3969   00140E  EF0B  F00A         	goto	u2251
  3970   001412  EF0D  F00A         	goto	u2250
  3971   001416                     u2251:
  3972   001416  EF24  F00A         	goto	l2847
  3973   00141A                     u2250:
  3974   00141A  C00F  F017         	movff	___fldiv@b,??___fldiv
  3975   00141E  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  3976   001422  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  3977   001426  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  3978   00142A  341A               	rlcf	(??___fldiv+3)^0,w,c
  3979   00142C  321A               	rrcf	(??___fldiv+3)^0,f,c
  3980   00142E  3219               	rrcf	(??___fldiv+2)^0,f,c
  3981   001430  3218               	rrcf	(??___fldiv+1)^0,f,c
  3982   001432  3217               	rrcf	??___fldiv^0,f,c
  3983   001434  C017  F00F         	movff	??___fldiv,___fldiv@b
  3984   001438  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  3985   00143C  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  3986   001440  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  3987   001444  4A20               	infsnz	___fldiv@new_exp^0,f,c
  3988   001446  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  3989   001448                     l2847:
  3990   001448  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3991   00144A  EF2F  F00A         	goto	u2261
  3992   00144E  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  3993   001450  E108               	bnz	u2260
  3994   001452  2820               	incf	___fldiv@new_exp^0,w,c
  3995   001454  A0D8               	btfss	status,0,c
  3996   001456  EF2F  F00A         	goto	u2261
  3997   00145A  EF31  F00A         	goto	u2260
  3998   00145E                     u2261:
  3999   00145E  EF3C  F00A         	goto	l2851
  4000   001462                     u2260:
  4001   001462  0E00               	movlw	0
  4002   001464  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  4003   001466  6820               	setf	___fldiv@new_exp^0,c
  4004   001468  0E00               	movlw	0
  4005   00146A  6E0F               	movwf	___fldiv@b^0,c
  4006   00146C  0E00               	movlw	0
  4007   00146E  6E10               	movwf	(___fldiv@b+1)^0,c
  4008   001470  0E00               	movlw	0
  4009   001472  6E11               	movwf	(___fldiv@b+2)^0,c
  4010   001474  0E00               	movlw	0
  4011   001476  6E12               	movwf	(___fldiv@b+3)^0,c
  4012   001478                     l2851:
  4013   001478  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4014   00147A  EF49  F00A         	goto	u2270
  4015   00147E  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  4016   001480  E106               	bnz	u2271
  4017   001482  0420               	decf	___fldiv@new_exp^0,w,c
  4018   001484  B0D8               	btfsc	status,0,c
  4019   001486  EF47  F00A         	goto	u2271
  4020   00148A  EF49  F00A         	goto	u2270
  4021   00148E                     u2271:
  4022   00148E  EF57  F00A         	goto	l2855
  4023   001492                     u2270:
  4024   001492  0E00               	movlw	0
  4025   001494  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  4026   001496  0E00               	movlw	0
  4027   001498  6E20               	movwf	___fldiv@new_exp^0,c
  4028   00149A  0E00               	movlw	0
  4029   00149C  6E0F               	movwf	___fldiv@b^0,c
  4030   00149E  0E00               	movlw	0
  4031   0014A0  6E10               	movwf	(___fldiv@b+1)^0,c
  4032   0014A2  0E00               	movlw	0
  4033   0014A4  6E11               	movwf	(___fldiv@b+2)^0,c
  4034   0014A6  0E00               	movlw	0
  4035   0014A8  6E12               	movwf	(___fldiv@b+3)^0,c
  4036   0014AA  0E00               	movlw	0
  4037   0014AC  6E1F               	movwf	___fldiv@sign^0,c
  4038   0014AE                     l2855:
  4039   0014AE  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  4040   0014B2  A026               	btfss	___fldiv@bexp^0,0,c
  4041   0014B4  EF5E  F00A         	goto	u2281
  4042   0014B8  EF60  F00A         	goto	u2280
  4043   0014BC                     u2281:
  4044   0014BC  EF63  F00A         	goto	l2861
  4045   0014C0                     u2280:
  4046   0014C0  8E11               	bsf	(___fldiv@b+2)^0,7,c
  4047   0014C2  EF64  F00A         	goto	l2863
  4048   0014C6                     l2861:
  4049   0014C6  9E11               	bcf	(___fldiv@b+2)^0,7,c
  4050   0014C8                     l2863:
  4051   0014C8  90D8               	bcf	status,0,c
  4052   0014CA  3026               	rrcf	___fldiv@bexp^0,w,c
  4053   0014CC  6E12               	movwf	(___fldiv@b+3)^0,c
  4054   0014CE  EF1A  F009         	goto	l2777
  4055   0014D2                     l1060:
  4056   0014D2  0012               	return		;funcret
  4057   0014D4                     __end_of___fldiv:
  4058                           	callstack 0
  4059                           
  4060 ;; *************** function _color_read_Red *****************
  4061 ;; Defined at:
  4062 ;;		line 48 in file "color.c"
  4063 ;; Parameters:    Size  Location     Type
  4064 ;;		None
  4065 ;; Auto vars:     Size  Location     Type
  4066 ;;  tmp             2    9[COMRAM] unsigned int 
  4067 ;; Return value:  Size  Location     Type
  4068 ;;                  2    4[COMRAM] unsigned int 
  4069 ;; Registers used:
  4070 ;;		wreg, status,2, status,0, cstack
  4071 ;; Tracked objects:
  4072 ;;		On entry : 0/0
  4073 ;;		On exit  : 0/0
  4074 ;;		Unchanged: 0/0
  4075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4076 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4077 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4078 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4079 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4080 ;;Total ram usage:        7 bytes
  4081 ;; Hardware stack levels used: 1
  4082 ;; Hardware stack levels required when called: 3
  4083 ;; This function calls:
  4084 ;;		_I2C_2_Master_Read
  4085 ;;		_I2C_2_Master_RepStart
  4086 ;;		_I2C_2_Master_Start
  4087 ;;		_I2C_2_Master_Stop
  4088 ;;		_I2C_2_Master_Write
  4089 ;; This function is called by:
  4090 ;;		_main
  4091 ;; This function uses a non-reentrant model
  4092 ;;
  4093                           
  4094                           	psect	text8
  4095   002526                     __ptext8:
  4096                           	callstack 0
  4097   002526                     _color_read_Red:
  4098                           	callstack 27
  4099   002526                     
  4100                           ;color.c: 50:  unsigned int tmp;;color.c: 51:  I2C_2_Master_Start();
  4101   002526  EC34  F014         	call	_I2C_2_Master_Start	;wreg free
  4102                           
  4103                           ;color.c: 52:  I2C_2_Master_Write(0x52 | 0x00);
  4104   00252A  0E52               	movlw	82
  4105   00252C  EC1E  F014         	call	_I2C_2_Master_Write
  4106                           
  4107                           ;color.c: 53:  I2C_2_Master_Write(0xA0 | 0x16);
  4108   002530  0EB6               	movlw	182
  4109   002532  EC1E  F014         	call	_I2C_2_Master_Write
  4110                           
  4111                           ;color.c: 55:  I2C_2_Master_RepStart();
  4112   002536  EC2A  F014         	call	_I2C_2_Master_RepStart	;wreg free
  4113                           
  4114                           ;color.c: 56:  I2C_2_Master_Write(0x52 | 0x01);
  4115   00253A  0E53               	movlw	83
  4116   00253C  EC1E  F014         	call	_I2C_2_Master_Write
  4117                           
  4118                           ;color.c: 57:  tmp=I2C_2_Master_Read(1);
  4119   002540  0E01               	movlw	1
  4120   002542  EC33  F013         	call	_I2C_2_Master_Read
  4121   002546  6E07               	movwf	??_color_read_Red^0,c
  4122   002548  5007               	movf	??_color_read_Red^0,w,c
  4123   00254A  6E0A               	movwf	color_read_Red@tmp^0,c
  4124   00254C  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  4125                           
  4126                           ;color.c: 58:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4127   00254E  0E00               	movlw	0
  4128   002550  EC33  F013         	call	_I2C_2_Master_Read
  4129   002554  6E07               	movwf	??_color_read_Red^0,c
  4130   002556  5007               	movf	??_color_read_Red^0,w,c
  4131   002558  6E09               	movwf	(??_color_read_Red+2)^0,c
  4132   00255A  6A08               	clrf	(??_color_read_Red+1)^0,c
  4133   00255C  500A               	movf	color_read_Red@tmp^0,w,c
  4134   00255E  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  4135   002560  6E0A               	movwf	color_read_Red@tmp^0,c
  4136   002562  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  4137   002564  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  4138   002566  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  4139                           
  4140                           ;color.c: 59:  I2C_2_Master_Stop();
  4141   002568  EC2F  F014         	call	_I2C_2_Master_Stop	;wreg free
  4142   00256C                     
  4143                           ;color.c: 60:  return tmp;
  4144   00256C  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  4145   002570  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  4146   002574  0012               	return		;funcret
  4147   002576                     __end_of_color_read_Red:
  4148                           	callstack 0
  4149                           
  4150 ;; *************** function _color_read_Green *****************
  4151 ;; Defined at:
  4152 ;;		line 63 in file "color.c"
  4153 ;; Parameters:    Size  Location     Type
  4154 ;;		None
  4155 ;; Auto vars:     Size  Location     Type
  4156 ;;  tmp             2    9[COMRAM] unsigned int 
  4157 ;; Return value:  Size  Location     Type
  4158 ;;                  2    4[COMRAM] unsigned int 
  4159 ;; Registers used:
  4160 ;;		wreg, status,2, status,0, cstack
  4161 ;; Tracked objects:
  4162 ;;		On entry : 0/0
  4163 ;;		On exit  : 0/0
  4164 ;;		Unchanged: 0/0
  4165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4166 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4167 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4168 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4169 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4170 ;;Total ram usage:        7 bytes
  4171 ;; Hardware stack levels used: 1
  4172 ;; Hardware stack levels required when called: 3
  4173 ;; This function calls:
  4174 ;;		_I2C_2_Master_Read
  4175 ;;		_I2C_2_Master_RepStart
  4176 ;;		_I2C_2_Master_Start
  4177 ;;		_I2C_2_Master_Stop
  4178 ;;		_I2C_2_Master_Write
  4179 ;; This function is called by:
  4180 ;;		_main
  4181 ;; This function uses a non-reentrant model
  4182 ;;
  4183                           
  4184                           	psect	text9
  4185   002576                     __ptext9:
  4186                           	callstack 0
  4187   002576                     _color_read_Green:
  4188                           	callstack 27
  4189   002576                     
  4190                           ;color.c: 65:  unsigned int tmp;;color.c: 66:  I2C_2_Master_Start();
  4191   002576  EC34  F014         	call	_I2C_2_Master_Start	;wreg free
  4192                           
  4193                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x00);
  4194   00257A  0E52               	movlw	82
  4195   00257C  EC1E  F014         	call	_I2C_2_Master_Write
  4196                           
  4197                           ;color.c: 68:  I2C_2_Master_Write(0xA0 | 0x18);
  4198   002580  0EB8               	movlw	184
  4199   002582  EC1E  F014         	call	_I2C_2_Master_Write
  4200                           
  4201                           ;color.c: 69:  I2C_2_Master_RepStart();
  4202   002586  EC2A  F014         	call	_I2C_2_Master_RepStart	;wreg free
  4203                           
  4204                           ;color.c: 70:  I2C_2_Master_Write(0x52 | 0x01);
  4205   00258A  0E53               	movlw	83
  4206   00258C  EC1E  F014         	call	_I2C_2_Master_Write
  4207                           
  4208                           ;color.c: 71:  tmp=I2C_2_Master_Read(1);
  4209   002590  0E01               	movlw	1
  4210   002592  EC33  F013         	call	_I2C_2_Master_Read
  4211   002596  6E07               	movwf	??_color_read_Green^0,c
  4212   002598  5007               	movf	??_color_read_Green^0,w,c
  4213   00259A  6E0A               	movwf	color_read_Green@tmp^0,c
  4214   00259C  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  4215                           
  4216                           ;color.c: 72:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4217   00259E  0E00               	movlw	0
  4218   0025A0  EC33  F013         	call	_I2C_2_Master_Read
  4219   0025A4  6E07               	movwf	??_color_read_Green^0,c
  4220   0025A6  5007               	movf	??_color_read_Green^0,w,c
  4221   0025A8  6E09               	movwf	(??_color_read_Green+2)^0,c
  4222   0025AA  6A08               	clrf	(??_color_read_Green+1)^0,c
  4223   0025AC  500A               	movf	color_read_Green@tmp^0,w,c
  4224   0025AE  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  4225   0025B0  6E0A               	movwf	color_read_Green@tmp^0,c
  4226   0025B2  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  4227   0025B4  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  4228   0025B6  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  4229                           
  4230                           ;color.c: 73:  I2C_2_Master_Stop();
  4231   0025B8  EC2F  F014         	call	_I2C_2_Master_Stop	;wreg free
  4232   0025BC                     
  4233                           ;color.c: 74:  return tmp;
  4234   0025BC  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  4235   0025C0  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  4236   0025C4  0012               	return		;funcret
  4237   0025C6                     __end_of_color_read_Green:
  4238                           	callstack 0
  4239                           
  4240 ;; *************** function _color_read_Clear *****************
  4241 ;; Defined at:
  4242 ;;		line 91 in file "color.c"
  4243 ;; Parameters:    Size  Location     Type
  4244 ;;		None
  4245 ;; Auto vars:     Size  Location     Type
  4246 ;;  tmp             2    9[COMRAM] unsigned int 
  4247 ;; Return value:  Size  Location     Type
  4248 ;;                  2    4[COMRAM] unsigned int 
  4249 ;; Registers used:
  4250 ;;		wreg, status,2, status,0, cstack
  4251 ;; Tracked objects:
  4252 ;;		On entry : 0/0
  4253 ;;		On exit  : 0/0
  4254 ;;		Unchanged: 0/0
  4255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4256 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4257 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4258 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4259 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4260 ;;Total ram usage:        7 bytes
  4261 ;; Hardware stack levels used: 1
  4262 ;; Hardware stack levels required when called: 3
  4263 ;; This function calls:
  4264 ;;		_I2C_2_Master_Read
  4265 ;;		_I2C_2_Master_RepStart
  4266 ;;		_I2C_2_Master_Start
  4267 ;;		_I2C_2_Master_Stop
  4268 ;;		_I2C_2_Master_Write
  4269 ;; This function is called by:
  4270 ;;		_main
  4271 ;; This function uses a non-reentrant model
  4272 ;;
  4273                           
  4274                           	psect	text10
  4275   0025C6                     __ptext10:
  4276                           	callstack 0
  4277   0025C6                     _color_read_Clear:
  4278                           	callstack 27
  4279   0025C6                     
  4280                           ;color.c: 93:  unsigned int tmp;;color.c: 94:  I2C_2_Master_Start();
  4281   0025C6  EC34  F014         	call	_I2C_2_Master_Start	;wreg free
  4282                           
  4283                           ;color.c: 95:  I2C_2_Master_Write(0x52 | 0x00);
  4284   0025CA  0E52               	movlw	82
  4285   0025CC  EC1E  F014         	call	_I2C_2_Master_Write
  4286                           
  4287                           ;color.c: 96:  I2C_2_Master_Write(0xA0 | 0x14);
  4288   0025D0  0EB4               	movlw	180
  4289   0025D2  EC1E  F014         	call	_I2C_2_Master_Write
  4290                           
  4291                           ;color.c: 97:  I2C_2_Master_RepStart();
  4292   0025D6  EC2A  F014         	call	_I2C_2_Master_RepStart	;wreg free
  4293                           
  4294                           ;color.c: 98:  I2C_2_Master_Write(0x52 | 0x01);
  4295   0025DA  0E53               	movlw	83
  4296   0025DC  EC1E  F014         	call	_I2C_2_Master_Write
  4297                           
  4298                           ;color.c: 99:  tmp=I2C_2_Master_Read(1);
  4299   0025E0  0E01               	movlw	1
  4300   0025E2  EC33  F013         	call	_I2C_2_Master_Read
  4301   0025E6  6E07               	movwf	??_color_read_Clear^0,c
  4302   0025E8  5007               	movf	??_color_read_Clear^0,w,c
  4303   0025EA  6E0A               	movwf	color_read_Clear@tmp^0,c
  4304   0025EC  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  4305                           
  4306                           ;color.c: 100:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4307   0025EE  0E00               	movlw	0
  4308   0025F0  EC33  F013         	call	_I2C_2_Master_Read
  4309   0025F4  6E07               	movwf	??_color_read_Clear^0,c
  4310   0025F6  5007               	movf	??_color_read_Clear^0,w,c
  4311   0025F8  6E09               	movwf	(??_color_read_Clear+2)^0,c
  4312   0025FA  6A08               	clrf	(??_color_read_Clear+1)^0,c
  4313   0025FC  500A               	movf	color_read_Clear@tmp^0,w,c
  4314   0025FE  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  4315   002600  6E0A               	movwf	color_read_Clear@tmp^0,c
  4316   002602  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  4317   002604  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  4318   002606  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  4319                           
  4320                           ;color.c: 101:  I2C_2_Master_Stop();
  4321   002608  EC2F  F014         	call	_I2C_2_Master_Stop	;wreg free
  4322   00260C                     
  4323                           ;color.c: 102:  return tmp;
  4324   00260C  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  4325   002610  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  4326   002614  0012               	return		;funcret
  4327   002616                     __end_of_color_read_Clear:
  4328                           	callstack 0
  4329                           
  4330 ;; *************** function _color_read_Blue *****************
  4331 ;; Defined at:
  4332 ;;		line 77 in file "color.c"
  4333 ;; Parameters:    Size  Location     Type
  4334 ;;		None
  4335 ;; Auto vars:     Size  Location     Type
  4336 ;;  tmp             2    9[COMRAM] unsigned int 
  4337 ;; Return value:  Size  Location     Type
  4338 ;;                  2    4[COMRAM] unsigned int 
  4339 ;; Registers used:
  4340 ;;		wreg, status,2, status,0, cstack
  4341 ;; Tracked objects:
  4342 ;;		On entry : 0/0
  4343 ;;		On exit  : 0/0
  4344 ;;		Unchanged: 0/0
  4345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4346 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4347 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4348 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4349 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4350 ;;Total ram usage:        7 bytes
  4351 ;; Hardware stack levels used: 1
  4352 ;; Hardware stack levels required when called: 3
  4353 ;; This function calls:
  4354 ;;		_I2C_2_Master_Read
  4355 ;;		_I2C_2_Master_RepStart
  4356 ;;		_I2C_2_Master_Start
  4357 ;;		_I2C_2_Master_Stop
  4358 ;;		_I2C_2_Master_Write
  4359 ;; This function is called by:
  4360 ;;		_main
  4361 ;; This function uses a non-reentrant model
  4362 ;;
  4363                           
  4364                           	psect	text11
  4365   002616                     __ptext11:
  4366                           	callstack 0
  4367   002616                     _color_read_Blue:
  4368                           	callstack 27
  4369   002616                     
  4370                           ;color.c: 79:  unsigned int tmp;;color.c: 80:  I2C_2_Master_Start();
  4371   002616  EC34  F014         	call	_I2C_2_Master_Start	;wreg free
  4372                           
  4373                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x00);
  4374   00261A  0E52               	movlw	82
  4375   00261C  EC1E  F014         	call	_I2C_2_Master_Write
  4376                           
  4377                           ;color.c: 82:  I2C_2_Master_Write(0xA0 | 0x1A);
  4378   002620  0EBA               	movlw	186
  4379   002622  EC1E  F014         	call	_I2C_2_Master_Write
  4380                           
  4381                           ;color.c: 83:  I2C_2_Master_RepStart();
  4382   002626  EC2A  F014         	call	_I2C_2_Master_RepStart	;wreg free
  4383                           
  4384                           ;color.c: 84:  I2C_2_Master_Write(0x52 | 0x01);
  4385   00262A  0E53               	movlw	83
  4386   00262C  EC1E  F014         	call	_I2C_2_Master_Write
  4387                           
  4388                           ;color.c: 85:  tmp=I2C_2_Master_Read(1);
  4389   002630  0E01               	movlw	1
  4390   002632  EC33  F013         	call	_I2C_2_Master_Read
  4391   002636  6E07               	movwf	??_color_read_Blue^0,c
  4392   002638  5007               	movf	??_color_read_Blue^0,w,c
  4393   00263A  6E0A               	movwf	color_read_Blue@tmp^0,c
  4394   00263C  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  4395                           
  4396                           ;color.c: 86:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4397   00263E  0E00               	movlw	0
  4398   002640  EC33  F013         	call	_I2C_2_Master_Read
  4399   002644  6E07               	movwf	??_color_read_Blue^0,c
  4400   002646  5007               	movf	??_color_read_Blue^0,w,c
  4401   002648  6E09               	movwf	(??_color_read_Blue+2)^0,c
  4402   00264A  6A08               	clrf	(??_color_read_Blue+1)^0,c
  4403   00264C  500A               	movf	color_read_Blue@tmp^0,w,c
  4404   00264E  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  4405   002650  6E0A               	movwf	color_read_Blue@tmp^0,c
  4406   002652  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  4407   002654  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  4408   002656  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  4409                           
  4410                           ;color.c: 87:  I2C_2_Master_Stop();
  4411   002658  EC2F  F014         	call	_I2C_2_Master_Stop	;wreg free
  4412   00265C                     
  4413                           ;color.c: 88:  return tmp;
  4414   00265C  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  4415   002660  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  4416   002664  0012               	return		;funcret
  4417   002666                     __end_of_color_read_Blue:
  4418                           	callstack 0
  4419                           
  4420 ;; *************** function _I2C_2_Master_RepStart *****************
  4421 ;; Defined at:
  4422 ;;		line 33 in file "i2c.c"
  4423 ;; Parameters:    Size  Location     Type
  4424 ;;		None
  4425 ;; Auto vars:     Size  Location     Type
  4426 ;;		None
  4427 ;; Return value:  Size  Location     Type
  4428 ;;                  1    wreg      void 
  4429 ;; Registers used:
  4430 ;;		wreg, status,2, status,0, cstack
  4431 ;; Tracked objects:
  4432 ;;		On entry : 0/0
  4433 ;;		On exit  : 0/0
  4434 ;;		Unchanged: 0/0
  4435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4440 ;;Total ram usage:        0 bytes
  4441 ;; Hardware stack levels used: 1
  4442 ;; Hardware stack levels required when called: 2
  4443 ;; This function calls:
  4444 ;;		_I2C_2_Master_Idle
  4445 ;; This function is called by:
  4446 ;;		_color_read_Red
  4447 ;;		_color_read_Green
  4448 ;;		_color_read_Blue
  4449 ;;		_color_read_Clear
  4450 ;; This function uses a non-reentrant model
  4451 ;;
  4452                           
  4453                           	psect	text12
  4454   002854                     __ptext12:
  4455                           	callstack 0
  4456   002854                     _I2C_2_Master_RepStart:
  4457                           	callstack 27
  4458   002854                     
  4459                           ;i2c.c: 35:   I2C_2_Master_Idle();
  4460   002854  ECA2  F013         	call	_I2C_2_Master_Idle	;wreg free
  4461   002858                     
  4462                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  4463   002858  010E               	movlb	14	; () banked
  4464   00285A  83DA               	bsf	218,1,b	;volatile
  4465   00285C                     
  4466                           ; BSR set to: 14
  4467   00285C  0012               	return		;funcret
  4468   00285E                     __end_of_I2C_2_Master_RepStart:
  4469                           	callstack 0
  4470                           
  4471 ;; *************** function _I2C_2_Master_Read *****************
  4472 ;; Defined at:
  4473 ;;		line 51 in file "i2c.c"
  4474 ;; Parameters:    Size  Location     Type
  4475 ;;  ack             1    wreg     unsigned char 
  4476 ;; Auto vars:     Size  Location     Type
  4477 ;;  ack             1    2[COMRAM] unsigned char 
  4478 ;;  tmp             1    3[COMRAM] unsigned char 
  4479 ;; Return value:  Size  Location     Type
  4480 ;;                  1    wreg      unsigned char 
  4481 ;; Registers used:
  4482 ;;		wreg, status,2, status,0, cstack
  4483 ;; Tracked objects:
  4484 ;;		On entry : 0/0
  4485 ;;		On exit  : 0/0
  4486 ;;		Unchanged: 0/0
  4487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4489 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4490 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4491 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4492 ;;Total ram usage:        3 bytes
  4493 ;; Hardware stack levels used: 1
  4494 ;; Hardware stack levels required when called: 2
  4495 ;; This function calls:
  4496 ;;		_I2C_2_Master_Idle
  4497 ;; This function is called by:
  4498 ;;		_color_read_Red
  4499 ;;		_color_read_Green
  4500 ;;		_color_read_Blue
  4501 ;;		_color_read_Clear
  4502 ;; This function uses a non-reentrant model
  4503 ;;
  4504                           
  4505                           	psect	text13
  4506   002666                     __ptext13:
  4507                           	callstack 0
  4508   002666                     _I2C_2_Master_Read:
  4509                           	callstack 27
  4510                           
  4511                           ; BSR set to: 14
  4512                           ;incstack = 0
  4513                           ;I2C_2_Master_Read@ack stored from wreg
  4514   002666  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  4515   002668                     
  4516                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  4517   002668  ECA2  F013         	call	_I2C_2_Master_Idle	;wreg free
  4518   00266C                     
  4519                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  4520   00266C  010E               	movlb	14	; () banked
  4521   00266E  87DA               	bsf	218,3,b	;volatile
  4522                           
  4523                           ;i2c.c: 56:   I2C_2_Master_Idle();
  4524   002670  ECA2  F013         	call	_I2C_2_Master_Idle	;wreg free
  4525   002674                     
  4526                           ;i2c.c: 57:   tmp = SSP2BUF;
  4527   002674  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  4528                           
  4529                           ;i2c.c: 58:   I2C_2_Master_Idle();
  4530   002678  ECA2  F013         	call	_I2C_2_Master_Idle	;wreg free
  4531   00267C                     
  4532                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  4533   00267C  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  4534   00267E  B4D8               	btfsc	status,2,c
  4535   002680  EF44  F013         	goto	u1961
  4536   002684  EF48  F013         	goto	u1960
  4537   002688                     u1961:
  4538   002688  6A02               	clrf	??_I2C_2_Master_Read^0,c
  4539   00268A  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  4540   00268C  EF49  F013         	goto	u1978
  4541   002690                     u1960:
  4542   002690  6A02               	clrf	??_I2C_2_Master_Read^0,c
  4543   002692                     u1978:
  4544   002692  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  4545   002694  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  4546   002696  010E               	movlb	14	; () banked
  4547   002698  51DA               	movf	218,w,b	;volatile
  4548   00269A  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  4549   00269C  0BDF               	andlw	-33
  4550   00269E  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  4551   0026A0  6FDA               	movwf	218,b	;volatile
  4552   0026A2                     
  4553                           ; BSR set to: 14
  4554                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  4555   0026A2  89DA               	bsf	218,4,b	;volatile
  4556   0026A4                     
  4557                           ; BSR set to: 14
  4558                           ;i2c.c: 61:   return tmp;
  4559   0026A4  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  4560   0026A6                     
  4561                           ; BSR set to: 14
  4562   0026A6  0012               	return		;funcret
  4563   0026A8                     __end_of_I2C_2_Master_Read:
  4564                           	callstack 0
  4565                           
  4566 ;; *************** function _color_click_init *****************
  4567 ;; Defined at:
  4568 ;;		line 6 in file "color.c"
  4569 ;; Parameters:    Size  Location     Type
  4570 ;;		None
  4571 ;; Auto vars:     Size  Location     Type
  4572 ;;		None
  4573 ;; Return value:  Size  Location     Type
  4574 ;;                  1    wreg      void 
  4575 ;; Registers used:
  4576 ;;		wreg, status,2, status,0, cstack
  4577 ;; Tracked objects:
  4578 ;;		On entry : 0/0
  4579 ;;		On exit  : 0/0
  4580 ;;		Unchanged: 0/0
  4581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4584 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4585 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4586 ;;Total ram usage:        1 bytes
  4587 ;; Hardware stack levels used: 1
  4588 ;; Hardware stack levels required when called: 4
  4589 ;; This function calls:
  4590 ;;		_I2C_2_Master_Init
  4591 ;;		_color_writetoaddr
  4592 ;; This function is called by:
  4593 ;;		_main
  4594 ;; This function uses a non-reentrant model
  4595 ;;
  4596                           
  4597                           	psect	text14
  4598   0026A8                     __ptext14:
  4599                           	callstack 0
  4600   0026A8                     _color_click_init:
  4601                           	callstack 26
  4602   0026A8                     
  4603                           ;color.c: 9:     I2C_2_Master_Init();
  4604   0026A8  EC8D  F013         	call	_I2C_2_Master_Init	;wreg free
  4605   0026AC                     
  4606                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  4607   0026AC  0E01               	movlw	1
  4608   0026AE  6E03               	movwf	color_writetoaddr@value^0,c
  4609   0026B0  0E00               	movlw	0
  4610   0026B2  ECD9  F013         	call	_color_writetoaddr
  4611   0026B6                     
  4612                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  4613   0026B6  0E3F               	movlw	63
  4614   0026B8  6E05               	movwf	??_color_click_init^0,c
  4615   0026BA  0E55               	movlw	85
  4616   0026BC                     u3387:
  4617   0026BC  2EE8               	decfsz	wreg,f,c
  4618   0026BE  D7FE               	bra	u3387
  4619   0026C0  2E05               	decfsz	??_color_click_init^0,f,c
  4620   0026C2  D7FC               	bra	u3387
  4621   0026C4  F000               	nop	
  4622   0026C6                     
  4623                           ;color.c: 16:  color_writetoaddr(0x00, 0x03);
  4624   0026C6  0E03               	movlw	3
  4625   0026C8  6E03               	movwf	color_writetoaddr@value^0,c
  4626   0026CA  0E00               	movlw	0
  4627   0026CC  ECD9  F013         	call	_color_writetoaddr
  4628   0026D0                     
  4629                           ;color.c: 19:  color_writetoaddr(0x01, 0xD5);
  4630   0026D0  0ED5               	movlw	213
  4631   0026D2  6E03               	movwf	color_writetoaddr@value^0,c
  4632   0026D4  0E01               	movlw	1
  4633   0026D6  ECD9  F013         	call	_color_writetoaddr
  4634   0026DA                     
  4635                           ;color.c: 22:     LATFbits.LATF7 = 0;
  4636   0026DA  9E7E               	bcf	126,7,c	;volatile
  4637   0026DC                     
  4638                           ;color.c: 23:     LATGbits.LATG1 = 0;
  4639   0026DC  927F               	bcf	127,1,c	;volatile
  4640   0026DE                     
  4641                           ;color.c: 24:     LATAbits.LATA4 = 0;
  4642   0026DE  9879               	bcf	121,4,c	;volatile
  4643   0026E0                     
  4644                           ;color.c: 26:     TRISFbits.TRISF7 = 0;
  4645   0026E0  9E86               	bcf	134,7,c	;volatile
  4646   0026E2                     
  4647                           ;color.c: 27:     TRISGbits.TRISG1 = 0;
  4648   0026E2  9287               	bcf	135,1,c	;volatile
  4649   0026E4                     
  4650                           ;color.c: 28:     TRISAbits.TRISA4 = 0;
  4651   0026E4  9881               	bcf	129,4,c	;volatile
  4652   0026E6  0012               	return		;funcret
  4653   0026E8                     __end_of_color_click_init:
  4654                           	callstack 0
  4655                           
  4656 ;; *************** function _color_writetoaddr *****************
  4657 ;; Defined at:
  4658 ;;		line 33 in file "color.c"
  4659 ;; Parameters:    Size  Location     Type
  4660 ;;  address         1    wreg     unsigned char 
  4661 ;;  value           1    2[COMRAM] unsigned char 
  4662 ;; Auto vars:     Size  Location     Type
  4663 ;;  address         1    3[COMRAM] unsigned char 
  4664 ;; Return value:  Size  Location     Type
  4665 ;;                  1    wreg      void 
  4666 ;; Registers used:
  4667 ;;		wreg, status,2, status,0, cstack
  4668 ;; Tracked objects:
  4669 ;;		On entry : 0/0
  4670 ;;		On exit  : 0/0
  4671 ;;		Unchanged: 0/0
  4672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4673 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4674 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4676 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4677 ;;Total ram usage:        2 bytes
  4678 ;; Hardware stack levels used: 1
  4679 ;; Hardware stack levels required when called: 3
  4680 ;; This function calls:
  4681 ;;		_I2C_2_Master_Start
  4682 ;;		_I2C_2_Master_Stop
  4683 ;;		_I2C_2_Master_Write
  4684 ;; This function is called by:
  4685 ;;		_color_click_init
  4686 ;; This function uses a non-reentrant model
  4687 ;;
  4688                           
  4689                           	psect	text15
  4690   0027B2                     __ptext15:
  4691                           	callstack 0
  4692   0027B2                     _color_writetoaddr:
  4693                           	callstack 26
  4694                           
  4695                           ;incstack = 0
  4696                           ;color_writetoaddr@address stored from wreg
  4697   0027B2  6E04               	movwf	color_writetoaddr@address^0,c
  4698   0027B4                     
  4699                           ;color.c: 34:     I2C_2_Master_Start();
  4700   0027B4  EC34  F014         	call	_I2C_2_Master_Start	;wreg free
  4701                           
  4702                           ;color.c: 35:     I2C_2_Master_Write(0x52 | 0x00);
  4703   0027B8  0E52               	movlw	82
  4704   0027BA  EC1E  F014         	call	_I2C_2_Master_Write
  4705                           
  4706                           ;color.c: 36:     I2C_2_Master_Write(0x80 | address);
  4707   0027BE  5004               	movf	color_writetoaddr@address^0,w,c
  4708   0027C0  0980               	iorlw	128
  4709   0027C2  EC1E  F014         	call	_I2C_2_Master_Write
  4710                           
  4711                           ;color.c: 37:     I2C_2_Master_Write(value);
  4712   0027C6  5003               	movf	color_writetoaddr@value^0,w,c
  4713   0027C8  EC1E  F014         	call	_I2C_2_Master_Write
  4714                           
  4715                           ;color.c: 38:     I2C_2_Master_Stop();
  4716   0027CC  EC2F  F014         	call	_I2C_2_Master_Stop	;wreg free
  4717   0027D0  0012               	return		;funcret
  4718   0027D2                     __end_of_color_writetoaddr:
  4719                           	callstack 0
  4720                           
  4721 ;; *************** function _I2C_2_Master_Write *****************
  4722 ;; Defined at:
  4723 ;;		line 45 in file "i2c.c"
  4724 ;; Parameters:    Size  Location     Type
  4725 ;;  data_byte       1    wreg     unsigned char 
  4726 ;; Auto vars:     Size  Location     Type
  4727 ;;  data_byte       1    1[COMRAM] unsigned char 
  4728 ;; Return value:  Size  Location     Type
  4729 ;;                  1    wreg      void 
  4730 ;; Registers used:
  4731 ;;		wreg, status,2, status,0, cstack
  4732 ;; Tracked objects:
  4733 ;;		On entry : 0/0
  4734 ;;		On exit  : 0/0
  4735 ;;		Unchanged: 0/0
  4736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4738 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4740 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4741 ;;Total ram usage:        1 bytes
  4742 ;; Hardware stack levels used: 1
  4743 ;; Hardware stack levels required when called: 2
  4744 ;; This function calls:
  4745 ;;		_I2C_2_Master_Idle
  4746 ;; This function is called by:
  4747 ;;		_color_writetoaddr
  4748 ;;		_color_read_Red
  4749 ;;		_color_read_Green
  4750 ;;		_color_read_Blue
  4751 ;;		_color_read_Clear
  4752 ;; This function uses a non-reentrant model
  4753 ;;
  4754                           
  4755                           	psect	text16
  4756   00283C                     __ptext16:
  4757                           	callstack 0
  4758   00283C                     _I2C_2_Master_Write:
  4759                           	callstack 27
  4760                           
  4761                           ;incstack = 0
  4762                           ;I2C_2_Master_Write@data_byte stored from wreg
  4763   00283C  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  4764   00283E                     
  4765                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  4766   00283E  ECA2  F013         	call	_I2C_2_Master_Idle	;wreg free
  4767   002842                     
  4768                           ;i2c.c: 48:   SSP2BUF = data_byte;
  4769   002842  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  4770   002846  0012               	return		;funcret
  4771   002848                     __end_of_I2C_2_Master_Write:
  4772                           	callstack 0
  4773                           
  4774 ;; *************** function _I2C_2_Master_Stop *****************
  4775 ;; Defined at:
  4776 ;;		line 39 in file "i2c.c"
  4777 ;; Parameters:    Size  Location     Type
  4778 ;;		None
  4779 ;; Auto vars:     Size  Location     Type
  4780 ;;		None
  4781 ;; Return value:  Size  Location     Type
  4782 ;;                  1    wreg      void 
  4783 ;; Registers used:
  4784 ;;		wreg, status,2, status,0, cstack
  4785 ;; Tracked objects:
  4786 ;;		On entry : 0/0
  4787 ;;		On exit  : 0/0
  4788 ;;		Unchanged: 0/0
  4789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4794 ;;Total ram usage:        0 bytes
  4795 ;; Hardware stack levels used: 1
  4796 ;; Hardware stack levels required when called: 2
  4797 ;; This function calls:
  4798 ;;		_I2C_2_Master_Idle
  4799 ;; This function is called by:
  4800 ;;		_color_writetoaddr
  4801 ;;		_color_read_Red
  4802 ;;		_color_read_Green
  4803 ;;		_color_read_Blue
  4804 ;;		_color_read_Clear
  4805 ;; This function uses a non-reentrant model
  4806 ;;
  4807                           
  4808                           	psect	text17
  4809   00285E                     __ptext17:
  4810                           	callstack 0
  4811   00285E                     _I2C_2_Master_Stop:
  4812                           	callstack 27
  4813   00285E                     
  4814                           ;i2c.c: 41:   I2C_2_Master_Idle();
  4815   00285E  ECA2  F013         	call	_I2C_2_Master_Idle	;wreg free
  4816   002862                     
  4817                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  4818   002862  010E               	movlb	14	; () banked
  4819   002864  85DA               	bsf	218,2,b	;volatile
  4820   002866                     
  4821                           ; BSR set to: 14
  4822   002866  0012               	return		;funcret
  4823   002868                     __end_of_I2C_2_Master_Stop:
  4824                           	callstack 0
  4825                           
  4826 ;; *************** function _I2C_2_Master_Start *****************
  4827 ;; Defined at:
  4828 ;;		line 27 in file "i2c.c"
  4829 ;; Parameters:    Size  Location     Type
  4830 ;;		None
  4831 ;; Auto vars:     Size  Location     Type
  4832 ;;		None
  4833 ;; Return value:  Size  Location     Type
  4834 ;;                  1    wreg      void 
  4835 ;; Registers used:
  4836 ;;		wreg, status,2, status,0, cstack
  4837 ;; Tracked objects:
  4838 ;;		On entry : 0/0
  4839 ;;		On exit  : 0/0
  4840 ;;		Unchanged: 0/0
  4841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4846 ;;Total ram usage:        0 bytes
  4847 ;; Hardware stack levels used: 1
  4848 ;; Hardware stack levels required when called: 2
  4849 ;; This function calls:
  4850 ;;		_I2C_2_Master_Idle
  4851 ;; This function is called by:
  4852 ;;		_color_writetoaddr
  4853 ;;		_color_read_Red
  4854 ;;		_color_read_Green
  4855 ;;		_color_read_Blue
  4856 ;;		_color_read_Clear
  4857 ;; This function uses a non-reentrant model
  4858 ;;
  4859                           
  4860                           	psect	text18
  4861   002868                     __ptext18:
  4862                           	callstack 0
  4863   002868                     _I2C_2_Master_Start:
  4864                           	callstack 27
  4865   002868                     
  4866                           ;i2c.c: 29:   I2C_2_Master_Idle();
  4867   002868  ECA2  F013         	call	_I2C_2_Master_Idle	;wreg free
  4868   00286C                     
  4869                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  4870   00286C  010E               	movlb	14	; () banked
  4871   00286E  81DA               	bsf	218,0,b	;volatile
  4872   002870                     
  4873                           ; BSR set to: 14
  4874   002870  0012               	return		;funcret
  4875   002872                     __end_of_I2C_2_Master_Start:
  4876                           	callstack 0
  4877                           
  4878 ;; *************** function _I2C_2_Master_Idle *****************
  4879 ;; Defined at:
  4880 ;;		line 22 in file "i2c.c"
  4881 ;; Parameters:    Size  Location     Type
  4882 ;;		None
  4883 ;; Auto vars:     Size  Location     Type
  4884 ;;		None
  4885 ;; Return value:  Size  Location     Type
  4886 ;;                  1    wreg      void 
  4887 ;; Registers used:
  4888 ;;		wreg, status,2, status,0
  4889 ;; Tracked objects:
  4890 ;;		On entry : 0/0
  4891 ;;		On exit  : 0/0
  4892 ;;		Unchanged: 0/0
  4893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4896 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4897 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4898 ;;Total ram usage:        1 bytes
  4899 ;; Hardware stack levels used: 1
  4900 ;; Hardware stack levels required when called: 1
  4901 ;; This function calls:
  4902 ;;		Nothing
  4903 ;; This function is called by:
  4904 ;;		_I2C_2_Master_Start
  4905 ;;		_I2C_2_Master_RepStart
  4906 ;;		_I2C_2_Master_Stop
  4907 ;;		_I2C_2_Master_Write
  4908 ;;		_I2C_2_Master_Read
  4909 ;; This function uses a non-reentrant model
  4910 ;;
  4911                           
  4912                           	psect	text19
  4913   002744                     __ptext19:
  4914                           	callstack 0
  4915   002744                     _I2C_2_Master_Idle:
  4916                           	callstack 27
  4917   002744                     l30:
  4918   002744  010E               	movlb	14	; () banked
  4919   002746  B5D8               	btfsc	216,2,b	;volatile
  4920   002748  EFA8  F013         	goto	u1741
  4921   00274C  EFAA  F013         	goto	u1740
  4922   002750                     u1741:
  4923   002750  EFA2  F013         	goto	l30
  4924   002754                     u1740:
  4925   002754                     
  4926                           ; BSR set to: 14
  4927   002754  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  4928   002758  0E1F               	movlw	31
  4929   00275A  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  4930   00275C  A4D8               	btfss	status,2,c
  4931   00275E  EFB3  F013         	goto	u1751
  4932   002762  EFB5  F013         	goto	u1750
  4933   002766                     u1751:
  4934   002766  EFA2  F013         	goto	l30
  4935   00276A                     u1750:
  4936   00276A                     
  4937                           ; BSR set to: 14
  4938   00276A  0012               	return		;funcret
  4939   00276C                     __end_of_I2C_2_Master_Idle:
  4940                           	callstack 0
  4941                           
  4942 ;; *************** function _I2C_2_Master_Init *****************
  4943 ;; Defined at:
  4944 ;;		line 4 in file "i2c.c"
  4945 ;; Parameters:    Size  Location     Type
  4946 ;;		None
  4947 ;; Auto vars:     Size  Location     Type
  4948 ;;		None
  4949 ;; Return value:  Size  Location     Type
  4950 ;;                  1    wreg      void 
  4951 ;; Registers used:
  4952 ;;		wreg, status,2
  4953 ;; Tracked objects:
  4954 ;;		On entry : 0/0
  4955 ;;		On exit  : 0/0
  4956 ;;		Unchanged: 0/0
  4957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4962 ;;Total ram usage:        0 bytes
  4963 ;; Hardware stack levels used: 1
  4964 ;; Hardware stack levels required when called: 1
  4965 ;; This function calls:
  4966 ;;		Nothing
  4967 ;; This function is called by:
  4968 ;;		_main
  4969 ;;		_color_click_init
  4970 ;; This function uses a non-reentrant model
  4971 ;;
  4972                           
  4973                           	psect	text20
  4974   00271A                     __ptext20:
  4975                           	callstack 0
  4976   00271A                     _I2C_2_Master_Init:
  4977                           	callstack 28
  4978   00271A                     
  4979                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  4980   00271A  010E               	movlb	14	; () banked
  4981   00271C  51D9               	movf	217,w,b	;volatile
  4982   00271E  0BF0               	andlw	-16
  4983   002720  0908               	iorlw	8
  4984   002722  6FD9               	movwf	217,b	;volatile
  4985   002724                     
  4986                           ; BSR set to: 14
  4987                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  4988   002724  8BD9               	bsf	217,5,b	;volatile
  4989                           
  4990                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  4991   002726  0E9F               	movlw	159
  4992   002728  6FD6               	movwf	214,b	;volatile
  4993   00272A                     
  4994                           ; BSR set to: 14
  4995                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  4996   00272A  8A84               	bsf	132,5,c	;volatile
  4997   00272C                     
  4998                           ; BSR set to: 14
  4999                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  5000   00272C  8C84               	bsf	132,6,c	;volatile
  5001   00272E                     
  5002                           ; BSR set to: 14
  5003                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  5004   00272E  9BA7               	bcf	167,5,b	;volatile
  5005   002730                     
  5006                           ; BSR set to: 14
  5007                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  5008   002730  9DA7               	bcf	167,6,b	;volatile
  5009                           
  5010                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  5011   002732  0E1D               	movlw	29
  5012   002734  6F1D               	movwf	29,b	;volatile
  5013                           
  5014                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  5015   002736  0E1E               	movlw	30
  5016   002738  6F1C               	movwf	28,b	;volatile
  5017                           
  5018                           ;i2c.c: 18:   RD5PPS=0x1C;
  5019   00273A  0E1C               	movlw	28
  5020   00273C  6F6F               	movwf	111,b	;volatile
  5021                           
  5022                           ;i2c.c: 19:   RD6PPS=0x1B;
  5023   00273E  0E1B               	movlw	27
  5024   002740  6F70               	movwf	112,b	;volatile
  5025   002742                     
  5026                           ; BSR set to: 14
  5027   002742  0012               	return		;funcret
  5028   002744                     __end_of_I2C_2_Master_Init:
  5029                           	callstack 0
  5030                           
  5031 ;; *************** function _carryoutstep *****************
  5032 ;; Defined at:
  5033 ;;		line 290 in file "dc_motor.c"
  5034 ;; Parameters:    Size  Location     Type
  5035 ;;  motorL          9    0[BANK0 ] struct DC_motor
  5036 ;;  motorR          9    9[BANK0 ] struct DC_motor
  5037 ;;  read            2   18[BANK0 ] PTR struct colors
  5038 ;;		 -> main@reading(8), 
  5039 ;;  mx              2   20[BANK0 ] PTR struct colors
  5040 ;;		 -> main@max(8), 
  5041 ;;  amb             2   22[BANK0 ] PTR struct colors
  5042 ;;		 -> main@ambient(8), 
  5043 ;;  step            1   24[BANK0 ] unsigned char 
  5044 ;; Auto vars:     Size  Location     Type
  5045 ;;		None
  5046 ;; Return value:  Size  Location     Type
  5047 ;;                  1    wreg      void 
  5048 ;; Registers used:
  5049 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5050 ;; Tracked objects:
  5051 ;;		On entry : 0/0
  5052 ;;		On exit  : 0/0
  5053 ;;		Unchanged: 0/0
  5054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5055 ;;      Params:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5058 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5059 ;;Total ram usage:       25 bytes
  5060 ;; Hardware stack levels used: 1
  5061 ;; Hardware stack levels required when called: 7
  5062 ;; This function calls:
  5063 ;;		_returnhome
  5064 ;;		_savepath
  5065 ;;		_smallmovement
  5066 ;;		_square
  5067 ;;		_turn180
  5068 ;;		_turnLeft135
  5069 ;;		_turnLeft90
  5070 ;;		_turnRight135
  5071 ;;		_turnRight90
  5072 ;; This function is called by:
  5073 ;;		_main
  5074 ;; This function uses a non-reentrant model
  5075 ;;
  5076                           
  5077                           	psect	text21
  5078   0014D4                     __ptext21:
  5079                           	callstack 0
  5080   0014D4                     _carryoutstep:
  5081                           	callstack 23
  5082   0014D4                     
  5083                           ;dc_motor.c: 290: void carryoutstep(DC_motor motorL, DC_motor motorR, struct colors *rea
      +                          d, struct colors *mx, struct colors *amb, char step);dc_motor.c: 291: {;dc_motor.c: 292:
      +                               if (step == 2){
  5084   0014D4  0E02               	movlw	2
  5085   0014D6  0100               	movlb	0	; () banked
  5086   0014D8  1978               	xorwf	carryoutstep@step& (0+255),w,b
  5087   0014DA  A4D8               	btfss	status,2,c
  5088   0014DC  EF72  F00A         	goto	u2651
  5089   0014E0  EF74  F00A         	goto	u2650
  5090   0014E4                     u2651:
  5091   0014E4  EF82  F00A         	goto	l3121
  5092   0014E8                     u2650:
  5093   0014E8                     
  5094                           ; BSR set to: 0
  5095                           ;dc_motor.c: 293:     turnRight90(&motorL,&motorR);
  5096   0014E8  0E60               	movlw	low carryoutstep@motorL
  5097   0014EA  6E1E               	movwf	turnRight90@mL^0,c
  5098   0014EC  0E00               	movlw	high carryoutstep@motorL
  5099   0014EE  6E1F               	movwf	(turnRight90@mL+1)^0,c
  5100   0014F0  0E69               	movlw	low carryoutstep@motorR
  5101   0014F2  6E20               	movwf	turnRight90@mR^0,c
  5102   0014F4  0E00               	movlw	high carryoutstep@motorR
  5103   0014F6  6E21               	movwf	(turnRight90@mR+1)^0,c
  5104   0014F8  EC80  F00E         	call	_turnRight90	;wreg free
  5105   0014FC                     
  5106                           ;dc_motor.c: 294:     LATHbits.LATH1=1;
  5107   0014FC  8280               	bsf	128,1,c	;volatile
  5108   0014FE                     
  5109                           ;dc_motor.c: 295:     savepath(2);}
  5110   0014FE  0E02               	movlw	2
  5111   001500  EC13  F014         	call	_savepath
  5112   001504                     l3121:
  5113                           
  5114                           ;dc_motor.c: 297:     if (step == 3){
  5115   001504  0E03               	movlw	3
  5116   001506  0100               	movlb	0	; () banked
  5117   001508  1978               	xorwf	carryoutstep@step& (0+255),w,b
  5118   00150A  A4D8               	btfss	status,2,c
  5119   00150C  EF8A  F00A         	goto	u2661
  5120   001510  EF8C  F00A         	goto	u2660
  5121   001514                     u2661:
  5122   001514  EF99  F00A         	goto	l3127
  5123   001518                     u2660:
  5124   001518                     
  5125                           ; BSR set to: 0
  5126                           ;dc_motor.c: 298:     turnLeft90(&motorL,&motorR);
  5127   001518  0E60               	movlw	low carryoutstep@motorL
  5128   00151A  6E1E               	movwf	turnLeft90@mL^0,c
  5129   00151C  0E00               	movlw	high carryoutstep@motorL
  5130   00151E  6E1F               	movwf	(turnLeft90@mL+1)^0,c
  5131   001520  0E69               	movlw	low carryoutstep@motorR
  5132   001522  6E20               	movwf	turnLeft90@mR^0,c
  5133   001524  0E00               	movlw	high carryoutstep@motorR
  5134   001526  6E21               	movwf	(turnLeft90@mR+1)^0,c
  5135   001528  EC09  F00E         	call	_turnLeft90	;wreg free
  5136   00152C                     
  5137                           ;dc_motor.c: 299:     savepath(3);}
  5138   00152C  0E03               	movlw	3
  5139   00152E  EC13  F014         	call	_savepath
  5140   001532                     l3127:
  5141                           
  5142                           ;dc_motor.c: 301:     if (step == 4){
  5143   001532  0E04               	movlw	4
  5144   001534  0100               	movlb	0	; () banked
  5145   001536  1978               	xorwf	carryoutstep@step& (0+255),w,b
  5146   001538  A4D8               	btfss	status,2,c
  5147   00153A  EFA1  F00A         	goto	u2671
  5148   00153E  EFA3  F00A         	goto	u2670
  5149   001542                     u2671:
  5150   001542  EFB0  F00A         	goto	l3133
  5151   001546                     u2670:
  5152   001546                     
  5153                           ; BSR set to: 0
  5154                           ;dc_motor.c: 302:     turn180(&motorL,&motorR);
  5155   001546  0E60               	movlw	low carryoutstep@motorL
  5156   001548  6E1E               	movwf	turn180@mL^0,c
  5157   00154A  0E00               	movlw	high carryoutstep@motorL
  5158   00154C  6E1F               	movwf	(turn180@mL+1)^0,c
  5159   00154E  0E69               	movlw	low carryoutstep@motorR
  5160   001550  6E20               	movwf	turn180@mR^0,c
  5161   001552  0E00               	movlw	high carryoutstep@motorR
  5162   001554  6E21               	movwf	(turn180@mR+1)^0,c
  5163   001556  EC69  F00F         	call	_turn180	;wreg free
  5164   00155A                     
  5165                           ;dc_motor.c: 303:     savepath(4);}
  5166   00155A  0E04               	movlw	4
  5167   00155C  EC13  F014         	call	_savepath
  5168   001560                     l3133:
  5169                           
  5170                           ;dc_motor.c: 305:     if (step == 5){
  5171   001560  0E05               	movlw	5
  5172   001562  0100               	movlb	0	; () banked
  5173   001564  1978               	xorwf	carryoutstep@step& (0+255),w,b
  5174   001566  A4D8               	btfss	status,2,c
  5175   001568  EFB8  F00A         	goto	u2681
  5176   00156C  EFBA  F00A         	goto	u2680
  5177   001570                     u2681:
  5178   001570  EFD6  F00A         	goto	l3141
  5179   001574                     u2680:
  5180   001574                     
  5181                           ; BSR set to: 0
  5182                           ;dc_motor.c: 306:     square(&motorL,&motorR, 0);
  5183   001574  0E60               	movlw	low carryoutstep@motorL
  5184   001576  6E1E               	movwf	square@mL^0,c
  5185   001578  0E00               	movlw	high carryoutstep@motorL
  5186   00157A  6E1F               	movwf	(square@mL+1)^0,c
  5187   00157C  0E69               	movlw	low carryoutstep@motorR
  5188   00157E  6E20               	movwf	square@mR^0,c
  5189   001580  0E00               	movlw	high carryoutstep@motorR
  5190   001582  6E21               	movwf	(square@mR+1)^0,c
  5191   001584  0E00               	movlw	0
  5192   001586  6E22               	movwf	square@dir^0,c
  5193   001588  EC7A  F011         	call	_square	;wreg free
  5194                           
  5195                           ;dc_motor.c: 307:     turnRight90(&motorL,&motorR);
  5196   00158C  0E60               	movlw	low carryoutstep@motorL
  5197   00158E  6E1E               	movwf	turnRight90@mL^0,c
  5198   001590  0E00               	movlw	high carryoutstep@motorL
  5199   001592  6E1F               	movwf	(turnRight90@mL+1)^0,c
  5200   001594  0E69               	movlw	low carryoutstep@motorR
  5201   001596  6E20               	movwf	turnRight90@mR^0,c
  5202   001598  0E00               	movlw	high carryoutstep@motorR
  5203   00159A  6E21               	movwf	(turnRight90@mR+1)^0,c
  5204   00159C  EC80  F00E         	call	_turnRight90	;wreg free
  5205   0015A0                     
  5206                           ;dc_motor.c: 308:     savepath(7);
  5207   0015A0  0E07               	movlw	7
  5208   0015A2  EC13  F014         	call	_savepath
  5209   0015A6                     
  5210                           ;dc_motor.c: 309:     savepath(2);
  5211   0015A6  0E02               	movlw	2
  5212   0015A8  EC13  F014         	call	_savepath
  5213   0015AC                     l3141:
  5214                           
  5215                           ;dc_motor.c: 312:     if (step == 6){
  5216   0015AC  0E06               	movlw	6
  5217   0015AE  0100               	movlb	0	; () banked
  5218   0015B0  1978               	xorwf	carryoutstep@step& (0+255),w,b
  5219   0015B2  A4D8               	btfss	status,2,c
  5220   0015B4  EFDE  F00A         	goto	u2691
  5221   0015B8  EFE0  F00A         	goto	u2690
  5222   0015BC                     u2691:
  5223   0015BC  EFFC  F00A         	goto	l3149
  5224   0015C0                     u2690:
  5225   0015C0                     
  5226                           ; BSR set to: 0
  5227                           ;dc_motor.c: 313:     square(&motorL,&motorR, 0);
  5228   0015C0  0E60               	movlw	low carryoutstep@motorL
  5229   0015C2  6E1E               	movwf	square@mL^0,c
  5230   0015C4  0E00               	movlw	high carryoutstep@motorL
  5231   0015C6  6E1F               	movwf	(square@mL+1)^0,c
  5232   0015C8  0E69               	movlw	low carryoutstep@motorR
  5233   0015CA  6E20               	movwf	square@mR^0,c
  5234   0015CC  0E00               	movlw	high carryoutstep@motorR
  5235   0015CE  6E21               	movwf	(square@mR+1)^0,c
  5236   0015D0  0E00               	movlw	0
  5237   0015D2  6E22               	movwf	square@dir^0,c
  5238   0015D4  EC7A  F011         	call	_square	;wreg free
  5239                           
  5240                           ;dc_motor.c: 314:     turnLeft90(&motorL,&motorR);
  5241   0015D8  0E60               	movlw	low carryoutstep@motorL
  5242   0015DA  6E1E               	movwf	turnLeft90@mL^0,c
  5243   0015DC  0E00               	movlw	high carryoutstep@motorL
  5244   0015DE  6E1F               	movwf	(turnLeft90@mL+1)^0,c
  5245   0015E0  0E69               	movlw	low carryoutstep@motorR
  5246   0015E2  6E20               	movwf	turnLeft90@mR^0,c
  5247   0015E4  0E00               	movlw	high carryoutstep@motorR
  5248   0015E6  6E21               	movwf	(turnLeft90@mR+1)^0,c
  5249   0015E8  EC09  F00E         	call	_turnLeft90	;wreg free
  5250   0015EC                     
  5251                           ;dc_motor.c: 315:     savepath(7);
  5252   0015EC  0E07               	movlw	7
  5253   0015EE  EC13  F014         	call	_savepath
  5254   0015F2                     
  5255                           ;dc_motor.c: 316:     savepath(3);
  5256   0015F2  0E03               	movlw	3
  5257   0015F4  EC13  F014         	call	_savepath
  5258   0015F8                     l3149:
  5259                           
  5260                           ;dc_motor.c: 320:     if (step == 7){
  5261   0015F8  0E07               	movlw	7
  5262   0015FA  0100               	movlb	0	; () banked
  5263   0015FC  1978               	xorwf	carryoutstep@step& (0+255),w,b
  5264   0015FE  A4D8               	btfss	status,2,c
  5265   001600  EF04  F00B         	goto	u2701
  5266   001604  EF06  F00B         	goto	u2700
  5267   001608                     u2701:
  5268   001608  EF13  F00B         	goto	l3155
  5269   00160C                     u2700:
  5270   00160C                     
  5271                           ; BSR set to: 0
  5272                           ;dc_motor.c: 321:     turnRight135(&motorL,&motorR);
  5273   00160C  0E60               	movlw	low carryoutstep@motorL
  5274   00160E  6E1E               	movwf	turnRight135@mL^0,c
  5275   001610  0E00               	movlw	high carryoutstep@motorL
  5276   001612  6E1F               	movwf	(turnRight135@mL+1)^0,c
  5277   001614  0E69               	movlw	low carryoutstep@motorR
  5278   001616  6E20               	movwf	turnRight135@mR^0,c
  5279   001618  0E00               	movlw	high carryoutstep@motorR
  5280   00161A  6E21               	movwf	(turnRight135@mR+1)^0,c
  5281   00161C  ECF5  F00E         	call	_turnRight135	;wreg free
  5282   001620                     
  5283                           ;dc_motor.c: 322:     savepath(5);
  5284   001620  0E05               	movlw	5
  5285   001622  EC13  F014         	call	_savepath
  5286   001626                     l3155:
  5287                           
  5288                           ;dc_motor.c: 325:     if (step == 8){
  5289   001626  0E08               	movlw	8
  5290   001628  0100               	movlb	0	; () banked
  5291   00162A  1978               	xorwf	carryoutstep@step& (0+255),w,b
  5292   00162C  A4D8               	btfss	status,2,c
  5293   00162E  EF1B  F00B         	goto	u2711
  5294   001632  EF1D  F00B         	goto	u2710
  5295   001636                     u2711:
  5296   001636  EF2A  F00B         	goto	l3161
  5297   00163A                     u2710:
  5298   00163A                     
  5299                           ; BSR set to: 0
  5300                           ;dc_motor.c: 326:     turnLeft135(&motorL,&motorR);
  5301   00163A  0E60               	movlw	low carryoutstep@motorL
  5302   00163C  6E1E               	movwf	turnLeft135@mL^0,c
  5303   00163E  0E00               	movlw	high carryoutstep@motorL
  5304   001640  6E1F               	movwf	(turnLeft135@mL+1)^0,c
  5305   001642  0E69               	movlw	low carryoutstep@motorR
  5306   001644  6E20               	movwf	turnLeft135@mR^0,c
  5307   001646  0E00               	movlw	high carryoutstep@motorR
  5308   001648  6E21               	movwf	(turnLeft135@mR+1)^0,c
  5309   00164A  ECDD  F00F         	call	_turnLeft135	;wreg free
  5310   00164E                     
  5311                           ;dc_motor.c: 327:     savepath(6);
  5312   00164E  0E06               	movlw	6
  5313   001650  EC13  F014         	call	_savepath
  5314   001654                     l3161:
  5315                           
  5316                           ;dc_motor.c: 330:     if (step == 9) {
  5317   001654  0E09               	movlw	9
  5318   001656  0100               	movlb	0	; () banked
  5319   001658  1978               	xorwf	carryoutstep@step& (0+255),w,b
  5320   00165A  A4D8               	btfss	status,2,c
  5321   00165C  EF32  F00B         	goto	u2721
  5322   001660  EF34  F00B         	goto	u2720
  5323   001664                     u2721:
  5324   001664  EF56  F00B         	goto	l210
  5325   001668                     u2720:
  5326   001668                     
  5327                           ; BSR set to: 0
  5328                           ;dc_motor.c: 333:         LATDbits.LATD3=1;
  5329   001668  867C               	bsf	124,3,c	;volatile
  5330                           
  5331                           ;dc_motor.c: 334:         LATDbits.LATD4=1;
  5332   00166A  887C               	bsf	124,4,c	;volatile
  5333   00166C                     
  5334                           ; BSR set to: 0
  5335                           ;dc_motor.c: 335:         smallmovement(&motorL, &motorR, 1);
  5336   00166C  0E60               	movlw	low carryoutstep@motorL
  5337   00166E  6E1E               	movwf	smallmovement@mL^0,c
  5338   001670  0E00               	movlw	high carryoutstep@motorL
  5339   001672  6E1F               	movwf	(smallmovement@mL+1)^0,c
  5340   001674  0E69               	movlw	low carryoutstep@motorR
  5341   001676  6E20               	movwf	smallmovement@mR^0,c
  5342   001678  0E00               	movlw	high carryoutstep@motorR
  5343   00167A  6E21               	movwf	(smallmovement@mR+1)^0,c
  5344   00167C  0E01               	movlw	1
  5345   00167E  6E22               	movwf	smallmovement@dir^0,c
  5346   001680  ECB6  F010         	call	_smallmovement	;wreg free
  5347   001684                     
  5348                           ;dc_motor.c: 336:         returnhome(motorL, motorR);
  5349   001684  EE20  F060         	lfsr	2,carryoutstep@motorL
  5350   001688  EE00  F037         	lfsr	0,returnhome@motorL
  5351   00168C  0E08               	movlw	8
  5352   00168E                     u2731:
  5353   00168E  CFDB FFEB          	movff	plusw2,plusw0
  5354   001692  06E8               	decf	wreg,f,c
  5355   001694  E2FC               	bc	u2731
  5356   001696  EE20  F069         	lfsr	2,carryoutstep@motorR
  5357   00169A  EE00  F040         	lfsr	0,returnhome@motorR
  5358   00169E  0E08               	movlw	8
  5359   0016A0                     u2741:
  5360   0016A0  CFDB FFEB          	movff	plusw2,plusw0
  5361   0016A4  06E8               	decf	wreg,f,c
  5362   0016A6  E2FC               	bc	u2741
  5363   0016A8  ECE7  F00C         	call	_returnhome	;wreg free
  5364   0016AC                     l210:
  5365   0016AC  0012               	return		;funcret
  5366   0016AE                     __end_of_carryoutstep:
  5367                           	callstack 0
  5368                           
  5369 ;; *************** function _smallmovement *****************
  5370 ;; Defined at:
  5371 ;;		line 269 in file "dc_motor.c"
  5372 ;; Parameters:    Size  Location     Type
  5373 ;;  mL              2   29[COMRAM] PTR struct DC_motor
  5374 ;;		 -> main@motorL(9), carryoutstep@motorL(9), 
  5375 ;;  mR              2   31[COMRAM] PTR struct DC_motor
  5376 ;;		 -> main@motorR(9), carryoutstep@motorR(9), 
  5377 ;;  dir             1   33[COMRAM] unsigned char 
  5378 ;; Auto vars:     Size  Location     Type
  5379 ;;		None
  5380 ;; Return value:  Size  Location     Type
  5381 ;;                  1    wreg      void 
  5382 ;; Registers used:
  5383 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5384 ;; Tracked objects:
  5385 ;;		On entry : 0/0
  5386 ;;		On exit  : 0/0
  5387 ;;		Unchanged: 0/0
  5388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5389 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5391 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5392 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5393 ;;Total ram usage:        6 bytes
  5394 ;; Hardware stack levels used: 1
  5395 ;; Hardware stack levels required when called: 4
  5396 ;; This function calls:
  5397 ;;		_setMotorPWM
  5398 ;;		_stop
  5399 ;; This function is called by:
  5400 ;;		_carryoutstep
  5401 ;;		_main
  5402 ;; This function uses a non-reentrant model
  5403 ;;
  5404                           
  5405                           	psect	text22
  5406   00216C                     __ptext22:
  5407                           	callstack 0
  5408   00216C                     _smallmovement:
  5409                           	callstack 26
  5410   00216C                     
  5411                           ;dc_motor.c: 269: void smallmovement(DC_motor *mL, DC_motor *mR, char dir);dc_motor.c: 2
      +                          70: {;dc_motor.c: 271:     stop(mL, mR);
  5412   00216C  C01E  F019         	movff	smallmovement@mL,stop@mL
  5413   002170  C01F  F01A         	movff	smallmovement@mL+1,stop@mL+1
  5414   002174  C020  F01B         	movff	smallmovement@mR,stop@mR
  5415   002178  C021  F01C         	movff	smallmovement@mR+1,stop@mR+1
  5416   00217C  EC5A  F012         	call	_stop	;wreg free
  5417   002180                     
  5418                           ;dc_motor.c: 272:     mL->direction = dir;
  5419   002180  EE20 F001          	lfsr	2,1
  5420   002184  501E               	movf	smallmovement@mL^0,w,c
  5421   002186  26D9               	addwf	fsr2l,f,c
  5422   002188  501F               	movf	(smallmovement@mL+1)^0,w,c
  5423   00218A  22DA               	addwfc	fsr2h,f,c
  5424   00218C  C022  FFDF         	movff	smallmovement@dir,indf2
  5425   002190                     
  5426                           ;dc_motor.c: 273:     mR->direction = dir;
  5427   002190  EE20 F001          	lfsr	2,1
  5428   002194  5020               	movf	smallmovement@mR^0,w,c
  5429   002196  26D9               	addwf	fsr2l,f,c
  5430   002198  5021               	movf	(smallmovement@mR+1)^0,w,c
  5431   00219A  22DA               	addwfc	fsr2h,f,c
  5432   00219C  C022  FFDF         	movff	smallmovement@dir,indf2
  5433                           
  5434                           ;dc_motor.c: 275:     while (mL->power <= 55 || mR->power <= 55 ) {
  5435   0021A0  EFEF  F010         	goto	l2687
  5436   0021A4                     l2677:
  5437                           
  5438                           ;dc_motor.c: 276:         _delay((unsigned long)((10)*(64000000/4000.0)));
  5439   0021A4  0ED0               	movlw	208
  5440   0021A6  6E23               	movwf	??_smallmovement^0,c
  5441   0021A8  0ECA               	movlw	202
  5442   0021AA                     u3397:
  5443   0021AA  2EE8               	decfsz	wreg,f,c
  5444   0021AC  D7FE               	bra	u3397
  5445   0021AE  2E23               	decfsz	??_smallmovement^0,f,c
  5446   0021B0  D7FC               	bra	u3397
  5447   0021B2                     
  5448                           ;dc_motor.c: 277:         mL->power++;
  5449   0021B2  C01E  FFD9         	movff	smallmovement@mL,fsr2l
  5450   0021B6  C01F  FFDA         	movff	smallmovement@mL+1,fsr2h
  5451   0021BA  2ADF               	incf	indf2,f,c
  5452   0021BC                     
  5453                           ;dc_motor.c: 278:         mR->power++;
  5454   0021BC  C020  FFD9         	movff	smallmovement@mR,fsr2l
  5455   0021C0  C021  FFDA         	movff	smallmovement@mR+1,fsr2h
  5456   0021C4  2ADF               	incf	indf2,f,c
  5457   0021C6                     
  5458                           ;dc_motor.c: 279:         setMotorPWM(mL);
  5459   0021C6  C01E  F013         	movff	smallmovement@mL,setMotorPWM@m
  5460   0021CA  C01F  F014         	movff	smallmovement@mL+1,setMotorPWM@m+1
  5461   0021CE  EC31  F00C         	call	_setMotorPWM	;wreg free
  5462   0021D2                     
  5463                           ;dc_motor.c: 280:         setMotorPWM(mR);
  5464   0021D2  C020  F013         	movff	smallmovement@mR,setMotorPWM@m
  5465   0021D6  C021  F014         	movff	smallmovement@mR+1,setMotorPWM@m+1
  5466   0021DA  EC31  F00C         	call	_setMotorPWM	;wreg free
  5467   0021DE                     l2687:
  5468                           
  5469                           ;dc_motor.c: 275:     while (mL->power <= 55 || mR->power <= 55 ) {
  5470   0021DE  C01E  FFD9         	movff	smallmovement@mL,fsr2l
  5471   0021E2  C01F  FFDA         	movff	smallmovement@mL+1,fsr2h
  5472   0021E6  0E37               	movlw	55
  5473   0021E8  64DF               	cpfsgt	indf2,c
  5474   0021EA  EFF9  F010         	goto	u1981
  5475   0021EE  EFFB  F010         	goto	u1980
  5476   0021F2                     u1981:
  5477   0021F2  EFD2  F010         	goto	l2677
  5478   0021F6                     u1980:
  5479   0021F6  C020  FFD9         	movff	smallmovement@mR,fsr2l
  5480   0021FA  C021  FFDA         	movff	smallmovement@mR+1,fsr2h
  5481   0021FE  0E37               	movlw	55
  5482   002200  64DF               	cpfsgt	indf2,c
  5483   002202  EF05  F011         	goto	u1991
  5484   002206  EF07  F011         	goto	u1990
  5485   00220A                     u1991:
  5486   00220A  EFD2  F010         	goto	l2677
  5487   00220E                     u1990:
  5488   00220E                     
  5489                           ;dc_motor.c: 283:     _delay((unsigned long)((10)*(64000000/4000.0)));
  5490   00220E  0ED0               	movlw	208
  5491   002210  6E23               	movwf	??_smallmovement^0,c
  5492   002212  0ECA               	movlw	202
  5493   002214                     u3407:
  5494   002214  2EE8               	decfsz	wreg,f,c
  5495   002216  D7FE               	bra	u3407
  5496   002218  2E23               	decfsz	??_smallmovement^0,f,c
  5497   00221A  D7FC               	bra	u3407
  5498   00221C                     
  5499                           ;dc_motor.c: 285:     stop(mL, mR);
  5500   00221C  C01E  F019         	movff	smallmovement@mL,stop@mL
  5501   002220  C01F  F01A         	movff	smallmovement@mL+1,stop@mL+1
  5502   002224  C020  F01B         	movff	smallmovement@mR,stop@mR
  5503   002228  C021  F01C         	movff	smallmovement@mR+1,stop@mR+1
  5504   00222C  EC5A  F012         	call	_stop	;wreg free
  5505   002230  0012               	return		;funcret
  5506   002232                     __end_of_smallmovement:
  5507                           	callstack 0
  5508                           
  5509 ;; *************** function _savepath *****************
  5510 ;; Defined at:
  5511 ;;		line 355 in file "dc_motor.c"
  5512 ;; Parameters:    Size  Location     Type
  5513 ;;  instruction     1    wreg     unsigned char 
  5514 ;; Auto vars:     Size  Location     Type
  5515 ;;  instruction     1    0[COMRAM] unsigned char 
  5516 ;; Return value:  Size  Location     Type
  5517 ;;                  1    wreg      void 
  5518 ;; Registers used:
  5519 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5520 ;; Tracked objects:
  5521 ;;		On entry : 0/0
  5522 ;;		On exit  : 0/0
  5523 ;;		Unchanged: 0/0
  5524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5526 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5528 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5529 ;;Total ram usage:        1 bytes
  5530 ;; Hardware stack levels used: 1
  5531 ;; Hardware stack levels required when called: 1
  5532 ;; This function calls:
  5533 ;;		Nothing
  5534 ;; This function is called by:
  5535 ;;		_carryoutstep
  5536 ;;		_main
  5537 ;; This function uses a non-reentrant model
  5538 ;;
  5539                           
  5540                           	psect	text23
  5541   002826                     __ptext23:
  5542                           	callstack 0
  5543   002826                     _savepath:
  5544                           	callstack 29
  5545                           
  5546                           ;incstack = 0
  5547                           ;savepath@instruction stored from wreg
  5548   002826  6E01               	movwf	savepath@instruction^0,c
  5549   002828                     
  5550                           ;dc_motor.c: 355: void savepath(char instruction);dc_motor.c: 356: {;dc_motor.c: 357:   
      +                            path[pathposition] = instruction;
  5551   002828  0E00               	movlw	low _path
  5552   00282A  2455               	addwf	_pathposition^0,w,c
  5553   00282C  6ED9               	movwf	fsr2l,c
  5554   00282E  6ADA               	clrf	fsr2h,c
  5555   002830  0E01               	movlw	high _path
  5556   002832  22DA               	addwfc	fsr2h,f,c
  5557   002834  C001  FFDF         	movff	savepath@instruction,indf2
  5558   002838                     
  5559                           ;dc_motor.c: 358:     pathposition++;
  5560   002838  2A55               	incf	_pathposition^0,f,c
  5561   00283A  0012               	return		;funcret
  5562   00283C                     __end_of_savepath:
  5563                           	callstack 0
  5564                           
  5565 ;; *************** function _returnhome *****************
  5566 ;; Defined at:
  5567 ;;		line 370 in file "dc_motor.c"
  5568 ;; Parameters:    Size  Location     Type
  5569 ;;  motorL          9   54[COMRAM] struct DC_motor
  5570 ;;  motorR          9   63[COMRAM] struct DC_motor
  5571 ;; Auto vars:     Size  Location     Type
  5572 ;;		None
  5573 ;; Return value:  Size  Location     Type
  5574 ;;                  1    wreg      void 
  5575 ;; Registers used:
  5576 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5577 ;; Tracked objects:
  5578 ;;		On entry : 0/0
  5579 ;;		On exit  : 0/0
  5580 ;;		Unchanged: 0/0
  5581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5582 ;;      Params:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5584 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5585 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5586 ;;Total ram usage:       21 bytes
  5587 ;; Hardware stack levels used: 1
  5588 ;; Hardware stack levels required when called: 6
  5589 ;; This function calls:
  5590 ;;		_fullSpeedAhead
  5591 ;;		_returnstep
  5592 ;;		_square
  5593 ;;		_stop
  5594 ;; This function is called by:
  5595 ;;		_carryoutstep
  5596 ;;		_main
  5597 ;; This function uses a non-reentrant model
  5598 ;;
  5599                           
  5600                           	psect	text24
  5601   0019CE                     __ptext24:
  5602                           	callstack 0
  5603   0019CE                     _returnhome:
  5604                           	callstack 24
  5605   0019CE                     
  5606                           ;dc_motor.c: 370: void returnhome(DC_motor motorL, DC_motor motorR);dc_motor.c: 371: {;d
      +                          c_motor.c: 373:     LATFbits.LATF7 = 0;
  5607   0019CE  9E7E               	bcf	126,7,c	;volatile
  5608                           
  5609                           ;dc_motor.c: 374:     LATGbits.LATG1 = 0;
  5610   0019D0  927F               	bcf	127,1,c	;volatile
  5611                           
  5612                           ;dc_motor.c: 375:     LATAbits.LATA4 = 0;
  5613   0019D2  9879               	bcf	121,4,c	;volatile
  5614   0019D4                     
  5615                           ;dc_motor.c: 377:     pathposition--;
  5616   0019D4  0655               	decf	_pathposition^0,f,c
  5617                           
  5618                           ;dc_motor.c: 378:     timeposition--;
  5619   0019D6  0656               	decf	_timeposition^0,f,c
  5620                           
  5621                           ;dc_motor.c: 379:     while (pathposition >= 0) {
  5622   0019D8  EF70  F00D         	goto	l2727
  5623   0019DC                     l2703:
  5624                           
  5625                           ;dc_motor.c: 382:     if (path[pathposition] == 1) {
  5626   0019DC  0E00               	movlw	low _path
  5627   0019DE  2455               	addwf	_pathposition^0,w,c
  5628   0019E0  6ED9               	movwf	fsr2l,c
  5629   0019E2  6ADA               	clrf	fsr2h,c
  5630   0019E4  0E01               	movlw	high _path
  5631   0019E6  22DA               	addwfc	fsr2h,f,c
  5632   0019E8  04DE               	decf	postinc2,w,c
  5633   0019EA  A4D8               	btfss	status,2,c
  5634   0019EC  EFFA  F00C         	goto	u2001
  5635   0019F0  EFFC  F00C         	goto	u2000
  5636   0019F4                     u2001:
  5637   0019F4  EF3A  F00D         	goto	l2719
  5638   0019F8                     u2000:
  5639   0019F8                     
  5640                           ;dc_motor.c: 383:     stop(&motorL, &motorR);
  5641   0019F8  0E37               	movlw	low returnhome@motorL
  5642   0019FA  6E19               	movwf	stop@mL^0,c
  5643   0019FC  0E00               	movlw	high returnhome@motorL
  5644   0019FE  6E1A               	movwf	(stop@mL+1)^0,c
  5645   001A00  0E40               	movlw	low returnhome@motorR
  5646   001A02  6E1B               	movwf	stop@mR^0,c
  5647   001A04  0E00               	movlw	high returnhome@motorR
  5648   001A06  6E1C               	movwf	(stop@mR+1)^0,c
  5649   001A08  EC5A  F012         	call	_stop	;wreg free
  5650   001A0C                     
  5651                           ;dc_motor.c: 384:     interruptenable = 0;
  5652   001A0C  0E00               	movlw	0
  5653   001A0E  6E54               	movwf	_interruptenable^0,c
  5654   001A10                     
  5655                           ;dc_motor.c: 385:     fullSpeedAhead(&motorL, &motorR, 0);
  5656   001A10  0E37               	movlw	low returnhome@motorL
  5657   001A12  6E19               	movwf	fullSpeedAhead@mL^0,c
  5658   001A14  0E00               	movlw	high returnhome@motorL
  5659   001A16  6E1A               	movwf	(fullSpeedAhead@mL+1)^0,c
  5660   001A18  0E40               	movlw	low returnhome@motorR
  5661   001A1A  6E1B               	movwf	fullSpeedAhead@mR^0,c
  5662   001A1C  0E00               	movlw	high returnhome@motorR
  5663   001A1E  6E1C               	movwf	(fullSpeedAhead@mR+1)^0,c
  5664   001A20  0E00               	movlw	0
  5665   001A22  6E1D               	movwf	fullSpeedAhead@dir^0,c
  5666   001A24  EC50  F010         	call	_fullSpeedAhead	;wreg free
  5667   001A28                     
  5668                           ;dc_motor.c: 386:     pathposition=pathposition-1;
  5669   001A28  0455               	decf	_pathposition^0,w,c
  5670   001A2A  6E55               	movwf	_pathposition^0,c
  5671   001A2C                     l2713:
  5672   001A2C  5056               	movf	_timeposition^0,w,c
  5673   001A2E  0D02               	mullw	2
  5674   001A30  0E00               	movlw	low _timearray
  5675   001A32  24F3               	addwf	243,w,c
  5676   001A34  6ED9               	movwf	fsr2l,c
  5677   001A36  0E02               	movlw	high _timearray
  5678   001A38  20F4               	addwfc	prodh,w,c
  5679   001A3A  6EDA               	movwf	fsr2h,c
  5680   001A3C  50DE               	movf	postinc2,w,c
  5681   001A3E  5C52               	subwf	_timercount^0,w,c
  5682   001A40  5053               	movf	(_timercount+1)^0,w,c
  5683   001A42  0A80               	xorlw	128
  5684   001A44  6E4B               	movwf	(??_returnhome+2)^0,c
  5685   001A46  50DE               	movf	postinc2,w,c
  5686   001A48  0A80               	xorlw	128
  5687   001A4A  584B               	subwfb	(??_returnhome+2)^0,w,c
  5688   001A4C  A0D8               	btfss	status,0,c
  5689   001A4E  EF2B  F00D         	goto	u2011
  5690   001A52  EF2D  F00D         	goto	u2010
  5691   001A56                     u2011:
  5692   001A56  EF16  F00D         	goto	l2713
  5693   001A5A                     u2010:
  5694   001A5A                     
  5695                           ;dc_motor.c: 392:     timeposition--;
  5696   001A5A  0656               	decf	_timeposition^0,f,c
  5697   001A5C                     
  5698                           ;dc_motor.c: 393:     stop(&motorL, &motorR);
  5699   001A5C  0E37               	movlw	low returnhome@motorL
  5700   001A5E  6E19               	movwf	stop@mL^0,c
  5701   001A60  0E00               	movlw	high returnhome@motorL
  5702   001A62  6E1A               	movwf	(stop@mL+1)^0,c
  5703   001A64  0E40               	movlw	low returnhome@motorR
  5704   001A66  6E1B               	movwf	stop@mR^0,c
  5705   001A68  0E00               	movlw	high returnhome@motorR
  5706   001A6A  6E1C               	movwf	(stop@mR+1)^0,c
  5707   001A6C  EC5A  F012         	call	_stop	;wreg free
  5708                           
  5709                           ;dc_motor.c: 394:     }
  5710   001A70  EF70  F00D         	goto	l2727
  5711   001A74                     l2719:
  5712   001A74  0E00               	movlw	low _path
  5713   001A76  2455               	addwf	_pathposition^0,w,c
  5714   001A78  6ED9               	movwf	fsr2l,c
  5715   001A7A  6ADA               	clrf	fsr2h,c
  5716   001A7C  0E01               	movlw	high _path
  5717   001A7E  22DA               	addwfc	fsr2h,f,c
  5718   001A80  04DE               	decf	postinc2,w,c
  5719   001A82  B4D8               	btfsc	status,2,c
  5720   001A84  EF46  F00D         	goto	u2021
  5721   001A88  EF48  F00D         	goto	u2020
  5722   001A8C                     u2021:
  5723   001A8C  EF70  F00D         	goto	l2727
  5724   001A90                     u2020:
  5725   001A90                     
  5726                           ;dc_motor.c: 398:     returnstep(path[pathposition], motorL, motorR);
  5727   001A90  EE20  F037         	lfsr	2,returnhome@motorL
  5728   001A94  EE00  F024         	lfsr	0,returnstep@motorL
  5729   001A98  0E08               	movlw	8
  5730   001A9A                     u2031:
  5731   001A9A  CFDB FFEB          	movff	plusw2,plusw0
  5732   001A9E  06E8               	decf	wreg,f,c
  5733   001AA0  E2FC               	bc	u2031
  5734   001AA2  EE20  F040         	lfsr	2,returnhome@motorR
  5735   001AA6  EE00  F02D         	lfsr	0,returnstep@motorR
  5736   001AAA  0E08               	movlw	8
  5737   001AAC                     u2041:
  5738   001AAC  CFDB FFEB          	movff	plusw2,plusw0
  5739   001AB0  06E8               	decf	wreg,f,c
  5740   001AB2  E2FC               	bc	u2041
  5741   001AB4  0E00               	movlw	low _path
  5742   001AB6  2455               	addwf	_pathposition^0,w,c
  5743   001AB8  6ED9               	movwf	fsr2l,c
  5744   001ABA  6ADA               	clrf	fsr2h,c
  5745   001ABC  0E01               	movlw	high _path
  5746   001ABE  22DA               	addwfc	fsr2h,f,c
  5747   001AC0  50DF               	movf	indf2,w,c
  5748   001AC2  EC19  F011         	call	_returnstep
  5749   001AC6                     
  5750                           ;dc_motor.c: 399:     square(&motorL, &motorR, 1);
  5751   001AC6  0E37               	movlw	low returnhome@motorL
  5752   001AC8  6E1E               	movwf	square@mL^0,c
  5753   001ACA  0E00               	movlw	high returnhome@motorL
  5754   001ACC  6E1F               	movwf	(square@mL+1)^0,c
  5755   001ACE  0E40               	movlw	low returnhome@motorR
  5756   001AD0  6E20               	movwf	square@mR^0,c
  5757   001AD2  0E00               	movlw	high returnhome@motorR
  5758   001AD4  6E21               	movwf	(square@mR+1)^0,c
  5759   001AD6  0E01               	movlw	1
  5760   001AD8  6E22               	movwf	square@dir^0,c
  5761   001ADA  EC7A  F011         	call	_square	;wreg free
  5762   001ADE                     
  5763                           ;dc_motor.c: 400:     pathposition--;
  5764   001ADE  0655               	decf	_pathposition^0,f,c
  5765   001AE0                     l2727:
  5766                           
  5767                           ;dc_motor.c: 379:     while (pathposition >= 0) {
  5768   001AE0  BE55               	btfsc	_pathposition^0,7,c
  5769   001AE2  EF77  F00D         	goto	u2050
  5770   001AE6  EF75  F00D         	goto	u2051
  5771   001AEA                     u2051:
  5772   001AEA  EFEE  F00C         	goto	l2703
  5773   001AEE                     u2050:
  5774   001AEE                     
  5775                           ;dc_motor.c: 403:     LATDbits.LATD7 = 1;
  5776   001AEE  8E7C               	bsf	124,7,c	;volatile
  5777   001AF0                     
  5778                           ;dc_motor.c: 404:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5779   001AF0  0E29               	movlw	41
  5780   001AF2  6E4A               	movwf	(??_returnhome+1)^0,c
  5781   001AF4  0E96               	movlw	150
  5782   001AF6  6E49               	movwf	??_returnhome^0,c
  5783   001AF8  0E7F               	movlw	127
  5784   001AFA                     u3417:
  5785   001AFA  2EE8               	decfsz	wreg,f,c
  5786   001AFC  D7FE               	bra	u3417
  5787   001AFE  2E49               	decfsz	??_returnhome^0,f,c
  5788   001B00  D7FC               	bra	u3417
  5789   001B02  2E4A               	decfsz	(??_returnhome+1)^0,f,c
  5790   001B04  D7FA               	bra	u3417
  5791   001B06  F000               	nop	
  5792   001B08  0003               	sleep		;# 
  5793   001B0A  0012               	return		;funcret
  5794   001B0C                     __end_of_returnhome:
  5795                           	callstack 0
  5796                           
  5797 ;; *************** function _square *****************
  5798 ;; Defined at:
  5799 ;;		line 252 in file "dc_motor.c"
  5800 ;; Parameters:    Size  Location     Type
  5801 ;;  mL              2   29[COMRAM] PTR struct DC_motor
  5802 ;;		 -> main@motorL(9), returnhome@motorL(9), carryoutstep@motorL(9), 
  5803 ;;  mR              2   31[COMRAM] PTR struct DC_motor
  5804 ;;		 -> main@motorR(9), returnhome@motorR(9), carryoutstep@motorR(9), 
  5805 ;;  dir             1   33[COMRAM] unsigned char 
  5806 ;; Auto vars:     Size  Location     Type
  5807 ;;		None
  5808 ;; Return value:  Size  Location     Type
  5809 ;;                  1    wreg      void 
  5810 ;; Registers used:
  5811 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5812 ;; Tracked objects:
  5813 ;;		On entry : 0/0
  5814 ;;		On exit  : 0/0
  5815 ;;		Unchanged: 0/0
  5816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5817 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5819 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5820 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5821 ;;Total ram usage:        7 bytes
  5822 ;; Hardware stack levels used: 1
  5823 ;; Hardware stack levels required when called: 4
  5824 ;; This function calls:
  5825 ;;		_setMotorPWM
  5826 ;;		_stop
  5827 ;; This function is called by:
  5828 ;;		_carryoutstep
  5829 ;;		_returnhome
  5830 ;;		_main
  5831 ;; This function uses a non-reentrant model
  5832 ;;
  5833                           
  5834                           	psect	text25
  5835   0022F4                     __ptext25:
  5836                           	callstack 0
  5837   0022F4                     _square:
  5838                           	callstack 26
  5839   0022F4                     
  5840                           ;dc_motor.c: 252: void square(DC_motor *mL, DC_motor *mR, char dir);dc_motor.c: 253: {;d
      +                          c_motor.c: 254:     mL->direction = dir;
  5841   0022F4  EE20 F001          	lfsr	2,1
  5842   0022F8  501E               	movf	square@mL^0,w,c
  5843   0022FA  26D9               	addwf	fsr2l,f,c
  5844   0022FC  501F               	movf	(square@mL+1)^0,w,c
  5845   0022FE  22DA               	addwfc	fsr2h,f,c
  5846   002300  C022  FFDF         	movff	square@dir,indf2
  5847                           
  5848                           ;dc_motor.c: 255:     mR->direction = dir;
  5849   002304  EE20 F001          	lfsr	2,1
  5850   002308  5020               	movf	square@mR^0,w,c
  5851   00230A  26D9               	addwf	fsr2l,f,c
  5852   00230C  5021               	movf	(square@mR+1)^0,w,c
  5853   00230E  22DA               	addwfc	fsr2h,f,c
  5854   002310  C022  FFDF         	movff	square@dir,indf2
  5855                           
  5856                           ;dc_motor.c: 257:     while (mL->power <= 60 || mR->power <= 60 ) {
  5857   002314  EFA9  F011         	goto	l2611
  5858   002318                     l2601:
  5859                           
  5860                           ;dc_motor.c: 258:         _delay((unsigned long)((10)*(64000000/4000.0)));
  5861   002318  0ED0               	movlw	208
  5862   00231A  6E23               	movwf	??_square^0,c
  5863   00231C  0ECA               	movlw	202
  5864   00231E                     u3427:
  5865   00231E  2EE8               	decfsz	wreg,f,c
  5866   002320  D7FE               	bra	u3427
  5867   002322  2E23               	decfsz	??_square^0,f,c
  5868   002324  D7FC               	bra	u3427
  5869   002326                     
  5870                           ;dc_motor.c: 259:         mL->power++;
  5871   002326  C01E  FFD9         	movff	square@mL,fsr2l
  5872   00232A  C01F  FFDA         	movff	square@mL+1,fsr2h
  5873   00232E  2ADF               	incf	indf2,f,c
  5874   002330                     
  5875                           ;dc_motor.c: 260:         mR->power++;
  5876   002330  C020  FFD9         	movff	square@mR,fsr2l
  5877   002334  C021  FFDA         	movff	square@mR+1,fsr2h
  5878   002338  2ADF               	incf	indf2,f,c
  5879   00233A                     
  5880                           ;dc_motor.c: 261:         setMotorPWM(mL);
  5881   00233A  C01E  F013         	movff	square@mL,setMotorPWM@m
  5882   00233E  C01F  F014         	movff	square@mL+1,setMotorPWM@m+1
  5883   002342  EC31  F00C         	call	_setMotorPWM	;wreg free
  5884   002346                     
  5885                           ;dc_motor.c: 262:         setMotorPWM(mR);
  5886   002346  C020  F013         	movff	square@mR,setMotorPWM@m
  5887   00234A  C021  F014         	movff	square@mR+1,setMotorPWM@m+1
  5888   00234E  EC31  F00C         	call	_setMotorPWM	;wreg free
  5889   002352                     l2611:
  5890                           
  5891                           ;dc_motor.c: 257:     while (mL->power <= 60 || mR->power <= 60 ) {
  5892   002352  C01E  FFD9         	movff	square@mL,fsr2l
  5893   002356  C01F  FFDA         	movff	square@mL+1,fsr2h
  5894   00235A  0E3C               	movlw	60
  5895   00235C  64DF               	cpfsgt	indf2,c
  5896   00235E  EFB3  F011         	goto	u1891
  5897   002362  EFB5  F011         	goto	u1890
  5898   002366                     u1891:
  5899   002366  EF8C  F011         	goto	l2601
  5900   00236A                     u1890:
  5901   00236A  C020  FFD9         	movff	square@mR,fsr2l
  5902   00236E  C021  FFDA         	movff	square@mR+1,fsr2h
  5903   002372  0E3C               	movlw	60
  5904   002374  64DF               	cpfsgt	indf2,c
  5905   002376  EFBF  F011         	goto	u1901
  5906   00237A  EFC1  F011         	goto	u1900
  5907   00237E                     u1901:
  5908   00237E  EF8C  F011         	goto	l2601
  5909   002382                     u1900:
  5910   002382                     
  5911                           ;dc_motor.c: 265:     _delay((unsigned long)((455)*(64000000/4000.0)));
  5912   002382  0E25               	movlw	37
  5913   002384  6E24               	movwf	(??_square+1)^0,c
  5914   002386  0EEF               	movlw	239
  5915   002388  6E23               	movwf	??_square^0,c
  5916   00238A  0E71               	movlw	113
  5917   00238C                     u3437:
  5918   00238C  2EE8               	decfsz	wreg,f,c
  5919   00238E  D7FE               	bra	u3437
  5920   002390  2E23               	decfsz	??_square^0,f,c
  5921   002392  D7FC               	bra	u3437
  5922   002394  2E24               	decfsz	(??_square+1)^0,f,c
  5923   002396  D7FA               	bra	u3437
  5924   002398  F000               	nop	
  5925   00239A                     
  5926                           ;dc_motor.c: 266:     stop(mL, mR);
  5927   00239A  C01E  F019         	movff	square@mL,stop@mL
  5928   00239E  C01F  F01A         	movff	square@mL+1,stop@mL+1
  5929   0023A2  C020  F01B         	movff	square@mR,stop@mR
  5930   0023A6  C021  F01C         	movff	square@mR+1,stop@mR+1
  5931   0023AA  EC5A  F012         	call	_stop	;wreg free
  5932   0023AE  0012               	return		;funcret
  5933   0023B0                     __end_of_square:
  5934                           	callstack 0
  5935                           
  5936 ;; *************** function _returnstep *****************
  5937 ;; Defined at:
  5938 ;;		line 408 in file "dc_motor.c"
  5939 ;; Parameters:    Size  Location     Type
  5940 ;;  instruction     1    wreg     unsigned char 
  5941 ;;  motorL          9   35[COMRAM] struct DC_motor
  5942 ;;  motorR          9   44[COMRAM] struct DC_motor
  5943 ;; Auto vars:     Size  Location     Type
  5944 ;;  instruction     1   53[COMRAM] unsigned char 
  5945 ;; Return value:  Size  Location     Type
  5946 ;;                  1    wreg      void 
  5947 ;; Registers used:
  5948 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5949 ;; Tracked objects:
  5950 ;;		On entry : 0/0
  5951 ;;		On exit  : 0/0
  5952 ;;		Unchanged: 0/0
  5953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5954 ;;      Params:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5955 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5957 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5958 ;;Total ram usage:       19 bytes
  5959 ;; Hardware stack levels used: 1
  5960 ;; Hardware stack levels required when called: 5
  5961 ;; This function calls:
  5962 ;;		_turn180
  5963 ;;		_turnLeft135
  5964 ;;		_turnLeft90
  5965 ;;		_turnRight135
  5966 ;;		_turnRight90
  5967 ;; This function is called by:
  5968 ;;		_returnhome
  5969 ;; This function uses a non-reentrant model
  5970 ;;
  5971                           
  5972                           	psect	text26
  5973   002232                     __ptext26:
  5974                           	callstack 0
  5975   002232                     _returnstep:
  5976                           	callstack 24
  5977                           
  5978                           ;incstack = 0
  5979                           ;returnstep@instruction stored from wreg
  5980   002232  6E36               	movwf	returnstep@instruction^0,c
  5981   002234                     
  5982                           ;dc_motor.c: 409:     if (instruction == 2) {turnLeft90(&motorL,&motorR);}
  5983   002234  0E02               	movlw	2
  5984   002236  1836               	xorwf	returnstep@instruction^0,w,c
  5985   002238  A4D8               	btfss	status,2,c
  5986   00223A  EF21  F011         	goto	u1911
  5987   00223E  EF23  F011         	goto	u1910
  5988   002242                     u1911:
  5989   002242  EF2D  F011         	goto	l2623
  5990   002246                     u1910:
  5991   002246  0E24               	movlw	low returnstep@motorL
  5992   002248  6E1E               	movwf	turnLeft90@mL^0,c
  5993   00224A  0E00               	movlw	high returnstep@motorL
  5994   00224C  6E1F               	movwf	(turnLeft90@mL+1)^0,c
  5995   00224E  0E2D               	movlw	low returnstep@motorR
  5996   002250  6E20               	movwf	turnLeft90@mR^0,c
  5997   002252  0E00               	movlw	high returnstep@motorR
  5998   002254  6E21               	movwf	(turnLeft90@mR+1)^0,c
  5999   002256  EC09  F00E         	call	_turnLeft90	;wreg free
  6000   00225A                     l2623:
  6001                           
  6002                           ;dc_motor.c: 410:     if (instruction == 3) {turnRight90(&motorL,&motorR);}
  6003   00225A  0E03               	movlw	3
  6004   00225C  1836               	xorwf	returnstep@instruction^0,w,c
  6005   00225E  A4D8               	btfss	status,2,c
  6006   002260  EF34  F011         	goto	u1921
  6007   002264  EF36  F011         	goto	u1920
  6008   002268                     u1921:
  6009   002268  EF40  F011         	goto	l2627
  6010   00226C                     u1920:
  6011   00226C  0E24               	movlw	low returnstep@motorL
  6012   00226E  6E1E               	movwf	turnRight90@mL^0,c
  6013   002270  0E00               	movlw	high returnstep@motorL
  6014   002272  6E1F               	movwf	(turnRight90@mL+1)^0,c
  6015   002274  0E2D               	movlw	low returnstep@motorR
  6016   002276  6E20               	movwf	turnRight90@mR^0,c
  6017   002278  0E00               	movlw	high returnstep@motorR
  6018   00227A  6E21               	movwf	(turnRight90@mR+1)^0,c
  6019   00227C  EC80  F00E         	call	_turnRight90	;wreg free
  6020   002280                     l2627:
  6021                           
  6022                           ;dc_motor.c: 411:     if (instruction == 4) {turn180(&motorL,&motorR);}
  6023   002280  0E04               	movlw	4
  6024   002282  1836               	xorwf	returnstep@instruction^0,w,c
  6025   002284  A4D8               	btfss	status,2,c
  6026   002286  EF47  F011         	goto	u1931
  6027   00228A  EF49  F011         	goto	u1930
  6028   00228E                     u1931:
  6029   00228E  EF53  F011         	goto	l2631
  6030   002292                     u1930:
  6031   002292  0E24               	movlw	low returnstep@motorL
  6032   002294  6E1E               	movwf	turn180@mL^0,c
  6033   002296  0E00               	movlw	high returnstep@motorL
  6034   002298  6E1F               	movwf	(turn180@mL+1)^0,c
  6035   00229A  0E2D               	movlw	low returnstep@motorR
  6036   00229C  6E20               	movwf	turn180@mR^0,c
  6037   00229E  0E00               	movlw	high returnstep@motorR
  6038   0022A0  6E21               	movwf	(turn180@mR+1)^0,c
  6039   0022A2  EC69  F00F         	call	_turn180	;wreg free
  6040   0022A6                     l2631:
  6041                           
  6042                           ;dc_motor.c: 412:     if (instruction == 5) {turnLeft135(&motorL,&motorR);}
  6043   0022A6  0E05               	movlw	5
  6044   0022A8  1836               	xorwf	returnstep@instruction^0,w,c
  6045   0022AA  A4D8               	btfss	status,2,c
  6046   0022AC  EF5A  F011         	goto	u1941
  6047   0022B0  EF5C  F011         	goto	u1940
  6048   0022B4                     u1941:
  6049   0022B4  EF66  F011         	goto	l2635
  6050   0022B8                     u1940:
  6051   0022B8  0E24               	movlw	low returnstep@motorL
  6052   0022BA  6E1E               	movwf	turnLeft135@mL^0,c
  6053   0022BC  0E00               	movlw	high returnstep@motorL
  6054   0022BE  6E1F               	movwf	(turnLeft135@mL+1)^0,c
  6055   0022C0  0E2D               	movlw	low returnstep@motorR
  6056   0022C2  6E20               	movwf	turnLeft135@mR^0,c
  6057   0022C4  0E00               	movlw	high returnstep@motorR
  6058   0022C6  6E21               	movwf	(turnLeft135@mR+1)^0,c
  6059   0022C8  ECDD  F00F         	call	_turnLeft135	;wreg free
  6060   0022CC                     l2635:
  6061                           
  6062                           ;dc_motor.c: 413:     if (instruction == 6) {turnRight135(&motorL,&motorR);}
  6063   0022CC  0E06               	movlw	6
  6064   0022CE  1836               	xorwf	returnstep@instruction^0,w,c
  6065   0022D0  A4D8               	btfss	status,2,c
  6066   0022D2  EF6D  F011         	goto	u1951
  6067   0022D6  EF6F  F011         	goto	u1950
  6068   0022DA                     u1951:
  6069   0022DA  EF79  F011         	goto	l237
  6070   0022DE                     u1950:
  6071   0022DE  0E24               	movlw	low returnstep@motorL
  6072   0022E0  6E1E               	movwf	turnRight135@mL^0,c
  6073   0022E2  0E00               	movlw	high returnstep@motorL
  6074   0022E4  6E1F               	movwf	(turnRight135@mL+1)^0,c
  6075   0022E6  0E2D               	movlw	low returnstep@motorR
  6076   0022E8  6E20               	movwf	turnRight135@mR^0,c
  6077   0022EA  0E00               	movlw	high returnstep@motorR
  6078   0022EC  6E21               	movwf	(turnRight135@mR+1)^0,c
  6079   0022EE  ECF5  F00E         	call	_turnRight135	;wreg free
  6080   0022F2                     l237:
  6081   0022F2  0012               	return		;funcret
  6082   0022F4                     __end_of_returnstep:
  6083                           	callstack 0
  6084                           
  6085 ;; *************** function _turnRight90 *****************
  6086 ;; Defined at:
  6087 ;;		line 134 in file "dc_motor.c"
  6088 ;; Parameters:    Size  Location     Type
  6089 ;;  mL              2   29[COMRAM] PTR struct DC_motor
  6090 ;;		 -> returnstep@motorL(9), carryoutstep@motorL(9), 
  6091 ;;  mR              2   31[COMRAM] PTR struct DC_motor
  6092 ;;		 -> returnstep@motorR(9), carryoutstep@motorR(9), 
  6093 ;; Auto vars:     Size  Location     Type
  6094 ;;		None
  6095 ;; Return value:  Size  Location     Type
  6096 ;;                  1    wreg      void 
  6097 ;; Registers used:
  6098 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6099 ;; Tracked objects:
  6100 ;;		On entry : 0/0
  6101 ;;		On exit  : 0/0
  6102 ;;		Unchanged: 0/0
  6103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6104 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6106 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6107 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6108 ;;Total ram usage:        6 bytes
  6109 ;; Hardware stack levels used: 1
  6110 ;; Hardware stack levels required when called: 4
  6111 ;; This function calls:
  6112 ;;		_setMotorPWM
  6113 ;;		_stop
  6114 ;; This function is called by:
  6115 ;;		_carryoutstep
  6116 ;;		_returnstep
  6117 ;; This function uses a non-reentrant model
  6118 ;;
  6119                           
  6120                           	psect	text27
  6121   001D00                     __ptext27:
  6122                           	callstack 0
  6123   001D00                     _turnRight90:
  6124                           	callstack 24
  6125   001D00                     
  6126                           ;dc_motor.c: 134: void turnRight90(DC_motor *mL, DC_motor *mR);dc_motor.c: 135: { stop(m
      +                          L, mR);
  6127   001D00  C01E  F019         	movff	turnRight90@mL,stop@mL
  6128   001D04  C01F  F01A         	movff	turnRight90@mL+1,stop@mL+1
  6129   001D08  C020  F01B         	movff	turnRight90@mR,stop@mR
  6130   001D0C  C021  F01C         	movff	turnRight90@mR+1,stop@mR+1
  6131   001D10  EC5A  F012         	call	_stop	;wreg free
  6132   001D14                     
  6133                           ;dc_motor.c: 137:     mL->direction = 1;
  6134   001D14  EE20 F001          	lfsr	2,1
  6135   001D18  501E               	movf	turnRight90@mL^0,w,c
  6136   001D1A  26D9               	addwf	fsr2l,f,c
  6137   001D1C  501F               	movf	(turnRight90@mL+1)^0,w,c
  6138   001D1E  22DA               	addwfc	fsr2h,f,c
  6139   001D20  0E01               	movlw	1
  6140   001D22  6EDF               	movwf	indf2,c
  6141   001D24                     
  6142                           ;dc_motor.c: 138:     mR->direction = 0;
  6143   001D24  EE20 F001          	lfsr	2,1
  6144   001D28  5020               	movf	turnRight90@mR^0,w,c
  6145   001D2A  26D9               	addwf	fsr2l,f,c
  6146   001D2C  5021               	movf	(turnRight90@mR+1)^0,w,c
  6147   001D2E  22DA               	addwfc	fsr2h,f,c
  6148   001D30  0E00               	movlw	0
  6149   001D32  6EDF               	movwf	indf2,c
  6150   001D34                     
  6151                           ;dc_motor.c: 140:     mL->power = 20;
  6152   001D34  C01E  FFD9         	movff	turnRight90@mL,fsr2l
  6153   001D38  C01F  FFDA         	movff	turnRight90@mL+1,fsr2h
  6154   001D3C  0E14               	movlw	20
  6155   001D3E  6EDF               	movwf	indf2,c
  6156   001D40                     
  6157                           ;dc_motor.c: 141:     mR->power = 20;
  6158   001D40  C020  FFD9         	movff	turnRight90@mR,fsr2l
  6159   001D44  C021  FFDA         	movff	turnRight90@mR+1,fsr2h
  6160   001D48  0E14               	movlw	20
  6161   001D4A  6EDF               	movwf	indf2,c
  6162                           
  6163                           ;dc_motor.c: 143:     while (mL->power <= 50 && mR->power <= 50 ) {
  6164   001D4C  EFC6  F00E         	goto	l2475
  6165   001D50                     l2465:
  6166                           
  6167                           ;dc_motor.c: 144:         _delay((unsigned long)((5)*(64000000/4000.0)));
  6168   001D50  0E68               	movlw	104
  6169   001D52  6E22               	movwf	??_turnRight90^0,c
  6170   001D54  0EE4               	movlw	228
  6171   001D56                     u3447:
  6172   001D56  2EE8               	decfsz	wreg,f,c
  6173   001D58  D7FE               	bra	u3447
  6174   001D5A  2E22               	decfsz	??_turnRight90^0,f,c
  6175   001D5C  D7FC               	bra	u3447
  6176   001D5E  D000               	nop2	
  6177   001D60                     
  6178                           ;dc_motor.c: 145:         mL->power++;
  6179   001D60  C01E  FFD9         	movff	turnRight90@mL,fsr2l
  6180   001D64  C01F  FFDA         	movff	turnRight90@mL+1,fsr2h
  6181   001D68  2ADF               	incf	indf2,f,c
  6182   001D6A                     
  6183                           ;dc_motor.c: 146:         mR->power++;
  6184   001D6A  C020  FFD9         	movff	turnRight90@mR,fsr2l
  6185   001D6E  C021  FFDA         	movff	turnRight90@mR+1,fsr2h
  6186   001D72  2ADF               	incf	indf2,f,c
  6187   001D74                     
  6188                           ;dc_motor.c: 147:         setMotorPWM(mL);
  6189   001D74  C01E  F013         	movff	turnRight90@mL,setMotorPWM@m
  6190   001D78  C01F  F014         	movff	turnRight90@mL+1,setMotorPWM@m+1
  6191   001D7C  EC31  F00C         	call	_setMotorPWM	;wreg free
  6192   001D80                     
  6193                           ;dc_motor.c: 148:         setMotorPWM(mR);
  6194   001D80  C020  F013         	movff	turnRight90@mR,setMotorPWM@m
  6195   001D84  C021  F014         	movff	turnRight90@mR+1,setMotorPWM@m+1
  6196   001D88  EC31  F00C         	call	_setMotorPWM	;wreg free
  6197   001D8C                     l2475:
  6198                           
  6199                           ;dc_motor.c: 143:     while (mL->power <= 50 && mR->power <= 50 ) {
  6200   001D8C  C01E  FFD9         	movff	turnRight90@mL,fsr2l
  6201   001D90  C01F  FFDA         	movff	turnRight90@mL+1,fsr2h
  6202   001D94  0E33               	movlw	51
  6203   001D96  60DF               	cpfslt	indf2,c
  6204   001D98  EFD0  F00E         	goto	u1781
  6205   001D9C  EFD2  F00E         	goto	u1780
  6206   001DA0                     u1781:
  6207   001DA0  EFDE  F00E         	goto	l2479
  6208   001DA4                     u1780:
  6209   001DA4  C020  FFD9         	movff	turnRight90@mR,fsr2l
  6210   001DA8  C021  FFDA         	movff	turnRight90@mR+1,fsr2h
  6211   001DAC  0E32               	movlw	50
  6212   001DAE  64DF               	cpfsgt	indf2,c
  6213   001DB0  EFDC  F00E         	goto	u1791
  6214   001DB4  EFDE  F00E         	goto	u1790
  6215   001DB8                     u1791:
  6216   001DB8  EFA8  F00E         	goto	l2465
  6217   001DBC                     u1790:
  6218   001DBC                     l2479:
  6219                           
  6220                           ;dc_motor.c: 151:     _delay((unsigned long)((210)*(64000000/4000.0)));
  6221   001DBC  0E12               	movlw	18
  6222   001DBE  6E23               	movwf	(??_turnRight90+1)^0,c
  6223   001DC0  0E0C               	movlw	12
  6224   001DC2  6E22               	movwf	??_turnRight90^0,c
  6225   001DC4  0E95               	movlw	149
  6226   001DC6                     u3457:
  6227   001DC6  2EE8               	decfsz	wreg,f,c
  6228   001DC8  D7FE               	bra	u3457
  6229   001DCA  2E22               	decfsz	??_turnRight90^0,f,c
  6230   001DCC  D7FC               	bra	u3457
  6231   001DCE  2E23               	decfsz	(??_turnRight90+1)^0,f,c
  6232   001DD0  D7FA               	bra	u3457
  6233   001DD2  F000               	nop	
  6234   001DD4                     
  6235                           ;dc_motor.c: 153:     stop(mL, mR);
  6236   001DD4  C01E  F019         	movff	turnRight90@mL,stop@mL
  6237   001DD8  C01F  F01A         	movff	turnRight90@mL+1,stop@mL+1
  6238   001DDC  C020  F01B         	movff	turnRight90@mR,stop@mR
  6239   001DE0  C021  F01C         	movff	turnRight90@mR+1,stop@mR+1
  6240   001DE4  EC5A  F012         	call	_stop	;wreg free
  6241   001DE8  0012               	return		;funcret
  6242   001DEA                     __end_of_turnRight90:
  6243                           	callstack 0
  6244                           
  6245 ;; *************** function _turnRight135 *****************
  6246 ;; Defined at:
  6247 ;;		line 182 in file "dc_motor.c"
  6248 ;; Parameters:    Size  Location     Type
  6249 ;;  mL              2   29[COMRAM] PTR struct DC_motor
  6250 ;;		 -> returnstep@motorL(9), carryoutstep@motorL(9), 
  6251 ;;  mR              2   31[COMRAM] PTR struct DC_motor
  6252 ;;		 -> returnstep@motorR(9), carryoutstep@motorR(9), 
  6253 ;; Auto vars:     Size  Location     Type
  6254 ;;		None
  6255 ;; Return value:  Size  Location     Type
  6256 ;;                  1    wreg      void 
  6257 ;; Registers used:
  6258 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6259 ;; Tracked objects:
  6260 ;;		On entry : 0/0
  6261 ;;		On exit  : 0/0
  6262 ;;		Unchanged: 0/0
  6263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6264 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6266 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6267 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6268 ;;Total ram usage:        6 bytes
  6269 ;; Hardware stack levels used: 1
  6270 ;; Hardware stack levels required when called: 4
  6271 ;; This function calls:
  6272 ;;		_setMotorPWM
  6273 ;;		_stop
  6274 ;; This function is called by:
  6275 ;;		_carryoutstep
  6276 ;;		_returnstep
  6277 ;; This function uses a non-reentrant model
  6278 ;;
  6279                           
  6280                           	psect	text28
  6281   001DEA                     __ptext28:
  6282                           	callstack 0
  6283   001DEA                     _turnRight135:
  6284                           	callstack 24
  6285   001DEA                     
  6286                           ;dc_motor.c: 182: void turnRight135(DC_motor *mL, DC_motor *mR);dc_motor.c: 183: {;dc_mo
      +                          tor.c: 184:     stop(mL, mR);
  6287   001DEA  C01E  F019         	movff	turnRight135@mL,stop@mL
  6288   001DEE  C01F  F01A         	movff	turnRight135@mL+1,stop@mL+1
  6289   001DF2  C020  F01B         	movff	turnRight135@mR,stop@mR
  6290   001DF6  C021  F01C         	movff	turnRight135@mR+1,stop@mR+1
  6291   001DFA  EC5A  F012         	call	_stop	;wreg free
  6292   001DFE                     
  6293                           ;dc_motor.c: 186:     mL->direction = 1;
  6294   001DFE  EE20 F001          	lfsr	2,1
  6295   001E02  501E               	movf	turnRight135@mL^0,w,c
  6296   001E04  26D9               	addwf	fsr2l,f,c
  6297   001E06  501F               	movf	(turnRight135@mL+1)^0,w,c
  6298   001E08  22DA               	addwfc	fsr2h,f,c
  6299   001E0A  0E01               	movlw	1
  6300   001E0C  6EDF               	movwf	indf2,c
  6301   001E0E                     
  6302                           ;dc_motor.c: 187:     mR->direction = 0;
  6303   001E0E  EE20 F001          	lfsr	2,1
  6304   001E12  5020               	movf	turnRight135@mR^0,w,c
  6305   001E14  26D9               	addwf	fsr2l,f,c
  6306   001E16  5021               	movf	(turnRight135@mR+1)^0,w,c
  6307   001E18  22DA               	addwfc	fsr2h,f,c
  6308   001E1A  0E00               	movlw	0
  6309   001E1C  6EDF               	movwf	indf2,c
  6310   001E1E                     
  6311                           ;dc_motor.c: 189:     mL->power = 20;
  6312   001E1E  C01E  FFD9         	movff	turnRight135@mL,fsr2l
  6313   001E22  C01F  FFDA         	movff	turnRight135@mL+1,fsr2h
  6314   001E26  0E14               	movlw	20
  6315   001E28  6EDF               	movwf	indf2,c
  6316   001E2A                     
  6317                           ;dc_motor.c: 190:     mR->power = 20;
  6318   001E2A  C020  FFD9         	movff	turnRight135@mR,fsr2l
  6319   001E2E  C021  FFDA         	movff	turnRight135@mR+1,fsr2h
  6320   001E32  0E14               	movlw	20
  6321   001E34  6EDF               	movwf	indf2,c
  6322                           
  6323                           ;dc_motor.c: 192:     while (mL->power <= 50 || mR->power <= 50) {
  6324   001E36  EF3A  F00F         	goto	l2531
  6325   001E3A                     l2521:
  6326                           
  6327                           ;dc_motor.c: 193:         _delay((unsigned long)((10)*(64000000/4000.0)));
  6328   001E3A  0ED0               	movlw	208
  6329   001E3C  6E22               	movwf	??_turnRight135^0,c
  6330   001E3E  0ECA               	movlw	202
  6331   001E40                     u3467:
  6332   001E40  2EE8               	decfsz	wreg,f,c
  6333   001E42  D7FE               	bra	u3467
  6334   001E44  2E22               	decfsz	??_turnRight135^0,f,c
  6335   001E46  D7FC               	bra	u3467
  6336   001E48                     
  6337                           ;dc_motor.c: 194:         mL->power++;
  6338   001E48  C01E  FFD9         	movff	turnRight135@mL,fsr2l
  6339   001E4C  C01F  FFDA         	movff	turnRight135@mL+1,fsr2h
  6340   001E50  2ADF               	incf	indf2,f,c
  6341   001E52                     
  6342                           ;dc_motor.c: 195:         mR->power++;
  6343   001E52  C020  FFD9         	movff	turnRight135@mR,fsr2l
  6344   001E56  C021  FFDA         	movff	turnRight135@mR+1,fsr2h
  6345   001E5A  2ADF               	incf	indf2,f,c
  6346   001E5C                     
  6347                           ;dc_motor.c: 196:         setMotorPWM(mL);
  6348   001E5C  C01E  F013         	movff	turnRight135@mL,setMotorPWM@m
  6349   001E60  C01F  F014         	movff	turnRight135@mL+1,setMotorPWM@m+1
  6350   001E64  EC31  F00C         	call	_setMotorPWM	;wreg free
  6351   001E68                     
  6352                           ;dc_motor.c: 197:         setMotorPWM(mR);
  6353   001E68  C020  F013         	movff	turnRight135@mR,setMotorPWM@m
  6354   001E6C  C021  F014         	movff	turnRight135@mR+1,setMotorPWM@m+1
  6355   001E70  EC31  F00C         	call	_setMotorPWM	;wreg free
  6356   001E74                     l2531:
  6357                           
  6358                           ;dc_motor.c: 192:     while (mL->power <= 50 || mR->power <= 50) {
  6359   001E74  C01E  FFD9         	movff	turnRight135@mL,fsr2l
  6360   001E78  C01F  FFDA         	movff	turnRight135@mL+1,fsr2h
  6361   001E7C  0E32               	movlw	50
  6362   001E7E  64DF               	cpfsgt	indf2,c
  6363   001E80  EF44  F00F         	goto	u1821
  6364   001E84  EF46  F00F         	goto	u1820
  6365   001E88                     u1821:
  6366   001E88  EF1D  F00F         	goto	l2521
  6367   001E8C                     u1820:
  6368   001E8C  C020  FFD9         	movff	turnRight135@mR,fsr2l
  6369   001E90  C021  FFDA         	movff	turnRight135@mR+1,fsr2h
  6370   001E94  0E32               	movlw	50
  6371   001E96  64DF               	cpfsgt	indf2,c
  6372   001E98  EF50  F00F         	goto	u1831
  6373   001E9C  EF52  F00F         	goto	u1830
  6374   001EA0                     u1831:
  6375   001EA0  EF1D  F00F         	goto	l2521
  6376   001EA4                     u1830:
  6377   001EA4                     
  6378                           ;dc_motor.c: 200:     _delay((unsigned long)((250)*(64000000/4000.0)));
  6379   001EA4  0E15               	movlw	21
  6380   001EA6  6E23               	movwf	(??_turnRight135+1)^0,c
  6381   001EA8  0E4B               	movlw	75
  6382   001EAA  6E22               	movwf	??_turnRight135^0,c
  6383   001EAC  0EBE               	movlw	190
  6384   001EAE                     u3477:
  6385   001EAE  2EE8               	decfsz	wreg,f,c
  6386   001EB0  D7FE               	bra	u3477
  6387   001EB2  2E22               	decfsz	??_turnRight135^0,f,c
  6388   001EB4  D7FC               	bra	u3477
  6389   001EB6  2E23               	decfsz	(??_turnRight135+1)^0,f,c
  6390   001EB8  D7FA               	bra	u3477
  6391   001EBA  D000               	nop2	
  6392   001EBC                     
  6393                           ;dc_motor.c: 201:     stop(mL, mR);
  6394   001EBC  C01E  F019         	movff	turnRight135@mL,stop@mL
  6395   001EC0  C01F  F01A         	movff	turnRight135@mL+1,stop@mL+1
  6396   001EC4  C020  F01B         	movff	turnRight135@mR,stop@mR
  6397   001EC8  C021  F01C         	movff	turnRight135@mR+1,stop@mR+1
  6398   001ECC  EC5A  F012         	call	_stop	;wreg free
  6399   001ED0  0012               	return		;funcret
  6400   001ED2                     __end_of_turnRight135:
  6401                           	callstack 0
  6402                           
  6403 ;; *************** function _turnLeft90 *****************
  6404 ;; Defined at:
  6405 ;;		line 111 in file "dc_motor.c"
  6406 ;; Parameters:    Size  Location     Type
  6407 ;;  mL              2   29[COMRAM] PTR struct DC_motor
  6408 ;;		 -> returnstep@motorL(9), carryoutstep@motorL(9), 
  6409 ;;  mR              2   31[COMRAM] PTR struct DC_motor
  6410 ;;		 -> returnstep@motorR(9), carryoutstep@motorR(9), 
  6411 ;; Auto vars:     Size  Location     Type
  6412 ;;		None
  6413 ;; Return value:  Size  Location     Type
  6414 ;;                  1    wreg      void 
  6415 ;; Registers used:
  6416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6417 ;; Tracked objects:
  6418 ;;		On entry : 0/0
  6419 ;;		On exit  : 0/0
  6420 ;;		Unchanged: 0/0
  6421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6422 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6424 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6425 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6426 ;;Total ram usage:        6 bytes
  6427 ;; Hardware stack levels used: 1
  6428 ;; Hardware stack levels required when called: 4
  6429 ;; This function calls:
  6430 ;;		_setMotorPWM
  6431 ;;		_stop
  6432 ;; This function is called by:
  6433 ;;		_carryoutstep
  6434 ;;		_returnstep
  6435 ;; This function uses a non-reentrant model
  6436 ;;
  6437                           
  6438                           	psect	text29
  6439   001C12                     __ptext29:
  6440                           	callstack 0
  6441   001C12                     _turnLeft90:
  6442                           	callstack 24
  6443   001C12                     
  6444                           ;dc_motor.c: 111: void turnLeft90(DC_motor *mL, DC_motor *mR);dc_motor.c: 112: { stop(mL
      +                          , mR);
  6445   001C12  C01E  F019         	movff	turnLeft90@mL,stop@mL
  6446   001C16  C01F  F01A         	movff	turnLeft90@mL+1,stop@mL+1
  6447   001C1A  C020  F01B         	movff	turnLeft90@mR,stop@mR
  6448   001C1E  C021  F01C         	movff	turnLeft90@mR+1,stop@mR+1
  6449   001C22  EC5A  F012         	call	_stop	;wreg free
  6450   001C26                     
  6451                           ;dc_motor.c: 114:     mL->direction = 0;
  6452   001C26  EE20 F001          	lfsr	2,1
  6453   001C2A  501E               	movf	turnLeft90@mL^0,w,c
  6454   001C2C  26D9               	addwf	fsr2l,f,c
  6455   001C2E  501F               	movf	(turnLeft90@mL+1)^0,w,c
  6456   001C30  22DA               	addwfc	fsr2h,f,c
  6457   001C32  0E00               	movlw	0
  6458   001C34  6EDF               	movwf	indf2,c
  6459   001C36                     
  6460                           ;dc_motor.c: 115:     mR->direction = 1;
  6461   001C36  EE20 F001          	lfsr	2,1
  6462   001C3A  5020               	movf	turnLeft90@mR^0,w,c
  6463   001C3C  26D9               	addwf	fsr2l,f,c
  6464   001C3E  5021               	movf	(turnLeft90@mR+1)^0,w,c
  6465   001C40  22DA               	addwfc	fsr2h,f,c
  6466   001C42  0E01               	movlw	1
  6467   001C44  6EDF               	movwf	indf2,c
  6468   001C46                     
  6469                           ;dc_motor.c: 117:     mL->power = 20;
  6470   001C46  C01E  FFD9         	movff	turnLeft90@mL,fsr2l
  6471   001C4A  C01F  FFDA         	movff	turnLeft90@mL+1,fsr2h
  6472   001C4E  0E14               	movlw	20
  6473   001C50  6EDF               	movwf	indf2,c
  6474   001C52                     
  6475                           ;dc_motor.c: 118:     mR->power = 20;
  6476   001C52  C020  FFD9         	movff	turnLeft90@mR,fsr2l
  6477   001C56  C021  FFDA         	movff	turnLeft90@mR+1,fsr2h
  6478   001C5A  0E14               	movlw	20
  6479   001C5C  6EDF               	movwf	indf2,c
  6480                           
  6481                           ;dc_motor.c: 120:     while (mL->power != 50 || mR->power != 50 ) {
  6482   001C5E  EF4F  F00E         	goto	l2447
  6483   001C62                     l2437:
  6484                           
  6485                           ;dc_motor.c: 121:         _delay((unsigned long)((5)*(64000000/4000.0)));
  6486   001C62  0E68               	movlw	104
  6487   001C64  6E22               	movwf	??_turnLeft90^0,c
  6488   001C66  0EE4               	movlw	228
  6489   001C68                     u3487:
  6490   001C68  2EE8               	decfsz	wreg,f,c
  6491   001C6A  D7FE               	bra	u3487
  6492   001C6C  2E22               	decfsz	??_turnLeft90^0,f,c
  6493   001C6E  D7FC               	bra	u3487
  6494   001C70  D000               	nop2	
  6495   001C72                     
  6496                           ;dc_motor.c: 122:         mL->power++;
  6497   001C72  C01E  FFD9         	movff	turnLeft90@mL,fsr2l
  6498   001C76  C01F  FFDA         	movff	turnLeft90@mL+1,fsr2h
  6499   001C7A  2ADF               	incf	indf2,f,c
  6500   001C7C                     
  6501                           ;dc_motor.c: 123:         mR->power++;
  6502   001C7C  C020  FFD9         	movff	turnLeft90@mR,fsr2l
  6503   001C80  C021  FFDA         	movff	turnLeft90@mR+1,fsr2h
  6504   001C84  2ADF               	incf	indf2,f,c
  6505   001C86                     
  6506                           ;dc_motor.c: 124:         setMotorPWM(mL);
  6507   001C86  C01E  F013         	movff	turnLeft90@mL,setMotorPWM@m
  6508   001C8A  C01F  F014         	movff	turnLeft90@mL+1,setMotorPWM@m+1
  6509   001C8E  EC31  F00C         	call	_setMotorPWM	;wreg free
  6510   001C92                     
  6511                           ;dc_motor.c: 125:         setMotorPWM(mR);
  6512   001C92  C020  F013         	movff	turnLeft90@mR,setMotorPWM@m
  6513   001C96  C021  F014         	movff	turnLeft90@mR+1,setMotorPWM@m+1
  6514   001C9A  EC31  F00C         	call	_setMotorPWM	;wreg free
  6515   001C9E                     l2447:
  6516                           
  6517                           ;dc_motor.c: 120:     while (mL->power != 50 || mR->power != 50 ) {
  6518   001C9E  C01E  FFD9         	movff	turnLeft90@mL,fsr2l
  6519   001CA2  C01F  FFDA         	movff	turnLeft90@mL+1,fsr2h
  6520   001CA6  0E32               	movlw	50
  6521   001CA8  18DE               	xorwf	postinc2,w,c
  6522   001CAA  A4D8               	btfss	status,2,c
  6523   001CAC  EF5A  F00E         	goto	u1761
  6524   001CB0  EF5C  F00E         	goto	u1760
  6525   001CB4                     u1761:
  6526   001CB4  EF31  F00E         	goto	l2437
  6527   001CB8                     u1760:
  6528   001CB8  C020  FFD9         	movff	turnLeft90@mR,fsr2l
  6529   001CBC  C021  FFDA         	movff	turnLeft90@mR+1,fsr2h
  6530   001CC0  0E32               	movlw	50
  6531   001CC2  18DE               	xorwf	postinc2,w,c
  6532   001CC4  A4D8               	btfss	status,2,c
  6533   001CC6  EF67  F00E         	goto	u1771
  6534   001CCA  EF69  F00E         	goto	u1770
  6535   001CCE                     u1771:
  6536   001CCE  EF31  F00E         	goto	l2437
  6537   001CD2                     u1770:
  6538   001CD2                     
  6539                           ;dc_motor.c: 128:     _delay((unsigned long)((250)*(64000000/4000.0)));
  6540   001CD2  0E15               	movlw	21
  6541   001CD4  6E23               	movwf	(??_turnLeft90+1)^0,c
  6542   001CD6  0E4B               	movlw	75
  6543   001CD8  6E22               	movwf	??_turnLeft90^0,c
  6544   001CDA  0EBE               	movlw	190
  6545   001CDC                     u3497:
  6546   001CDC  2EE8               	decfsz	wreg,f,c
  6547   001CDE  D7FE               	bra	u3497
  6548   001CE0  2E22               	decfsz	??_turnLeft90^0,f,c
  6549   001CE2  D7FC               	bra	u3497
  6550   001CE4  2E23               	decfsz	(??_turnLeft90+1)^0,f,c
  6551   001CE6  D7FA               	bra	u3497
  6552   001CE8  D000               	nop2	
  6553   001CEA                     
  6554                           ;dc_motor.c: 130:     stop(mL, mR);
  6555   001CEA  C01E  F019         	movff	turnLeft90@mL,stop@mL
  6556   001CEE  C01F  F01A         	movff	turnLeft90@mL+1,stop@mL+1
  6557   001CF2  C020  F01B         	movff	turnLeft90@mR,stop@mR
  6558   001CF6  C021  F01C         	movff	turnLeft90@mR+1,stop@mR+1
  6559   001CFA  EC5A  F012         	call	_stop	;wreg free
  6560   001CFE  0012               	return		;funcret
  6561   001D00                     __end_of_turnLeft90:
  6562                           	callstack 0
  6563                           
  6564 ;; *************** function _turnLeft135 *****************
  6565 ;; Defined at:
  6566 ;;		line 157 in file "dc_motor.c"
  6567 ;; Parameters:    Size  Location     Type
  6568 ;;  mL              2   29[COMRAM] PTR struct DC_motor
  6569 ;;		 -> returnstep@motorL(9), carryoutstep@motorL(9), 
  6570 ;;  mR              2   31[COMRAM] PTR struct DC_motor
  6571 ;;		 -> returnstep@motorR(9), carryoutstep@motorR(9), 
  6572 ;; Auto vars:     Size  Location     Type
  6573 ;;		None
  6574 ;; Return value:  Size  Location     Type
  6575 ;;                  1    wreg      void 
  6576 ;; Registers used:
  6577 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6578 ;; Tracked objects:
  6579 ;;		On entry : 0/0
  6580 ;;		On exit  : 0/0
  6581 ;;		Unchanged: 0/0
  6582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6583 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6585 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6586 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6587 ;;Total ram usage:        6 bytes
  6588 ;; Hardware stack levels used: 1
  6589 ;; Hardware stack levels required when called: 4
  6590 ;; This function calls:
  6591 ;;		_setMotorPWM
  6592 ;;		_stop
  6593 ;; This function is called by:
  6594 ;;		_carryoutstep
  6595 ;;		_returnstep
  6596 ;; This function uses a non-reentrant model
  6597 ;;
  6598                           
  6599                           	psect	text30
  6600   001FBA                     __ptext30:
  6601                           	callstack 0
  6602   001FBA                     _turnLeft135:
  6603                           	callstack 24
  6604   001FBA                     
  6605                           ;dc_motor.c: 157: void turnLeft135(DC_motor *mL, DC_motor *mR);dc_motor.c: 158: {;dc_mot
      +                          or.c: 159:     stop(mL, mR);
  6606   001FBA  C01E  F019         	movff	turnLeft135@mL,stop@mL
  6607   001FBE  C01F  F01A         	movff	turnLeft135@mL+1,stop@mL+1
  6608   001FC2  C020  F01B         	movff	turnLeft135@mR,stop@mR
  6609   001FC6  C021  F01C         	movff	turnLeft135@mR+1,stop@mR+1
  6610   001FCA  EC5A  F012         	call	_stop	;wreg free
  6611   001FCE                     
  6612                           ;dc_motor.c: 162:     mL->direction = 0;
  6613   001FCE  EE20 F001          	lfsr	2,1
  6614   001FD2  501E               	movf	turnLeft135@mL^0,w,c
  6615   001FD4  26D9               	addwf	fsr2l,f,c
  6616   001FD6  501F               	movf	(turnLeft135@mL+1)^0,w,c
  6617   001FD8  22DA               	addwfc	fsr2h,f,c
  6618   001FDA  0E00               	movlw	0
  6619   001FDC  6EDF               	movwf	indf2,c
  6620   001FDE                     
  6621                           ;dc_motor.c: 163:     mR->direction = 1;
  6622   001FDE  EE20 F001          	lfsr	2,1
  6623   001FE2  5020               	movf	turnLeft135@mR^0,w,c
  6624   001FE4  26D9               	addwf	fsr2l,f,c
  6625   001FE6  5021               	movf	(turnLeft135@mR+1)^0,w,c
  6626   001FE8  22DA               	addwfc	fsr2h,f,c
  6627   001FEA  0E01               	movlw	1
  6628   001FEC  6EDF               	movwf	indf2,c
  6629   001FEE                     
  6630                           ;dc_motor.c: 165:     mL->power = 20;
  6631   001FEE  C01E  FFD9         	movff	turnLeft135@mL,fsr2l
  6632   001FF2  C01F  FFDA         	movff	turnLeft135@mL+1,fsr2h
  6633   001FF6  0E14               	movlw	20
  6634   001FF8  6EDF               	movwf	indf2,c
  6635   001FFA                     
  6636                           ;dc_motor.c: 166:     mR->power = 20;
  6637   001FFA  C020  FFD9         	movff	turnLeft135@mR,fsr2l
  6638   001FFE  C021  FFDA         	movff	turnLeft135@mR+1,fsr2h
  6639   002002  0E14               	movlw	20
  6640   002004  6EDF               	movwf	indf2,c
  6641                           
  6642                           ;dc_motor.c: 168:     while (mL->power <= 50 || mR->power <= 50 ) {
  6643   002006  EF22  F010         	goto	l2503
  6644   00200A                     l2493:
  6645                           
  6646                           ;dc_motor.c: 169:         _delay((unsigned long)((10)*(64000000/4000.0)));
  6647   00200A  0ED0               	movlw	208
  6648   00200C  6E22               	movwf	??_turnLeft135^0,c
  6649   00200E  0ECA               	movlw	202
  6650   002010                     u3507:
  6651   002010  2EE8               	decfsz	wreg,f,c
  6652   002012  D7FE               	bra	u3507
  6653   002014  2E22               	decfsz	??_turnLeft135^0,f,c
  6654   002016  D7FC               	bra	u3507
  6655   002018                     
  6656                           ;dc_motor.c: 170:         mL->power++;
  6657   002018  C01E  FFD9         	movff	turnLeft135@mL,fsr2l
  6658   00201C  C01F  FFDA         	movff	turnLeft135@mL+1,fsr2h
  6659   002020  2ADF               	incf	indf2,f,c
  6660   002022                     
  6661                           ;dc_motor.c: 171:         mR->power++;
  6662   002022  C020  FFD9         	movff	turnLeft135@mR,fsr2l
  6663   002026  C021  FFDA         	movff	turnLeft135@mR+1,fsr2h
  6664   00202A  2ADF               	incf	indf2,f,c
  6665   00202C                     
  6666                           ;dc_motor.c: 172:         setMotorPWM(mL);
  6667   00202C  C01E  F013         	movff	turnLeft135@mL,setMotorPWM@m
  6668   002030  C01F  F014         	movff	turnLeft135@mL+1,setMotorPWM@m+1
  6669   002034  EC31  F00C         	call	_setMotorPWM	;wreg free
  6670   002038                     
  6671                           ;dc_motor.c: 173:         setMotorPWM(mR);
  6672   002038  C020  F013         	movff	turnLeft135@mR,setMotorPWM@m
  6673   00203C  C021  F014         	movff	turnLeft135@mR+1,setMotorPWM@m+1
  6674   002040  EC31  F00C         	call	_setMotorPWM	;wreg free
  6675   002044                     l2503:
  6676                           
  6677                           ;dc_motor.c: 168:     while (mL->power <= 50 || mR->power <= 50 ) {
  6678   002044  C01E  FFD9         	movff	turnLeft135@mL,fsr2l
  6679   002048  C01F  FFDA         	movff	turnLeft135@mL+1,fsr2h
  6680   00204C  0E32               	movlw	50
  6681   00204E  64DF               	cpfsgt	indf2,c
  6682   002050  EF2C  F010         	goto	u1801
  6683   002054  EF2E  F010         	goto	u1800
  6684   002058                     u1801:
  6685   002058  EF05  F010         	goto	l2493
  6686   00205C                     u1800:
  6687   00205C  C020  FFD9         	movff	turnLeft135@mR,fsr2l
  6688   002060  C021  FFDA         	movff	turnLeft135@mR+1,fsr2h
  6689   002064  0E32               	movlw	50
  6690   002066  64DF               	cpfsgt	indf2,c
  6691   002068  EF38  F010         	goto	u1811
  6692   00206C  EF3A  F010         	goto	u1810
  6693   002070                     u1811:
  6694   002070  EF05  F010         	goto	l2493
  6695   002074                     u1810:
  6696   002074                     
  6697                           ;dc_motor.c: 176:     _delay((unsigned long)((290)*(64000000/4000.0)));
  6698   002074  0E18               	movlw	24
  6699   002076  6E23               	movwf	(??_turnLeft135+1)^0,c
  6700   002078  0E8A               	movlw	138
  6701   00207A  6E22               	movwf	??_turnLeft135^0,c
  6702   00207C  0EE8               	movlw	232
  6703   00207E                     u3517:
  6704   00207E  2EE8               	decfsz	wreg,f,c
  6705   002080  D7FE               	bra	u3517
  6706   002082  2E22               	decfsz	??_turnLeft135^0,f,c
  6707   002084  D7FC               	bra	u3517
  6708   002086  2E23               	decfsz	(??_turnLeft135+1)^0,f,c
  6709   002088  D7FA               	bra	u3517
  6710   00208A                     
  6711                           ;dc_motor.c: 177:     stop(mL, mR);
  6712   00208A  C01E  F019         	movff	turnLeft135@mL,stop@mL
  6713   00208E  C01F  F01A         	movff	turnLeft135@mL+1,stop@mL+1
  6714   002092  C020  F01B         	movff	turnLeft135@mR,stop@mR
  6715   002096  C021  F01C         	movff	turnLeft135@mR+1,stop@mR+1
  6716   00209A  EC5A  F012         	call	_stop	;wreg free
  6717   00209E  0012               	return		;funcret
  6718   0020A0                     __end_of_turnLeft135:
  6719                           	callstack 0
  6720                           
  6721 ;; *************** function _turn180 *****************
  6722 ;; Defined at:
  6723 ;;		line 204 in file "dc_motor.c"
  6724 ;; Parameters:    Size  Location     Type
  6725 ;;  mL              2   29[COMRAM] PTR struct DC_motor
  6726 ;;		 -> returnstep@motorL(9), carryoutstep@motorL(9), 
  6727 ;;  mR              2   31[COMRAM] PTR struct DC_motor
  6728 ;;		 -> returnstep@motorR(9), carryoutstep@motorR(9), 
  6729 ;; Auto vars:     Size  Location     Type
  6730 ;;		None
  6731 ;; Return value:  Size  Location     Type
  6732 ;;                  1    wreg      void 
  6733 ;; Registers used:
  6734 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6735 ;; Tracked objects:
  6736 ;;		On entry : 0/0
  6737 ;;		On exit  : 0/0
  6738 ;;		Unchanged: 0/0
  6739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6740 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6742 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6743 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6744 ;;Total ram usage:        6 bytes
  6745 ;; Hardware stack levels used: 1
  6746 ;; Hardware stack levels required when called: 4
  6747 ;; This function calls:
  6748 ;;		_setMotorPWM
  6749 ;;		_stop
  6750 ;; This function is called by:
  6751 ;;		_carryoutstep
  6752 ;;		_returnstep
  6753 ;; This function uses a non-reentrant model
  6754 ;;
  6755                           
  6756                           	psect	text31
  6757   001ED2                     __ptext31:
  6758                           	callstack 0
  6759   001ED2                     _turn180:
  6760                           	callstack 24
  6761   001ED2                     
  6762                           ;dc_motor.c: 204: void turn180(DC_motor *mL, DC_motor *mR);dc_motor.c: 205: {;dc_motor.c
      +                          : 206:     stop(mL, mR);
  6763   001ED2  C01E  F019         	movff	turn180@mL,stop@mL
  6764   001ED6  C01F  F01A         	movff	turn180@mL+1,stop@mL+1
  6765   001EDA  C020  F01B         	movff	turn180@mR,stop@mR
  6766   001EDE  C021  F01C         	movff	turn180@mR+1,stop@mR+1
  6767   001EE2  EC5A  F012         	call	_stop	;wreg free
  6768   001EE6                     
  6769                           ;dc_motor.c: 207:     mL->direction = 1;
  6770   001EE6  EE20 F001          	lfsr	2,1
  6771   001EEA  501E               	movf	turn180@mL^0,w,c
  6772   001EEC  26D9               	addwf	fsr2l,f,c
  6773   001EEE  501F               	movf	(turn180@mL+1)^0,w,c
  6774   001EF0  22DA               	addwfc	fsr2h,f,c
  6775   001EF2  0E01               	movlw	1
  6776   001EF4  6EDF               	movwf	indf2,c
  6777   001EF6                     
  6778                           ;dc_motor.c: 208:     mR->direction = 0;
  6779   001EF6  EE20 F001          	lfsr	2,1
  6780   001EFA  5020               	movf	turn180@mR^0,w,c
  6781   001EFC  26D9               	addwf	fsr2l,f,c
  6782   001EFE  5021               	movf	(turn180@mR+1)^0,w,c
  6783   001F00  22DA               	addwfc	fsr2h,f,c
  6784   001F02  0E00               	movlw	0
  6785   001F04  6EDF               	movwf	indf2,c
  6786   001F06                     
  6787                           ;dc_motor.c: 210:     mL->power = 20;
  6788   001F06  C01E  FFD9         	movff	turn180@mL,fsr2l
  6789   001F0A  C01F  FFDA         	movff	turn180@mL+1,fsr2h
  6790   001F0E  0E14               	movlw	20
  6791   001F10  6EDF               	movwf	indf2,c
  6792   001F12                     
  6793                           ;dc_motor.c: 211:     mR->power = 20;
  6794   001F12  C020  FFD9         	movff	turn180@mR,fsr2l
  6795   001F16  C021  FFDA         	movff	turn180@mR+1,fsr2h
  6796   001F1A  0E14               	movlw	20
  6797   001F1C  6EDF               	movwf	indf2,c
  6798                           
  6799                           ;dc_motor.c: 213:     while (mL->power <= 50 || mR->power <= 50 ) {
  6800   001F1E  EFAE  F00F         	goto	l2559
  6801   001F22                     l2549:
  6802                           
  6803                           ;dc_motor.c: 214:         _delay((unsigned long)((10)*(64000000/4000.0)));
  6804   001F22  0ED0               	movlw	208
  6805   001F24  6E22               	movwf	??_turn180^0,c
  6806   001F26  0ECA               	movlw	202
  6807   001F28                     u3527:
  6808   001F28  2EE8               	decfsz	wreg,f,c
  6809   001F2A  D7FE               	bra	u3527
  6810   001F2C  2E22               	decfsz	??_turn180^0,f,c
  6811   001F2E  D7FC               	bra	u3527
  6812   001F30                     
  6813                           ;dc_motor.c: 215:         mL->power++;
  6814   001F30  C01E  FFD9         	movff	turn180@mL,fsr2l
  6815   001F34  C01F  FFDA         	movff	turn180@mL+1,fsr2h
  6816   001F38  2ADF               	incf	indf2,f,c
  6817   001F3A                     
  6818                           ;dc_motor.c: 216:         mR->power++;
  6819   001F3A  C020  FFD9         	movff	turn180@mR,fsr2l
  6820   001F3E  C021  FFDA         	movff	turn180@mR+1,fsr2h
  6821   001F42  2ADF               	incf	indf2,f,c
  6822   001F44                     
  6823                           ;dc_motor.c: 217:         setMotorPWM(mL);
  6824   001F44  C01E  F013         	movff	turn180@mL,setMotorPWM@m
  6825   001F48  C01F  F014         	movff	turn180@mL+1,setMotorPWM@m+1
  6826   001F4C  EC31  F00C         	call	_setMotorPWM	;wreg free
  6827   001F50                     
  6828                           ;dc_motor.c: 218:         setMotorPWM(mR);
  6829   001F50  C020  F013         	movff	turn180@mR,setMotorPWM@m
  6830   001F54  C021  F014         	movff	turn180@mR+1,setMotorPWM@m+1
  6831   001F58  EC31  F00C         	call	_setMotorPWM	;wreg free
  6832   001F5C                     l2559:
  6833                           
  6834                           ;dc_motor.c: 213:     while (mL->power <= 50 || mR->power <= 50 ) {
  6835   001F5C  C01E  FFD9         	movff	turn180@mL,fsr2l
  6836   001F60  C01F  FFDA         	movff	turn180@mL+1,fsr2h
  6837   001F64  0E32               	movlw	50
  6838   001F66  64DF               	cpfsgt	indf2,c
  6839   001F68  EFB8  F00F         	goto	u1841
  6840   001F6C  EFBA  F00F         	goto	u1840
  6841   001F70                     u1841:
  6842   001F70  EF91  F00F         	goto	l2549
  6843   001F74                     u1840:
  6844   001F74  C020  FFD9         	movff	turn180@mR,fsr2l
  6845   001F78  C021  FFDA         	movff	turn180@mR+1,fsr2h
  6846   001F7C  0E32               	movlw	50
  6847   001F7E  64DF               	cpfsgt	indf2,c
  6848   001F80  EFC4  F00F         	goto	u1851
  6849   001F84  EFC6  F00F         	goto	u1850
  6850   001F88                     u1851:
  6851   001F88  EF91  F00F         	goto	l2549
  6852   001F8C                     u1850:
  6853   001F8C                     
  6854                           ;dc_motor.c: 220:     _delay((unsigned long)((420)*(64000000/4000.0)));
  6855   001F8C  0E23               	movlw	35
  6856   001F8E  6E23               	movwf	(??_turn180+1)^0,c
  6857   001F90  0E18               	movlw	24
  6858   001F92  6E22               	movwf	??_turn180^0,c
  6859   001F94  0E2C               	movlw	44
  6860   001F96                     u3537:
  6861   001F96  2EE8               	decfsz	wreg,f,c
  6862   001F98  D7FE               	bra	u3537
  6863   001F9A  2E22               	decfsz	??_turn180^0,f,c
  6864   001F9C  D7FC               	bra	u3537
  6865   001F9E  2E23               	decfsz	(??_turn180+1)^0,f,c
  6866   001FA0  D7FA               	bra	u3537
  6867   001FA2  D000               	nop2	
  6868   001FA4                     
  6869                           ;dc_motor.c: 221:     stop(mL, mR);
  6870   001FA4  C01E  F019         	movff	turn180@mL,stop@mL
  6871   001FA8  C01F  F01A         	movff	turn180@mL+1,stop@mL+1
  6872   001FAC  C020  F01B         	movff	turn180@mR,stop@mR
  6873   001FB0  C021  F01C         	movff	turn180@mR+1,stop@mR+1
  6874   001FB4  EC5A  F012         	call	_stop	;wreg free
  6875   001FB8  0012               	return		;funcret
  6876   001FBA                     __end_of_turn180:
  6877                           	callstack 0
  6878                           
  6879 ;; *************** function _stop *****************
  6880 ;; Defined at:
  6881 ;;		line 97 in file "dc_motor.c"
  6882 ;; Parameters:    Size  Location     Type
  6883 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  6884 ;;		 -> main@motorL(9), returnstep@motorL(9), returnhome@motorL(9), carryoutstep@motorL(9), 
  6885 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  6886 ;;		 -> main@motorR(9), returnstep@motorR(9), returnhome@motorR(9), carryoutstep@motorR(9), 
  6887 ;; Auto vars:     Size  Location     Type
  6888 ;;		None
  6889 ;; Return value:  Size  Location     Type
  6890 ;;                  1    wreg      void 
  6891 ;; Registers used:
  6892 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6893 ;; Tracked objects:
  6894 ;;		On entry : 0/0
  6895 ;;		On exit  : 0/0
  6896 ;;		Unchanged: 0/0
  6897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6898 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6900 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6901 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6902 ;;Total ram usage:        5 bytes
  6903 ;; Hardware stack levels used: 1
  6904 ;; Hardware stack levels required when called: 3
  6905 ;; This function calls:
  6906 ;;		_setMotorPWM
  6907 ;; This function is called by:
  6908 ;;		_turnLeft90
  6909 ;;		_turnRight90
  6910 ;;		_turnLeft135
  6911 ;;		_turnRight135
  6912 ;;		_turn180
  6913 ;;		_square
  6914 ;;		_smallmovement
  6915 ;;		_returnhome
  6916 ;; This function uses a non-reentrant model
  6917 ;;
  6918                           
  6919                           	psect	text32
  6920   0024B4                     __ptext32:
  6921                           	callstack 0
  6922   0024B4                     _stop:
  6923                           	callstack 26
  6924   0024B4                     
  6925                           ;dc_motor.c: 97: void stop(DC_motor *mL, DC_motor *mR);dc_motor.c: 98: {;dc_motor.c: 100
      +                          :     while (mL->power > 0 && mR->power > 0) {
  6926   0024B4  EF7A  F012         	goto	l2419
  6927   0024B8                     l2411:
  6928                           
  6929                           ;dc_motor.c: 101:     mL->power--;
  6930   0024B8  C019  FFD9         	movff	stop@mL,fsr2l
  6931   0024BC  C01A  FFDA         	movff	stop@mL+1,fsr2h
  6932   0024C0  06DF               	decf	indf2,f,c
  6933                           
  6934                           ;dc_motor.c: 102:     mR->power--;
  6935   0024C2  C01B  FFD9         	movff	stop@mR,fsr2l
  6936   0024C6  C01C  FFDA         	movff	stop@mR+1,fsr2h
  6937   0024CA  06DF               	decf	indf2,f,c
  6938   0024CC                     
  6939                           ;dc_motor.c: 103:     _delay((unsigned long)((1)*(64000000/4000.0)));
  6940   0024CC  0E15               	movlw	21
  6941   0024CE  6E1D               	movwf	??_stop^0,c
  6942   0024D0  0EC6               	movlw	198
  6943   0024D2                     u3547:
  6944   0024D2  2EE8               	decfsz	wreg,f,c
  6945   0024D4  D7FE               	bra	u3547
  6946   0024D6  2E1D               	decfsz	??_stop^0,f,c
  6947   0024D8  D7FC               	bra	u3547
  6948   0024DA  D000               	nop2	
  6949   0024DC                     
  6950                           ;dc_motor.c: 104:     setMotorPWM(mL);
  6951   0024DC  C019  F013         	movff	stop@mL,setMotorPWM@m
  6952   0024E0  C01A  F014         	movff	stop@mL+1,setMotorPWM@m+1
  6953   0024E4  EC31  F00C         	call	_setMotorPWM	;wreg free
  6954   0024E8                     
  6955                           ;dc_motor.c: 105:     setMotorPWM(mR);
  6956   0024E8  C01B  F013         	movff	stop@mR,setMotorPWM@m
  6957   0024EC  C01C  F014         	movff	stop@mR+1,setMotorPWM@m+1
  6958   0024F0  EC31  F00C         	call	_setMotorPWM	;wreg free
  6959   0024F4                     l2419:
  6960                           
  6961                           ;dc_motor.c: 100:     while (mL->power > 0 && mR->power > 0) {
  6962   0024F4  C019  FFD9         	movff	stop@mL,fsr2l
  6963   0024F8  C01A  FFDA         	movff	stop@mL+1,fsr2h
  6964   0024FC  50DF               	movf	indf2,w,c
  6965   0024FE  B4D8               	btfsc	status,2,c
  6966   002500  EF84  F012         	goto	u1721
  6967   002504  EF86  F012         	goto	u1720
  6968   002508                     u1721:
  6969   002508  EF92  F012         	goto	l146
  6970   00250C                     u1720:
  6971   00250C  C01B  FFD9         	movff	stop@mR,fsr2l
  6972   002510  C01C  FFDA         	movff	stop@mR+1,fsr2h
  6973   002514  50DF               	movf	indf2,w,c
  6974   002516  A4D8               	btfss	status,2,c
  6975   002518  EF90  F012         	goto	u1731
  6976   00251C  EF92  F012         	goto	u1730
  6977   002520                     u1731:
  6978   002520  EF5C  F012         	goto	l2411
  6979   002524                     u1730:
  6980   002524                     l146:
  6981   002524  0012               	return		;funcret
  6982   002526                     __end_of_stop:
  6983                           	callstack 0
  6984                           
  6985 ;; *************** function _fullSpeedAhead *****************
  6986 ;; Defined at:
  6987 ;;		line 226 in file "dc_motor.c"
  6988 ;; Parameters:    Size  Location     Type
  6989 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  6990 ;;		 -> main@motorL(9), returnhome@motorL(9), 
  6991 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  6992 ;;		 -> main@motorR(9), returnhome@motorR(9), 
  6993 ;;  dir             1   28[COMRAM] unsigned char 
  6994 ;; Auto vars:     Size  Location     Type
  6995 ;;		None
  6996 ;; Return value:  Size  Location     Type
  6997 ;;                  1    wreg      void 
  6998 ;; Registers used:
  6999 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7000 ;; Tracked objects:
  7001 ;;		On entry : 0/0
  7002 ;;		On exit  : 0/0
  7003 ;;		Unchanged: 0/0
  7004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7005 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7007 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7008 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7009 ;;Total ram usage:        6 bytes
  7010 ;; Hardware stack levels used: 1
  7011 ;; Hardware stack levels required when called: 3
  7012 ;; This function calls:
  7013 ;;		_setMotorPWM
  7014 ;; This function is called by:
  7015 ;;		_returnhome
  7016 ;;		_main
  7017 ;; This function uses a non-reentrant model
  7018 ;;
  7019                           
  7020                           	psect	text33
  7021   0020A0                     __ptext33:
  7022                           	callstack 0
  7023   0020A0                     _fullSpeedAhead:
  7024                           	callstack 26
  7025   0020A0                     
  7026                           ;dc_motor.c: 226: void fullSpeedAhead(DC_motor *mL, DC_motor *mR, char dir);dc_motor.c: 
      +                          227: {;dc_motor.c: 228:     mL->brakemode= 1;
  7027   0020A0  EE20 F002          	lfsr	2,2
  7028   0020A4  5019               	movf	fullSpeedAhead@mL^0,w,c
  7029   0020A6  26D9               	addwf	fsr2l,f,c
  7030   0020A8  501A               	movf	(fullSpeedAhead@mL+1)^0,w,c
  7031   0020AA  22DA               	addwfc	fsr2h,f,c
  7032   0020AC  0E01               	movlw	1
  7033   0020AE  6EDF               	movwf	indf2,c
  7034                           
  7035                           ;dc_motor.c: 229:     mR->brakemode= 1;
  7036   0020B0  EE20 F002          	lfsr	2,2
  7037   0020B4  501B               	movf	fullSpeedAhead@mR^0,w,c
  7038   0020B6  26D9               	addwf	fsr2l,f,c
  7039   0020B8  501C               	movf	(fullSpeedAhead@mR+1)^0,w,c
  7040   0020BA  22DA               	addwfc	fsr2h,f,c
  7041   0020BC  0E01               	movlw	1
  7042   0020BE  6EDF               	movwf	indf2,c
  7043                           
  7044                           ;dc_motor.c: 230:     mL->direction = dir;
  7045   0020C0  EE20 F001          	lfsr	2,1
  7046   0020C4  5019               	movf	fullSpeedAhead@mL^0,w,c
  7047   0020C6  26D9               	addwf	fsr2l,f,c
  7048   0020C8  501A               	movf	(fullSpeedAhead@mL+1)^0,w,c
  7049   0020CA  22DA               	addwfc	fsr2h,f,c
  7050   0020CC  C01D  FFDF         	movff	fullSpeedAhead@dir,indf2
  7051                           
  7052                           ;dc_motor.c: 231:     mR->direction = dir;
  7053   0020D0  EE20 F001          	lfsr	2,1
  7054   0020D4  501B               	movf	fullSpeedAhead@mR^0,w,c
  7055   0020D6  26D9               	addwf	fsr2l,f,c
  7056   0020D8  501C               	movf	(fullSpeedAhead@mR+1)^0,w,c
  7057   0020DA  22DA               	addwfc	fsr2h,f,c
  7058   0020DC  C01D  FFDF         	movff	fullSpeedAhead@dir,indf2
  7059                           
  7060                           ;dc_motor.c: 235:     while (mL->power <= 20 && mR->power <= 20 ) {
  7061   0020E0  EF8F  F010         	goto	l2591
  7062   0020E4                     l2581:
  7063                           
  7064                           ;dc_motor.c: 236:         _delay((unsigned long)((10)*(64000000/4000.0)));
  7065   0020E4  0ED0               	movlw	208
  7066   0020E6  6E1E               	movwf	??_fullSpeedAhead^0,c
  7067   0020E8  0ECA               	movlw	202
  7068   0020EA                     u3557:
  7069   0020EA  2EE8               	decfsz	wreg,f,c
  7070   0020EC  D7FE               	bra	u3557
  7071   0020EE  2E1E               	decfsz	??_fullSpeedAhead^0,f,c
  7072   0020F0  D7FC               	bra	u3557
  7073   0020F2                     
  7074                           ;dc_motor.c: 237:         mL->power++;
  7075   0020F2  C019  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  7076   0020F6  C01A  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  7077   0020FA  2ADF               	incf	indf2,f,c
  7078   0020FC                     
  7079                           ;dc_motor.c: 238:         mR->power++;
  7080   0020FC  C01B  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  7081   002100  C01C  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  7082   002104  2ADF               	incf	indf2,f,c
  7083   002106                     
  7084                           ;dc_motor.c: 239:         setMotorPWM(mL);
  7085   002106  C019  F013         	movff	fullSpeedAhead@mL,setMotorPWM@m
  7086   00210A  C01A  F014         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  7087   00210E  EC31  F00C         	call	_setMotorPWM	;wreg free
  7088   002112                     
  7089                           ;dc_motor.c: 240:         setMotorPWM(mR);
  7090   002112  C01B  F013         	movff	fullSpeedAhead@mR,setMotorPWM@m
  7091   002116  C01C  F014         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  7092   00211A  EC31  F00C         	call	_setMotorPWM	;wreg free
  7093   00211E                     l2591:
  7094                           
  7095                           ;dc_motor.c: 235:     while (mL->power <= 20 && mR->power <= 20 ) {
  7096   00211E  C019  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  7097   002122  C01A  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  7098   002126  0E15               	movlw	21
  7099   002128  60DF               	cpfslt	indf2,c
  7100   00212A  EF99  F010         	goto	u1861
  7101   00212E  EF9B  F010         	goto	u1860
  7102   002132                     u1861:
  7103   002132  EFA7  F010         	goto	l2595
  7104   002136                     u1860:
  7105   002136  C01B  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  7106   00213A  C01C  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  7107   00213E  0E14               	movlw	20
  7108   002140  64DF               	cpfsgt	indf2,c
  7109   002142  EFA5  F010         	goto	u1871
  7110   002146  EFA7  F010         	goto	u1870
  7111   00214A                     u1871:
  7112   00214A  EF72  F010         	goto	l2581
  7113   00214E                     u1870:
  7114   00214E                     l2595:
  7115                           
  7116                           ;dc_motor.c: 245:     if (interruptenable == 0) {
  7117   00214E  5054               	movf	_interruptenable^0,w,c
  7118   002150  A4D8               	btfss	status,2,c
  7119   002152  EFAD  F010         	goto	u1881
  7120   002156  EFAF  F010         	goto	u1880
  7121   00215A                     u1881:
  7122   00215A  EFB5  F010         	goto	l187
  7123   00215E                     u1880:
  7124   00215E                     
  7125                           ;dc_motor.c: 246:         timercount = 0;
  7126   00215E  0E00               	movlw	0
  7127   002160  6E53               	movwf	(_timercount+1)^0,c
  7128   002162  0E00               	movlw	0
  7129   002164  6E52               	movwf	_timercount^0,c
  7130                           
  7131                           ;dc_motor.c: 247:         interruptenable = 1;
  7132   002166  0E01               	movlw	1
  7133   002168  6E54               	movwf	_interruptenable^0,c
  7134   00216A                     l187:
  7135   00216A  0012               	return		;funcret
  7136   00216C                     __end_of_fullSpeedAhead:
  7137                           	callstack 0
  7138                           
  7139 ;; *************** function _setMotorPWM *****************
  7140 ;; Defined at:
  7141 ;;		line 74 in file "dc_motor.c"
  7142 ;; Parameters:    Size  Location     Type
  7143 ;;  m               2   18[COMRAM] PTR struct DC_motor
  7144 ;;		 -> main@motorL(9), main@motorR(9), returnstep@motorR(9), returnstep@motorL(9), 
  7145 ;;		 -> returnhome@motorR(9), returnhome@motorL(9), carryoutstep@motorR(9), carryoutstep@motorL(9), 
  7146 ;; Auto vars:     Size  Location     Type
  7147 ;;  negDuty         1   23[COMRAM] unsigned char 
  7148 ;;  posDuty         1   22[COMRAM] unsigned char 
  7149 ;; Return value:  Size  Location     Type
  7150 ;;                  1    wreg      void 
  7151 ;; Registers used:
  7152 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7153 ;; Tracked objects:
  7154 ;;		On entry : 0/0
  7155 ;;		On exit  : 0/0
  7156 ;;		Unchanged: 0/0
  7157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7158 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7159 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7160 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7161 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7162 ;;Total ram usage:        6 bytes
  7163 ;; Hardware stack levels used: 1
  7164 ;; Hardware stack levels required when called: 2
  7165 ;; This function calls:
  7166 ;;		___lwdiv
  7167 ;;		___wmul
  7168 ;; This function is called by:
  7169 ;;		_stop
  7170 ;;		_turnLeft90
  7171 ;;		_turnRight90
  7172 ;;		_turnLeft135
  7173 ;;		_turnRight135
  7174 ;;		_turn180
  7175 ;;		_fullSpeedAhead
  7176 ;;		_square
  7177 ;;		_smallmovement
  7178 ;; This function uses a non-reentrant model
  7179 ;;
  7180                           
  7181                           	psect	text34
  7182   001862                     __ptext34:
  7183                           	callstack 0
  7184   001862                     _setMotorPWM:
  7185                           	callstack 26
  7186   001862                     
  7187                           ;dc_motor.c: 74: void setMotorPWM(DC_motor *m);dc_motor.c: 75: {;dc_motor.c: 76:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 78:     if(m->brakemode) {
  7188   001862  EE20 F002          	lfsr	2,2
  7189   001866  5013               	movf	setMotorPWM@m^0,w,c
  7190   001868  26D9               	addwf	fsr2l,f,c
  7191   00186A  5014               	movf	(setMotorPWM@m+1)^0,w,c
  7192   00186C  22DA               	addwfc	fsr2h,f,c
  7193   00186E  50DF               	movf	indf2,w,c
  7194   001870  B4D8               	btfsc	status,2,c
  7195   001872  EF3D  F00C         	goto	u1701
  7196   001876  EF3F  F00C         	goto	u1700
  7197   00187A                     u1701:
  7198   00187A  EF73  F00C         	goto	l2399
  7199   00187E                     u1700:
  7200   00187E                     
  7201                           ;dc_motor.c: 79:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  7202   00187E  C013  FFD9         	movff	setMotorPWM@m,fsr2l
  7203   001882  C014  FFDA         	movff	setMotorPWM@m+1,fsr2h
  7204   001886  50DF               	movf	indf2,w,c
  7205   001888  6E15               	movwf	??_setMotorPWM^0,c
  7206   00188A  5015               	movf	??_setMotorPWM^0,w,c
  7207   00188C  6E01               	movwf	___wmul@multiplier^0,c
  7208   00188E  6A02               	clrf	(___wmul@multiplier+1)^0,c
  7209   001890  EE20 F003          	lfsr	2,3
  7210   001894  5013               	movf	setMotorPWM@m^0,w,c
  7211   001896  26D9               	addwf	fsr2l,f,c
  7212   001898  5014               	movf	(setMotorPWM@m+1)^0,w,c
  7213   00189A  22DA               	addwfc	fsr2h,f,c
  7214   00189C  CFDE F003          	movff	postinc2,___wmul@multiplicand
  7215   0018A0  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  7216   0018A4  ECB6  F013         	call	___wmul	;wreg free
  7217   0018A8  C001  F00C         	movff	?___wmul,___lwdiv@dividend
  7218   0018AC  C002  F00D         	movff	?___wmul+1,___lwdiv@dividend+1
  7219   0018B0  0E00               	movlw	0
  7220   0018B2  6E0F               	movwf	(___lwdiv@divisor+1)^0,c
  7221   0018B4  0E64               	movlw	100
  7222   0018B6  6E0E               	movwf	___lwdiv@divisor^0,c
  7223   0018B8  EC20  F012         	call	___lwdiv	;wreg free
  7224   0018BC  EE20 F003          	lfsr	2,3
  7225   0018C0  5013               	movf	setMotorPWM@m^0,w,c
  7226   0018C2  26D9               	addwf	fsr2l,f,c
  7227   0018C4  5014               	movf	(setMotorPWM@m+1)^0,w,c
  7228   0018C6  22DA               	addwfc	fsr2h,f,c
  7229   0018C8  50DF               	movf	indf2,w,c
  7230   0018CA  6E16               	movwf	(??_setMotorPWM+1)^0,c
  7231   0018CC  500C               	movf	?___lwdiv^0,w,c
  7232   0018CE  5C16               	subwf	(??_setMotorPWM+1)^0,w,c
  7233   0018D0  6E17               	movwf	setMotorPWM@posDuty^0,c
  7234   0018D2                     
  7235                           ;dc_motor.c: 80:         negDuty=m->PWMperiod;
  7236   0018D2  EE20 F003          	lfsr	2,3
  7237   0018D6  5013               	movf	setMotorPWM@m^0,w,c
  7238   0018D8  26D9               	addwf	fsr2l,f,c
  7239   0018DA  5014               	movf	(setMotorPWM@m+1)^0,w,c
  7240   0018DC  22DA               	addwfc	fsr2h,f,c
  7241   0018DE  50DF               	movf	indf2,w,c
  7242   0018E0  6E18               	movwf	setMotorPWM@negDuty^0,c
  7243                           
  7244                           ;dc_motor.c: 81:     }
  7245   0018E2  EF96  F00C         	goto	l2403
  7246   0018E6                     l2399:
  7247                           
  7248                           ;dc_motor.c: 83:         posDuty=0;
  7249   0018E6  0E00               	movlw	0
  7250   0018E8  6E17               	movwf	setMotorPWM@posDuty^0,c
  7251   0018EA                     
  7252                           ;dc_motor.c: 84:         negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  7253   0018EA  C013  FFD9         	movff	setMotorPWM@m,fsr2l
  7254   0018EE  C014  FFDA         	movff	setMotorPWM@m+1,fsr2h
  7255   0018F2  50DF               	movf	indf2,w,c
  7256   0018F4  6E15               	movwf	??_setMotorPWM^0,c
  7257   0018F6  5015               	movf	??_setMotorPWM^0,w,c
  7258   0018F8  6E01               	movwf	___wmul@multiplier^0,c
  7259   0018FA  6A02               	clrf	(___wmul@multiplier+1)^0,c
  7260   0018FC  EE20 F003          	lfsr	2,3
  7261   001900  5013               	movf	setMotorPWM@m^0,w,c
  7262   001902  26D9               	addwf	fsr2l,f,c
  7263   001904  5014               	movf	(setMotorPWM@m+1)^0,w,c
  7264   001906  22DA               	addwfc	fsr2h,f,c
  7265   001908  CFDE F003          	movff	postinc2,___wmul@multiplicand
  7266   00190C  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  7267   001910  ECB6  F013         	call	___wmul	;wreg free
  7268   001914  C001  F00C         	movff	?___wmul,___lwdiv@dividend
  7269   001918  C002  F00D         	movff	?___wmul+1,___lwdiv@dividend+1
  7270   00191C  0E00               	movlw	0
  7271   00191E  6E0F               	movwf	(___lwdiv@divisor+1)^0,c
  7272   001920  0E64               	movlw	100
  7273   001922  6E0E               	movwf	___lwdiv@divisor^0,c
  7274   001924  EC20  F012         	call	___lwdiv	;wreg free
  7275   001928  500C               	movf	?___lwdiv^0,w,c
  7276   00192A  6E18               	movwf	setMotorPWM@negDuty^0,c
  7277   00192C                     l2403:
  7278                           
  7279                           ;dc_motor.c: 87:     if (m->direction) {
  7280   00192C  EE20 F001          	lfsr	2,1
  7281   001930  5013               	movf	setMotorPWM@m^0,w,c
  7282   001932  26D9               	addwf	fsr2l,f,c
  7283   001934  5014               	movf	(setMotorPWM@m+1)^0,w,c
  7284   001936  22DA               	addwfc	fsr2h,f,c
  7285   001938  50DF               	movf	indf2,w,c
  7286   00193A  B4D8               	btfsc	status,2,c
  7287   00193C  EFA2  F00C         	goto	u1711
  7288   001940  EFA4  F00C         	goto	u1710
  7289   001944                     u1711:
  7290   001944  EFC6  F00C         	goto	l2407
  7291   001948                     u1710:
  7292   001948                     
  7293                           ;dc_motor.c: 88:         *(m->posDutyHighByte)=posDuty;
  7294   001948  EE20 F005          	lfsr	2,5
  7295   00194C  5013               	movf	setMotorPWM@m^0,w,c
  7296   00194E  26D9               	addwf	fsr2l,f,c
  7297   001950  5014               	movf	(setMotorPWM@m+1)^0,w,c
  7298   001952  22DA               	addwfc	fsr2h,f,c
  7299   001954  CFDE F015          	movff	postinc2,??_setMotorPWM
  7300   001958  CFDD F016          	movff	postdec2,??_setMotorPWM+1
  7301   00195C  C015  FFD9         	movff	??_setMotorPWM,fsr2l
  7302   001960  C016  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7303   001964  C017  FFDF         	movff	setMotorPWM@posDuty,indf2
  7304                           
  7305                           ;dc_motor.c: 89:         *(m->negDutyHighByte)=negDuty;
  7306   001968  EE20 F007          	lfsr	2,7
  7307   00196C  5013               	movf	setMotorPWM@m^0,w,c
  7308   00196E  26D9               	addwf	fsr2l,f,c
  7309   001970  5014               	movf	(setMotorPWM@m+1)^0,w,c
  7310   001972  22DA               	addwfc	fsr2h,f,c
  7311   001974  CFDE F015          	movff	postinc2,??_setMotorPWM
  7312   001978  CFDD F016          	movff	postdec2,??_setMotorPWM+1
  7313   00197C  C015  FFD9         	movff	??_setMotorPWM,fsr2l
  7314   001980  C016  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7315   001984  C018  FFDF         	movff	setMotorPWM@negDuty,indf2
  7316                           
  7317                           ;dc_motor.c: 90:     } else {
  7318   001988  EFE6  F00C         	goto	l138
  7319   00198C                     l2407:
  7320                           
  7321                           ;dc_motor.c: 91:         *(m->posDutyHighByte)=negDuty;
  7322   00198C  EE20 F005          	lfsr	2,5
  7323   001990  5013               	movf	setMotorPWM@m^0,w,c
  7324   001992  26D9               	addwf	fsr2l,f,c
  7325   001994  5014               	movf	(setMotorPWM@m+1)^0,w,c
  7326   001996  22DA               	addwfc	fsr2h,f,c
  7327   001998  CFDE F015          	movff	postinc2,??_setMotorPWM
  7328   00199C  CFDD F016          	movff	postdec2,??_setMotorPWM+1
  7329   0019A0  C015  FFD9         	movff	??_setMotorPWM,fsr2l
  7330   0019A4  C016  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7331   0019A8  C018  FFDF         	movff	setMotorPWM@negDuty,indf2
  7332                           
  7333                           ;dc_motor.c: 92:         *(m->negDutyHighByte)=posDuty;
  7334   0019AC  EE20 F007          	lfsr	2,7
  7335   0019B0  5013               	movf	setMotorPWM@m^0,w,c
  7336   0019B2  26D9               	addwf	fsr2l,f,c
  7337   0019B4  5014               	movf	(setMotorPWM@m+1)^0,w,c
  7338   0019B6  22DA               	addwfc	fsr2h,f,c
  7339   0019B8  CFDE F015          	movff	postinc2,??_setMotorPWM
  7340   0019BC  CFDD F016          	movff	postdec2,??_setMotorPWM+1
  7341   0019C0  C015  FFD9         	movff	??_setMotorPWM,fsr2l
  7342   0019C4  C016  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7343   0019C8  C017  FFDF         	movff	setMotorPWM@posDuty,indf2
  7344   0019CC                     l138:
  7345   0019CC  0012               	return		;funcret
  7346   0019CE                     __end_of_setMotorPWM:
  7347                           	callstack 0
  7348                           
  7349 ;; *************** function ___wmul *****************
  7350 ;; Defined at:
  7351 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  7352 ;; Parameters:    Size  Location     Type
  7353 ;;  multiplier      2    0[COMRAM] unsigned int 
  7354 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7355 ;; Auto vars:     Size  Location     Type
  7356 ;;  product         2    4[COMRAM] unsigned int 
  7357 ;; Return value:  Size  Location     Type
  7358 ;;                  2    0[COMRAM] unsigned int 
  7359 ;; Registers used:
  7360 ;;		wreg, status,2, status,0, prodl, prodh
  7361 ;; Tracked objects:
  7362 ;;		On entry : 0/0
  7363 ;;		On exit  : 0/0
  7364 ;;		Unchanged: 0/0
  7365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7366 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7367 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7369 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7370 ;;Total ram usage:        6 bytes
  7371 ;; Hardware stack levels used: 1
  7372 ;; Hardware stack levels required when called: 1
  7373 ;; This function calls:
  7374 ;;		Nothing
  7375 ;; This function is called by:
  7376 ;;		_setMotorPWM
  7377 ;; This function uses a non-reentrant model
  7378 ;;
  7379                           
  7380                           	psect	text35
  7381   00276C                     __ptext35:
  7382                           	callstack 0
  7383   00276C                     ___wmul:
  7384                           	callstack 26
  7385   00276C  5001               	movf	___wmul@multiplier^0,w,c
  7386   00276E  0203               	mulwf	___wmul@multiplicand^0,c
  7387   002770  CFF3 F005          	movff	prodl,___wmul@product
  7388   002774  CFF4 F006          	movff	prodh,___wmul@product+1
  7389   002778  5001               	movf	___wmul@multiplier^0,w,c
  7390   00277A  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  7391   00277C  50F3               	movf	243,w,c
  7392   00277E  2606               	addwf	(___wmul@product+1)^0,f,c
  7393   002780  5002               	movf	(___wmul@multiplier+1)^0,w,c
  7394   002782  0203               	mulwf	___wmul@multiplicand^0,c
  7395   002784  50F3               	movf	243,w,c
  7396   002786  2606               	addwf	(___wmul@product+1)^0,f,c
  7397   002788  C005  F001         	movff	___wmul@product,?___wmul
  7398   00278C  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7399   002790  0012               	return		;funcret
  7400   002792                     __end_of___wmul:
  7401                           	callstack 0
  7402                           
  7403 ;; *************** function ___lwdiv *****************
  7404 ;; Defined at:
  7405 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  7406 ;; Parameters:    Size  Location     Type
  7407 ;;  dividend        2   11[COMRAM] unsigned int 
  7408 ;;  divisor         2   13[COMRAM] unsigned int 
  7409 ;; Auto vars:     Size  Location     Type
  7410 ;;  quotient        2   15[COMRAM] unsigned int 
  7411 ;;  counter         1   17[COMRAM] unsigned char 
  7412 ;; Return value:  Size  Location     Type
  7413 ;;                  2   11[COMRAM] unsigned int 
  7414 ;; Registers used:
  7415 ;;		wreg, status,2, status,0
  7416 ;; Tracked objects:
  7417 ;;		On entry : 0/0
  7418 ;;		On exit  : 0/0
  7419 ;;		Unchanged: 0/0
  7420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7421 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7422 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7424 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7425 ;;Total ram usage:        7 bytes
  7426 ;; Hardware stack levels used: 1
  7427 ;; Hardware stack levels required when called: 1
  7428 ;; This function calls:
  7429 ;;		Nothing
  7430 ;; This function is called by:
  7431 ;;		_setMotorPWM
  7432 ;;		_main
  7433 ;; This function uses a non-reentrant model
  7434 ;;
  7435                           
  7436                           	psect	text36
  7437   002440                     __ptext36:
  7438                           	callstack 0
  7439   002440                     ___lwdiv:
  7440                           	callstack 26
  7441   002440  0E00               	movlw	0
  7442   002442  6E11               	movwf	(___lwdiv@quotient+1)^0,c
  7443   002444  0E00               	movlw	0
  7444   002446  6E10               	movwf	___lwdiv@quotient^0,c
  7445   002448  500E               	movf	___lwdiv@divisor^0,w,c
  7446   00244A  100F               	iorwf	(___lwdiv@divisor+1)^0,w,c
  7447   00244C  B4D8               	btfsc	status,2,c
  7448   00244E  EF2B  F012         	goto	u1671
  7449   002452  EF2D  F012         	goto	u1670
  7450   002456                     u1671:
  7451   002456  EF55  F012         	goto	l969
  7452   00245A                     u1670:
  7453   00245A  0E01               	movlw	1
  7454   00245C  6E12               	movwf	___lwdiv@counter^0,c
  7455   00245E  EF35  F012         	goto	l2379
  7456   002462                     l2377:
  7457   002462  90D8               	bcf	status,0,c
  7458   002464  360E               	rlcf	___lwdiv@divisor^0,f,c
  7459   002466  360F               	rlcf	(___lwdiv@divisor+1)^0,f,c
  7460   002468  2A12               	incf	___lwdiv@counter^0,f,c
  7461   00246A                     l2379:
  7462   00246A  AE0F               	btfss	(___lwdiv@divisor+1)^0,7,c
  7463   00246C  EF3A  F012         	goto	u1681
  7464   002470  EF3C  F012         	goto	u1680
  7465   002474                     u1681:
  7466   002474  EF31  F012         	goto	l2377
  7467   002478                     u1680:
  7468   002478                     l2381:
  7469   002478  90D8               	bcf	status,0,c
  7470   00247A  3610               	rlcf	___lwdiv@quotient^0,f,c
  7471   00247C  3611               	rlcf	(___lwdiv@quotient+1)^0,f,c
  7472   00247E  500E               	movf	___lwdiv@divisor^0,w,c
  7473   002480  5C0C               	subwf	___lwdiv@dividend^0,w,c
  7474   002482  500F               	movf	(___lwdiv@divisor+1)^0,w,c
  7475   002484  580D               	subwfb	(___lwdiv@dividend+1)^0,w,c
  7476   002486  A0D8               	btfss	status,0,c
  7477   002488  EF48  F012         	goto	u1691
  7478   00248C  EF4A  F012         	goto	u1690
  7479   002490                     u1691:
  7480   002490  EF4F  F012         	goto	l2389
  7481   002494                     u1690:
  7482   002494  500E               	movf	___lwdiv@divisor^0,w,c
  7483   002496  5E0C               	subwf	___lwdiv@dividend^0,f,c
  7484   002498  500F               	movf	(___lwdiv@divisor+1)^0,w,c
  7485   00249A  5A0D               	subwfb	(___lwdiv@dividend+1)^0,f,c
  7486   00249C  8010               	bsf	___lwdiv@quotient^0,0,c
  7487   00249E                     l2389:
  7488   00249E  90D8               	bcf	status,0,c
  7489   0024A0  320F               	rrcf	(___lwdiv@divisor+1)^0,f,c
  7490   0024A2  320E               	rrcf	___lwdiv@divisor^0,f,c
  7491   0024A4  2E12               	decfsz	___lwdiv@counter^0,f,c
  7492   0024A6  EF3C  F012         	goto	l2381
  7493   0024AA                     l969:
  7494   0024AA  C010  F00C         	movff	___lwdiv@quotient,?___lwdiv
  7495   0024AE  C011  F00D         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7496   0024B2  0012               	return		;funcret
  7497   0024B4                     __end_of___lwdiv:
  7498                           	callstack 0
  7499                           
  7500 ;; *************** function _Timer0_init *****************
  7501 ;; Defined at:
  7502 ;;		line 20 in file "timer0.c"
  7503 ;; Parameters:    Size  Location     Type
  7504 ;;		None
  7505 ;; Auto vars:     Size  Location     Type
  7506 ;;		None
  7507 ;; Return value:  Size  Location     Type
  7508 ;;                  1    wreg      void 
  7509 ;; Registers used:
  7510 ;;		wreg, status,2
  7511 ;; Tracked objects:
  7512 ;;		On entry : 0/0
  7513 ;;		On exit  : 0/0
  7514 ;;		Unchanged: 0/0
  7515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7520 ;;Total ram usage:        0 bytes
  7521 ;; Hardware stack levels used: 1
  7522 ;; Hardware stack levels required when called: 1
  7523 ;; This function calls:
  7524 ;;		Nothing
  7525 ;; This function is called by:
  7526 ;;		_main
  7527 ;; This function uses a non-reentrant model
  7528 ;;
  7529                           
  7530                           	psect	text37
  7531   0027F2                     __ptext37:
  7532                           	callstack 0
  7533   0027F2                     _Timer0_init:
  7534                           	callstack 29
  7535   0027F2                     
  7536                           ;timer0.c: 33:     T0CON1bits.T0CS=0b010;
  7537   0027F2  50D6               	movf	214,w,c	;volatile
  7538   0027F4  0B1F               	andlw	-225
  7539   0027F6  0940               	iorlw	64
  7540   0027F8  6ED6               	movwf	214,c	;volatile
  7541   0027FA                     
  7542                           ;timer0.c: 34:     T0CON1bits.T0ASYNC=1;
  7543   0027FA  88D6               	bsf	214,4,c	;volatile
  7544                           
  7545                           ;timer0.c: 35:     T0CON1bits.T0CKPS=0b0000;
  7546   0027FC  0EF0               	movlw	-16
  7547   0027FE  16D6               	andwf	214,f,c	;volatile
  7548   002800                     
  7549                           ;timer0.c: 36:     T0CON0bits.T016BIT=1;
  7550   002800  88D5               	bsf	213,4,c	;volatile
  7551                           
  7552                           ;timer0.c: 38:     TMR0H=1535>>8;
  7553   002802  0E05               	movlw	5
  7554   002804  6ED4               	movwf	212,c	;volatile
  7555   002806                     
  7556                           ;timer0.c: 39:     TMR0L=1535;
  7557   002806  68D3               	setf	211,c	;volatile
  7558   002808                     
  7559                           ;timer0.c: 40:     T0CON0bits.T0EN=1;
  7560   002808  8ED5               	bsf	213,7,c	;volatile
  7561   00280A  0012               	return		;funcret
  7562   00280C                     __end_of_Timer0_init:
  7563                           	callstack 0
  7564                           
  7565 ;; *************** function _Interrupts_init *****************
  7566 ;; Defined at:
  7567 ;;		line 8 in file "timer0.c"
  7568 ;; Parameters:    Size  Location     Type
  7569 ;;		None
  7570 ;; Auto vars:     Size  Location     Type
  7571 ;;		None
  7572 ;; Return value:  Size  Location     Type
  7573 ;;                  1    wreg      void 
  7574 ;; Registers used:
  7575 ;;		None
  7576 ;; Tracked objects:
  7577 ;;		On entry : 0/0
  7578 ;;		On exit  : 0/0
  7579 ;;		Unchanged: 0/0
  7580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7585 ;;Total ram usage:        0 bytes
  7586 ;; Hardware stack levels used: 1
  7587 ;; Hardware stack levels required when called: 1
  7588 ;; This function calls:
  7589 ;;		Nothing
  7590 ;; This function is called by:
  7591 ;;		_main
  7592 ;; This function uses a non-reentrant model
  7593 ;;
  7594                           
  7595                           	psect	text38
  7596   002848                     __ptext38:
  7597                           	callstack 0
  7598   002848                     _Interrupts_init:
  7599                           	callstack 29
  7600   002848                     
  7601                           ;timer0.c: 10:     PIE0bits.TMR0IE=1;
  7602   002848  010E               	movlb	14	; () banked
  7603   00284A  8B29               	bsf	41,5,b	;volatile
  7604                           
  7605                           ;timer0.c: 11:     INTCONbits.PEIE=1;
  7606   00284C  8CF2               	bsf	242,6,c	;volatile
  7607                           
  7608                           ;timer0.c: 12:     INTCONbits.IPEN=0;
  7609   00284E  9AF2               	bcf	242,5,c	;volatile
  7610                           
  7611                           ;timer0.c: 13:     INTCONbits.GIE=1;
  7612   002850  8EF2               	bsf	242,7,c	;volatile
  7613   002852                     
  7614                           ; BSR set to: 14
  7615   002852  0012               	return		;funcret
  7616   002854                     __end_of_Interrupts_init:
  7617                           	callstack 0
  7618                           
  7619 ;; *************** function _ADC_init *****************
  7620 ;; Defined at:
  7621 ;;		line 9 in file "ADC.c"
  7622 ;; Parameters:    Size  Location     Type
  7623 ;;		None
  7624 ;; Auto vars:     Size  Location     Type
  7625 ;;		None
  7626 ;; Return value:  Size  Location     Type
  7627 ;;                  1    wreg      void 
  7628 ;; Registers used:
  7629 ;;		wreg, status,2
  7630 ;; Tracked objects:
  7631 ;;		On entry : 0/0
  7632 ;;		On exit  : 0/0
  7633 ;;		Unchanged: 0/0
  7634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7639 ;;Total ram usage:        0 bytes
  7640 ;; Hardware stack levels used: 1
  7641 ;; Hardware stack levels required when called: 1
  7642 ;; This function calls:
  7643 ;;		Nothing
  7644 ;; This function is called by:
  7645 ;;		_main
  7646 ;; This function uses a non-reentrant model
  7647 ;;
  7648                           
  7649                           	psect	text39
  7650   00280C                     __ptext39:
  7651                           	callstack 0
  7652   00280C                     _ADC_init:
  7653                           	callstack 29
  7654   00280C                     
  7655                           ;ADC.c: 11:     TRISEbits.TRISE0=1;
  7656   00280C  8085               	bsf	133,0,c	;volatile
  7657                           
  7658                           ;ADC.c: 12:     ANSELEbits.ANSELE0=1;
  7659   00280E  010E               	movlb	14	; () banked
  7660   002810  81AF               	bsf	175,0,b	;volatile
  7661                           
  7662                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
  7663   002812  010F               	movlb	15	; () banked
  7664   002814  9958               	bcf	88,4,b	;volatile
  7665   002816                     
  7666                           ; BSR set to: 15
  7667                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
  7668   002816  0EFC               	movlw	-4
  7669   002818  1758               	andwf	88,f,b	;volatile
  7670                           
  7671                           ;ADC.c: 17:     ADPCH=0b11;
  7672   00281A  0E03               	movlw	3
  7673   00281C  6F5F               	movwf	95,b	;volatile
  7674   00281E                     
  7675                           ; BSR set to: 15
  7676                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
  7677   00281E  9460               	bcf	96,2,c	;volatile
  7678   002820                     
  7679                           ; BSR set to: 15
  7680                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
  7681   002820  8860               	bsf	96,4,c	;volatile
  7682   002822                     
  7683                           ; BSR set to: 15
  7684                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
  7685   002822  8E60               	bsf	96,7,c	;volatile
  7686   002824                     
  7687                           ; BSR set to: 15
  7688   002824  0012               	return		;funcret
  7689   002826                     __end_of_ADC_init:
  7690                           	callstack 0
  7691                           
  7692 ;; *************** function _ADC_getval *****************
  7693 ;; Defined at:
  7694 ;;		line 23 in file "ADC.c"
  7695 ;; Parameters:    Size  Location     Type
  7696 ;;		None
  7697 ;; Auto vars:     Size  Location     Type
  7698 ;;  tmpval          2    2[COMRAM] unsigned int 
  7699 ;; Return value:  Size  Location     Type
  7700 ;;                  2    0[COMRAM] unsigned int 
  7701 ;; Registers used:
  7702 ;;		None
  7703 ;; Tracked objects:
  7704 ;;		On entry : 0/0
  7705 ;;		On exit  : 0/0
  7706 ;;		Unchanged: 0/0
  7707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7708 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7709 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7711 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7712 ;;Total ram usage:        4 bytes
  7713 ;; Hardware stack levels used: 1
  7714 ;; Hardware stack levels required when called: 1
  7715 ;; This function calls:
  7716 ;;		Nothing
  7717 ;; This function is called by:
  7718 ;;		_main
  7719 ;; This function uses a non-reentrant model
  7720 ;;
  7721                           
  7722                           	psect	text40
  7723   0027D2                     __ptext40:
  7724                           	callstack 0
  7725   0027D2                     _ADC_getval:
  7726                           	callstack 29
  7727   0027D2                     
  7728                           ;ADC.c: 25:     unsigned int tmpval;;ADC.c: 27:     ADCON0bits.GO = 1;
  7729   0027D2  8060               	bsf	96,0,c	;volatile
  7730   0027D4                     l472:
  7731   0027D4  B060               	btfsc	96,0,c	;volatile
  7732   0027D6  EFEF  F013         	goto	u2751
  7733   0027DA  EFF1  F013         	goto	u2750
  7734   0027DE                     u2751:
  7735   0027DE  EFEA  F013         	goto	l472
  7736   0027E2                     u2750:
  7737   0027E2                     
  7738                           ;ADC.c: 31:     tmpval = ADRESH;
  7739   0027E2  CF64 F003          	movff	3940,ADC_getval@tmpval	;volatile
  7740   0027E6  6A04               	clrf	(ADC_getval@tmpval+1)^0,c
  7741                           
  7742                           ;ADC.c: 33:     return tmpval;
  7743   0027E8  C003  F001         	movff	ADC_getval@tmpval,?_ADC_getval
  7744   0027EC  C004  F002         	movff	ADC_getval@tmpval+1,?_ADC_getval+1
  7745   0027F0  0012               	return		;funcret
  7746   0027F2                     __end_of_ADC_getval:
  7747                           	callstack 0
  7748                           
  7749 ;; *************** function _HighISR *****************
  7750 ;; Defined at:
  7751 ;;		line 197 in file "mainfinal.c"
  7752 ;; Parameters:    Size  Location     Type
  7753 ;;		None
  7754 ;; Auto vars:     Size  Location     Type
  7755 ;;		None
  7756 ;; Return value:  Size  Location     Type
  7757 ;;                  1    wreg      void 
  7758 ;; Registers used:
  7759 ;;		wreg, status,2, status,0
  7760 ;; Tracked objects:
  7761 ;;		On entry : 0/0
  7762 ;;		On exit  : 0/0
  7763 ;;		Unchanged: 0/0
  7764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7769 ;;Total ram usage:        0 bytes
  7770 ;; Hardware stack levels used: 1
  7771 ;; This function calls:
  7772 ;;		Nothing
  7773 ;; This function is called by:
  7774 ;;		Interrupt level 2
  7775 ;; This function uses a non-reentrant model
  7776 ;;
  7777                           
  7778                           	psect	intcode
  7779   000008                     __pintcode:
  7780                           	callstack 0
  7781   000008                     _HighISR:
  7782                           	callstack 23
  7783                           
  7784                           ;incstack = 0
  7785   000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7786   00000A                     
  7787                           ;mainfinal.c: 199:     if (PIR0bits.TMR0IF == 1 & interruptenable == 1)
  7788   00000A  010E               	movlb	14	; () banked
  7789   00000C  AB33               	btfss	51,5,b	;volatile
  7790   00000E  EF0B  F000         	goto	i2u331_41
  7791   000012  EF0D  F000         	goto	i2u331_40
  7792   000016                     i2u331_41:
  7793   000016  EF1A  F000         	goto	i2l3571
  7794   00001A                     i2u331_40:
  7795   00001A                     
  7796                           ; BSR set to: 14
  7797   00001A  0454               	decf	_interruptenable^0,w,c
  7798   00001C  A4D8               	btfss	status,2,c
  7799   00001E  EF13  F000         	goto	i2u332_41
  7800   000022  EF15  F000         	goto	i2u332_40
  7801   000026                     i2u332_41:
  7802   000026  EF1A  F000         	goto	i2l3571
  7803   00002A                     i2u332_40:
  7804   00002A                     
  7805                           ; BSR set to: 14
  7806                           ;mainfinal.c: 200:     {;mainfinal.c: 201:         timercount++;
  7807   00002A  4A52               	infsnz	_timercount^0,f,c
  7808   00002C  2A53               	incf	(_timercount+1)^0,f,c
  7809   00002E                     
  7810                           ; BSR set to: 14
  7811                           ;mainfinal.c: 202:         TMR0H=1535>>8;
  7812   00002E  0E05               	movlw	5
  7813   000030  6ED4               	movwf	212,c	;volatile
  7814   000032                     
  7815                           ; BSR set to: 14
  7816                           ;mainfinal.c: 203:         TMR0L=1535;
  7817   000032  68D3               	setf	211,c	;volatile
  7818   000034                     i2l3571:
  7819                           
  7820                           ; BSR set to: 14
  7821                           ;mainfinal.c: 205:     PIR0bits.TMR0IF=0;
  7822   000034  9B33               	bcf	51,5,b	;volatile
  7823   000036                     
  7824                           ; BSR set to: 14
  7825   000036  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7826   000038  0011               	retfie		f
  7827   00003A                     __end_of_HighISR:
  7828                           	callstack 0
  7829   000000                     
  7830                           	psect	rparam
  7831   000000                     
  7832                           	psect	temp
  7833   000057                     btemp:
  7834                           	callstack 0
  7835   000057                     	ds	1
  7836   000000                     int$flags	set	btemp
  7837   000000                     wtemp8	set	btemp+1
  7838   000000                     ttemp5	set	btemp+1
  7839   000000                     ttemp6	set	btemp+4
  7840   000000                     ttemp7	set	btemp+8
  7841                           
  7842                           	psect	idloc
  7843                           
  7844                           ;Config register IDLOC0 @ 0x200000
  7845                           ;	unspecified, using default values
  7846   200000                     	org	2097152
  7847   200000  0FFF               	dw	4095
  7848                           
  7849                           ;Config register IDLOC1 @ 0x200002
  7850                           ;	unspecified, using default values
  7851   200002                     	org	2097154
  7852   200002  0FFF               	dw	4095
  7853                           
  7854                           ;Config register IDLOC2 @ 0x200004
  7855                           ;	unspecified, using default values
  7856   200004                     	org	2097156
  7857   200004  0FFF               	dw	4095
  7858                           
  7859                           ;Config register IDLOC3 @ 0x200006
  7860                           ;	unspecified, using default values
  7861   200006                     	org	2097158
  7862   200006  0FFF               	dw	4095
  7863                           
  7864                           ;Config register IDLOC4 @ 0x200008
  7865                           ;	unspecified, using default values
  7866   200008                     	org	2097160
  7867   200008  0FFF               	dw	4095
  7868                           
  7869                           ;Config register IDLOC5 @ 0x20000A
  7870                           ;	unspecified, using default values
  7871   20000A                     	org	2097162
  7872   20000A  0FFF               	dw	4095
  7873                           
  7874                           ;Config register IDLOC6 @ 0x20000C
  7875                           ;	unspecified, using default values
  7876   20000C                     	org	2097164
  7877   20000C  0FFF               	dw	4095
  7878                           
  7879                           ;Config register IDLOC7 @ 0x20000E
  7880                           ;	unspecified, using default values
  7881   20000E                     	org	2097166
  7882   20000E  0FFF               	dw	4095
  7883                           
  7884                           	psect	config
  7885                           
  7886                           ;Config register CONFIG1L @ 0x300000
  7887                           ;	External Oscillator mode Selection bits
  7888                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  7889                           ;	Power-up default value for COSC bits
  7890                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  7891   300000                     	org	3145728
  7892   300000  AA                 	db	170
  7893                           
  7894                           ;Config register CONFIG1H @ 0x300001
  7895                           ;	unspecified, using default values
  7896                           ;	Clock Out Enable bit
  7897                           ;	CLKOUTEN = 0x1, unprogrammed default
  7898                           ;	Clock Switch Enable bit
  7899                           ;	CSWEN = 0x1, unprogrammed default
  7900                           ;	Fail-Safe Clock Monitor Enable bit
  7901                           ;	FCMEN = 0x1, unprogrammed default
  7902   300001                     	org	3145729
  7903   300001  FF                 	db	255
  7904                           
  7905                           ;Config register CONFIG2L @ 0x300002
  7906                           ;	unspecified, using default values
  7907                           ;	Master Clear Enable bit
  7908                           ;	MCLRE = 0x1, unprogrammed default
  7909                           ;	Power-up Timer Enable bit
  7910                           ;	PWRTE = 0x1, unprogrammed default
  7911                           ;	Low-power BOR enable bit
  7912                           ;	LPBOREN = 0x1, unprogrammed default
  7913                           ;	Brown-out Reset Enable bits
  7914                           ;	BOREN = 0x3, unprogrammed default
  7915   300002                     	org	3145730
  7916   300002  FF                 	db	255
  7917                           
  7918                           ;Config register CONFIG2H @ 0x300003
  7919                           ;	unspecified, using default values
  7920                           ;	Brown Out Reset Voltage selection bits
  7921                           ;	BORV = 0x3, unprogrammed default
  7922                           ;	ZCD Disable bit
  7923                           ;	ZCD = 0x1, unprogrammed default
  7924                           ;	PPSLOCK bit One-Way Set Enable bit
  7925                           ;	PPS1WAY = 0x1, unprogrammed default
  7926                           ;	Stack Full/Underflow Reset Enable bit
  7927                           ;	STVREN = 0x1, unprogrammed default
  7928                           ;	Debugger Enable bit
  7929                           ;	DEBUG = 0x1, unprogrammed default
  7930                           ;	Extended Instruction Set Enable bit
  7931                           ;	XINST = 0x1, unprogrammed default
  7932   300003                     	org	3145731
  7933   300003  FF                 	db	255
  7934                           
  7935                           ;Config register CONFIG3L @ 0x300004
  7936                           ;	WDT Period Select bits
  7937                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  7938                           ;	WDT operating mode
  7939                           ;	WDTE = OFF, WDT Disabled
  7940   300004                     	org	3145732
  7941   300004  9F                 	db	159
  7942                           
  7943                           ;Config register CONFIG3H @ 0x300005
  7944                           ;	unspecified, using default values
  7945                           ;	WDT Window Select bits
  7946                           ;	WDTCWS = 0x7, unprogrammed default
  7947                           ;	WDT input clock selector
  7948                           ;	WDTCCS = 0x7, unprogrammed default
  7949   300005                     	org	3145733
  7950   300005  FF                 	db	255
  7951                           
  7952                           ;Config register CONFIG4L @ 0x300006
  7953                           ;	unspecified, using default values
  7954                           ;	Write Protection Block 0
  7955                           ;	WRT0 = 0x1, unprogrammed default
  7956                           ;	Write Protection Block 1
  7957                           ;	WRT1 = 0x1, unprogrammed default
  7958                           ;	Write Protection Block 2
  7959                           ;	WRT2 = 0x1, unprogrammed default
  7960                           ;	Write Protection Block 3
  7961                           ;	WRT3 = 0x1, unprogrammed default
  7962                           ;	Write Protection Block 3
  7963                           ;	WRT4 = 0x1, unprogrammed default
  7964                           ;	Write Protection Block 3
  7965                           ;	WRT5 = 0x1, unprogrammed default
  7966                           ;	Write Protection Block 3
  7967                           ;	WRT6 = 0x1, unprogrammed default
  7968                           ;	Write Protection Block 3
  7969                           ;	WRT7 = 0x1, unprogrammed default
  7970   300006                     	org	3145734
  7971   300006  FF                 	db	255
  7972                           
  7973                           ;Config register CONFIG4H @ 0x300007
  7974                           ;	unspecified, using default values
  7975                           ;	Configuration Register Write Protection bit
  7976                           ;	WRTC = 0x1, unprogrammed default
  7977                           ;	Boot Block Write Protection bit
  7978                           ;	WRTB = 0x1, unprogrammed default
  7979                           ;	Data EEPROM Write Protection bit
  7980                           ;	WRTD = 0x1, unprogrammed default
  7981                           ;	Scanner Enable bit
  7982                           ;	SCANE = 0x1, unprogrammed default
  7983                           ;	Low Voltage Programming Enable bit
  7984                           ;	LVP = 0x1, unprogrammed default
  7985   300007                     	org	3145735
  7986   300007  FF                 	db	255
  7987                           
  7988                           ;Config register CONFIG5L @ 0x300008
  7989                           ;	unspecified, using default values
  7990                           ;	UserNVM Program Memory Code Protection bit
  7991                           ;	CP = 0x1, unprogrammed default
  7992                           ;	DataNVM Memory Code Protection bit
  7993                           ;	CPD = 0x1, unprogrammed default
  7994   300008                     	org	3145736
  7995   300008  FF                 	db	255
  7996                           
  7997                           ;Config register CONFIG5H @ 0x300009
  7998                           ;	unspecified, using default values
  7999   300009                     	org	3145737
  8000   300009  FF                 	db	255
  8001                           
  8002                           ;Config register CONFIG6L @ 0x30000A
  8003                           ;	unspecified, using default values
  8004                           ;	Table Read Protection Block 0
  8005                           ;	EBTR0 = 0x1, unprogrammed default
  8006                           ;	Table Read Protection Block 1
  8007                           ;	EBTR1 = 0x1, unprogrammed default
  8008                           ;	Table Read Protection Block 2
  8009                           ;	EBTR2 = 0x1, unprogrammed default
  8010                           ;	Table Read Protection Block 3
  8011                           ;	EBTR3 = 0x1, unprogrammed default
  8012                           ;	Table Read Protection Block 4
  8013                           ;	EBTR4 = 0x1, unprogrammed default
  8014                           ;	Table Read Protection Block 5
  8015                           ;	EBTR5 = 0x1, unprogrammed default
  8016                           ;	Table Read Protection Block 6
  8017                           ;	EBTR6 = 0x1, unprogrammed default
  8018                           ;	Table Read Protection Block 7
  8019                           ;	EBTR7 = 0x1, unprogrammed default
  8020   30000A                     	org	3145738
  8021   30000A  FF                 	db	255
  8022                           
  8023                           ;Config register CONFIG6H @ 0x30000B
  8024                           ;	unspecified, using default values
  8025                           ;	Boot Block Table Read Protection bit
  8026                           ;	EBTRB = 0x1, unprogrammed default
  8027   30000B                     	org	3145739
  8028   30000B  FF                 	db	255
  8029                           tosu	equ	0xFFF
  8030                           tosh	equ	0xFFE
  8031                           tosl	equ	0xFFD
  8032                           stkptr	equ	0xFFC
  8033                           pclatu	equ	0xFFB
  8034                           pclath	equ	0xFFA
  8035                           pcl	equ	0xFF9
  8036                           tblptru	equ	0xFF8
  8037                           tblptrh	equ	0xFF7
  8038                           tblptrl	equ	0xFF6
  8039                           tablat	equ	0xFF5
  8040                           prodh	equ	0xFF4
  8041                           prodl	equ	0xFF3
  8042                           indf0	equ	0xFEF
  8043                           postinc0	equ	0xFEE
  8044                           postdec0	equ	0xFED
  8045                           preinc0	equ	0xFEC
  8046                           plusw0	equ	0xFEB
  8047                           fsr0h	equ	0xFEA
  8048                           fsr0l	equ	0xFE9
  8049                           wreg	equ	0xFE8
  8050                           indf1	equ	0xFE7
  8051                           postinc1	equ	0xFE6
  8052                           postdec1	equ	0xFE5
  8053                           preinc1	equ	0xFE4
  8054                           plusw1	equ	0xFE3
  8055                           fsr1h	equ	0xFE2
  8056                           fsr1l	equ	0xFE1
  8057                           bsr	equ	0xFE0
  8058                           indf2	equ	0xFDF
  8059                           postinc2	equ	0xFDE
  8060                           postdec2	equ	0xFDD
  8061                           preinc2	equ	0xFDC
  8062                           plusw2	equ	0xFDB
  8063                           fsr2h	equ	0xFDA
  8064                           fsr2l	equ	0xFD9
  8065                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         310
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     77      86
    BANK0           160     70      71
    BANK1           256      0     100
    BANK2           256      0     200
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    carryoutstep@amb	PTR struct colors size(2) Largest target is 8
		 -> main@ambient(BANK0[8]), 

    carryoutstep@mx	PTR struct colors size(2) Largest target is 8
		 -> main@max(BANK0[8]), 

    carryoutstep@read	PTR struct colors size(2) Largest target is 8
		 -> main@reading(BANK0[8]), 

    decide_color@mx	PTR struct colors size(2) Largest target is 8
		 -> main@reading(BANK0[8]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    smallmovement@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    smallmovement@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    smallmovement@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    smallmovement@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    smallmovement@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), carryoutstep@motorR(BANK0[9]), 

    smallmovement@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), carryoutstep@motorL(BANK0[9]), 

    square@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    square@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    square@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), returnhome@motorR(COMRAM[9]), carryoutstep@motorR(BANK0[9]), 

    square@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    square@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    square@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), returnhome@motorL(COMRAM[9]), carryoutstep@motorL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), returnhome@motorR(COMRAM[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), returnhome@motorL(COMRAM[9]), 

    turn180@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    turn180@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    turn180@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    turn180@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    turn180@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> returnstep@motorR(COMRAM[9]), carryoutstep@motorR(BANK0[9]), 

    turn180@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> returnstep@motorL(COMRAM[9]), carryoutstep@motorL(BANK0[9]), 

    turnRight135@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    turnRight135@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    turnRight135@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    turnRight135@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    turnRight135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> returnstep@motorR(COMRAM[9]), carryoutstep@motorR(BANK0[9]), 

    turnRight135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> returnstep@motorL(COMRAM[9]), carryoutstep@motorL(BANK0[9]), 

    turnLeft135@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    turnLeft135@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    turnLeft135@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    turnLeft135@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    turnLeft135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> returnstep@motorR(COMRAM[9]), carryoutstep@motorR(BANK0[9]), 

    turnLeft135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> returnstep@motorL(COMRAM[9]), carryoutstep@motorL(BANK0[9]), 

    turnRight90@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    turnRight90@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    turnRight90@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    turnRight90@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    turnRight90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> returnstep@motorR(COMRAM[9]), carryoutstep@motorR(BANK0[9]), 

    turnRight90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> returnstep@motorL(COMRAM[9]), carryoutstep@motorL(BANK0[9]), 

    turnLeft90@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    turnLeft90@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    turnLeft90@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    turnLeft90@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    turnLeft90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> returnstep@motorR(COMRAM[9]), carryoutstep@motorR(BANK0[9]), 

    turnLeft90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> returnstep@motorL(COMRAM[9]), carryoutstep@motorL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), returnstep@motorR(COMRAM[9]), returnhome@motorR(COMRAM[9]), carryoutstep@motorR(BANK0[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), returnstep@motorL(COMRAM[9]), returnhome@motorL(COMRAM[9]), carryoutstep@motorL(BANK0[9]), 

    S801DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    S801DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), main@motorR(BANK0[9]), returnstep@motorR(COMRAM[9]), returnstep@motorL(COMRAM[9]), 
		 -> returnhome@motorR(COMRAM[9]), returnhome@motorL(COMRAM[9]), carryoutstep@motorR(BANK0[9]), carryoutstep@motorL(BANK0[9]), 


Critical Paths under _main in COMRAM

    _main->_returnhome
    _decide_color->___fldiv
    ___fltol->___flmul
    ___fldiv->___xxtofl
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _carryoutstep->_returnhome
    _smallmovement->_stop
    _returnhome->_returnstep
    _square->_stop
    _returnstep->_turn180
    _returnstep->_turnLeft135
    _returnstep->_turnLeft90
    _returnstep->_turnRight135
    _returnstep->_turnRight90
    _turnRight90->_stop
    _turnRight135->_stop
    _turnLeft90->_stop
    _turnLeft135->_stop
    _turn180->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->_color_read_Blue
    ___lwdiv->_color_read_Clear
    ___lwdiv->_color_read_Green
    ___lwdiv->_color_read_Red

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_carryoutstep

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                49    49      0  334175
                                             75 COMRAM     2     2      0
                                             25 BANK0     45    45      0
                         _ADC_getval
                           _ADC_init
                  _I2C_2_Master_Init
                    _Interrupts_init
                        _Timer0_init
                            ___lwdiv
                       _carryoutstep
                   _color_click_init
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                       _decide_color
                     _fullSpeedAhead
                    _initDCmotorsPWM
                         _returnhome
                           _savepath
                           _savetime
                      _smallmovement
                             _square
 ---------------------------------------------------------------------------------
 (1) _savetime                                             2     0      2      99
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _decide_color                                        24    22      2    5964
                                             39 COMRAM    24    22      2
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     616
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                             25 COMRAM    10     6      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2048
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1541
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _carryoutstep                                        25     0     25  192528
                                              0 BANK0     25     0     25
                         _returnhome
                           _savepath
                      _smallmovement
                             _square
                            _turn180
                        _turnLeft135
                         _turnLeft90
                       _turnRight135
                        _turnRight90
 ---------------------------------------------------------------------------------
 (1) _smallmovement                                        6     1      5   13978
                                             29 COMRAM     6     1      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _savepath                                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _returnhome                                          21     3     18   95748
                                             54 COMRAM    21     3     18
                     _fullSpeedAhead
                         _returnstep
                             _square
                               _stop
 ---------------------------------------------------------------------------------
 (1) _square                                               7     2      5   13934
                                             29 COMRAM     7     2      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _returnstep                                          19     1     18   67758
                                             35 COMRAM    19     1     18
                            _turn180
                        _turnLeft135
                         _turnLeft90
                       _turnRight135
                        _turnRight90
 ---------------------------------------------------------------------------------
 (3) _turnRight90                                          6     2      4   13522
                                             29 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (3) _turnRight135                                         6     2      4   13370
                                             29 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (3) _turnLeft90                                           6     2      4   13522
                                             29 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (3) _turnLeft135                                          6     2      4   13370
                                             29 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (3) _turn180                                              6     2      4   13370
                                             29 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _stop                                                 5     1      4    7585
                                             24 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _fullSpeedAhead                                       6     1      5    5893
                                             24 COMRAM     6     1      5
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _setMotorPWM                                          6     4      2    5173
                                             18 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4    3094
                                             11 COMRAM     7     3      4
                             ___wmul (ARG)
                    _color_read_Blue (ARG)
                   _color_read_Clear (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_getval                                           4     2      2      23
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_getval
   _ADC_init
   _I2C_2_Master_Init
   _Interrupts_init
   _Timer0_init
   ___lwdiv
     ___wmul (ARG)
     _color_read_Blue (ARG)
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _color_read_Clear (ARG)
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green (ARG)
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red (ARG)
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _carryoutstep
     _returnhome
       _fullSpeedAhead
         _setMotorPWM
           ___lwdiv
           ___wmul
       _returnstep
         _turn180
           _setMotorPWM
           _stop
             _setMotorPWM
         _turnLeft135
           _setMotorPWM
           _stop
         _turnLeft90
           _setMotorPWM
           _stop
         _turnRight135
           _setMotorPWM
           _stop
         _turnRight90
           _setMotorPWM
           _stop
       _square
         _setMotorPWM
         _stop
       _stop
     _savepath
     _smallmovement
       _setMotorPWM
       _stop
     _square
     _turn180
     _turnLeft135
     _turnLeft90
     _turnRight135
     _turnRight90
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_read_Blue
   _color_read_Clear
   _color_read_Green
   _color_read_Red
   _decide_color
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
     ___fltol
       ___flmul (ARG)
     ___xxtofl
   _fullSpeedAhead
   _initDCmotorsPWM
   _returnhome
   _savepath
   _savetime
   _smallmovement
   _square

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      62        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C8       9       78.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      64       7       39.1%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     46      47       5       44.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4D      56       1       91.5%
BITBIGSFRhlllll     46      0       0      47        0.0%
BITBIGSFRlllhll     35      0       0      57        0.0%
BITBIGSFRhlllhl     31      0       0      45        0.0%
BITBIGSFRllll       2D      0       0      60        0.0%
BITBIGSFRllhh       20      0       0      49        0.0%
BITBIGSFRlllhhh     1E      0       0      52        0.0%
BITBIGSFRhhhhhl     1B      0       0      33        0.0%
BITBIGSFRhhhlll     17      0       0      38        0.0%
BITBIGSFRhlllhl     14      0       0      42        0.0%
BITBIGSFRhhhhl      13      0       0      34        0.0%
BITBIGSFRlllhhh     11      0       0      53        0.0%
BITBIGSFRhhhlhh      E      0       0      35        0.0%
BITBIGSFRhhhhhh      D      0       0      32        0.0%
BITBIGSFRlllhll      B      0       0      59        0.0%
BITBIGSFRlllhll      9      0       0      58        0.0%
BITBIGSFRllhll       7      0       0      51        0.0%
BITBIGSFRhlllhl      6      0       0      44        0.0%
BITBIGSFRlllhlh      5      0       0      56        0.0%
BITBIGSFRhhhlll      5      0       0      39        0.0%
BITBIGSFRllhlh       4      0       0      50        0.0%
BITBIGSFRhlllhl      3      0       0      43        0.0%
BITBIGSFRlllhhl      3      0       0      55        0.0%
BITBIGSFRhllllh      2      0       0      46        0.0%
BITBIGSFRhhhllh      2      0       0      37        0.0%
BITBIGSFRhlllhh      1      0       0      41        0.0%
BITBIGSFRhhhlhl      1      0       0      36        0.0%
BITBIGSFRlllhhh      1      0       0      54        0.0%
BITBIGSFRhlhh        1      0       0      40        0.0%
BITBIGSFRlh          1      0       0      48        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1C9      61        0.0%
DATA                 0      0     1C9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Dec 12 14:20:53 2022

               _color_read_Red 2526                   ___fldiv@aexp 0027                   ___fldiv@bexp 0026  
                 ___fldiv@sign 001F                _color_read_Blue 2616                ??_smallmovement 0023  
                           l30 2744                             l33 276A                             l42 2866  
                           l27 2742                             l36 2870                             l45 2846  
                           l39 285C                             l48 26A6              fullSpeedAhead@dir 001D  
          ___wmul@multiplicand 0003               _color_read_Clear 25C6               _color_read_Green 2576  
            ??_Interrupts_init 0001                            l210 16AC                            l131 243E  
                          l213 283A                            l152 1CFE                            l160 1DE8  
                          l216 27B0                            l138 19CC                            l146 2524  
                          l227 1AEE                            l172 1ED0                            l228 1B0A  
                          l340 084C                            l237 22F2                            l166 209E  
                          l430 27D0                            l334 0784                            l335 07E4  
                          l193 23AE                            l433 2574                            l337 07F2  
                          l178 1FB8                            l442 2614                            l338 083E  
                          l187 216A                            l427 26E6                            l436 25C4  
                          l381 280A                            l446 06D0                            l199 2230  
                          l439 2664                            l472 27D4                            l474 27E2  
                          l378 2852                            l475 27F0                            l469 2824  
                          l478 2790                            l775 1C10                            l976 24B2  
                          l969 24AA                            prod 000FF3                            wreg 000FE8  
                 ___flmul@aexp 0012                   ___flmul@bexp 0013                   ___flmul@sign 000D  
                 ___flmul@temp 0018                   ___flmul@prod 0014                    main@ambient 0096  
                 ___fltol@exp1 0023                           l1101 1042                           l1102 1030  
                         l1060 14D2                           l1140 179C                           l1109 10FA  
                         l1133 1704                           l1062 1332                           l1071 1378  
                         l1136 1860                           l1073 13F0                           l1065 12F6  
                         l3001 1B0C                           l1074 13DE                           l3011 1B62  
                         l3003 1B22                           l1147 17F8                           l1092 0DD4  
                         l3013 1B72                           l3101 241A                           l3023 1B9C  
                         l3015 1B76                           l3007 1B36                           l3111 243C  
                         l3103 2424                           l1096 1138                           l2401 18EA  
                         l3121 1504                           l3113 14D4                           l3201 26DC  
                         l3041 1C00                           l3033 1BC4                           l3025 1BA6  
                         l3017 1B84                           l3009 1B60                           l3105 2426  
                         l3211 280C                           l2403 192C                           l2411 24B8  
                         l3131 155A                           l3123 1518                           l3115 14E8  
                         l3203 26DE                           l1099 0FCA                           l3035 1BD0  
                         l3027 1BB0                           l3051 1714                           l3107 2430  
                         l3221 27D2                           l3213 2816                           l2405 1948  
                         l2421 250C                           l2413 24CC                           l2501 2038  
                         l3141 15AC                           l3133 1560                           l3125 152C  
                         l3117 14FC                           l3205 26E0                           l3037 1BE0  
                         l3061 1752                           l3053 172A                           l3045 16B0  
                         l3301 0436                           l3109 2432                           l3215 281E  
                         l2407 198C                           l2415 24DC                           l2503 2044  
                         l2431 1C36                           l2511 1DEA                           l3151 160C  
                         l3143 15C0                           l3135 1574                           l3127 1532  
                         l3119 14FE                           l2423 2744                           l3207 26E2  
                         l3231 265C                           l3223 2526                           l3039 1BF0  
                         l3071 17DA                           l3063 1784                           l3047 16C0  
                         l3303 044C                           l3311 048A                           l3217 2820  
                         l2417 24E8                           l2409 24B4                           l2505 205C  
                         l2441 1C7C                           l2433 1C46                           l2521 1E3A  
                         l2513 1DFE                           l2601 2318                           l3161 1654  
                         l3153 1620                           l3145 15EC                           l3137 15A0  
                         l3129 1546                           l2425 2754                           l3209 26E4  
                         l3241 25C6                           l3225 256C                           l3081 1830  
                         l3073 17E8                           l3065 1786                           l3057 173E  
                         l3049 16CE                           l3321 0504                           l3313 04A0  
                         l3305 046E                           l3401 0720                           l3219 2822  
                         l2371 2440                           l2419 24F4                           l2507 2074  
                         l2451 1CD2                           l2443 1C86                           l2435 1C52  
                         l2427 1C12                           l2523 1E48                           l2531 1E74  
                         l2515 1E0E                           l2603 2326                           l2611 2352  
                         l3163 1668                           l3155 1626                           l3147 15F2  
                         l3139 15A6                           l3243 260C                           l3235 2576  
                         l3083 1840                           l3075 1806                           l3067 1792  
                         l3059 1746                           l3331 054C                           l3315 04B6  
                         l3307 0484                           l3251 01FA                           l3091 23B0  
                         l3171 2796                           l3411 0748                           l3403 0728  
                         l3181 2800                           l2381 2478                           l2373 2448  
                         l2365 276C                           l2541 1EE6                           l2509 208A  
                         l2453 1CEA                           l2445 1C92                           l2437 1C62  
                         l2429 1C26                           l2533 1E8C                           l2525 1E52  
                         l2517 1E1E                           l2461 1D34                           l2621 2246  
                         l2613 236A                           l2605 2330                           l2701 19D4  
                         l3165 166C                           l3157 163A                           l3149 15F8  
                         l3229 2616                           l3237 25BC                           l3085 184E  
                         l3077 1808                           l3069 17CE                           l3341 05A0  
                         l3333 056E                           l3317 04CC                           l3325 050A  
                         l3261 02BC                           l3253 023A                           l3093 23C0  
                         l3173 27AE                           l3501 0998                           l3421 0758  
                         l3413 0750                           l3405 0730                           l3183 2806  
                         l2391 24A4                           l2383 247E                           l2375 245A  
                         l2367 2788                           l2551 1F30                           l2543 1EF6  
                         l2439 1C72                           l2447 1C9E                           l2535 1EA4  
                         l2527 1E5C                           l2519 1E2A                           l2471 1D74  
                         l2463 1D40                           l2455 1D00                           l2631 22A6  
                         l2623 225A                           l2615 2382                           l2607 233A  
                         l2711 1A28                           l2703 19DC                           l3167 1684  
                         l3159 164E                           l3191 26AC                           l3087 1850  
                         l3079 180C                           l3343 05B6                           l3351 0600  
                         l3327 0520                           l3319 04E2                           l3271 031E  
                         l3263 02E0                           l3255 027A                           l3247 003E  
                         l3095 23EA                           l3175 27B0                           l3511 0A4A  
                         l3503 09BA                           l3431 0764                           l3423 075A  
                         l3415 0752                           l3407 0738                           l3185 2808  
                         l3177 27F2                           l2385 2494                           l2377 2462  
                         l2393 1862                           l2561 1F74                           l2553 1F3A  
                         l2545 1F06                           l2449 1CB8                           l2537 1EBC  
                         l2529 1E68                           l2481 1DD4                           l2473 1D80  
                         l2465 1D50                           l2457 1D14                           l2633 22B8  
                         l2625 226C                           l2617 239A                           l2609 2346  
                         l2721 1A90                           l2713 1A2C                           l2705 19F8  
                         l2641 271A                           l3193 26B6                           l2801 12C2  
                         l3361 066E                           l3353 0616                           l3345 05D8  
                         l3329 0536                           l3337 0574                           l3281 0398  
                         l3273 0334                           l3265 0302                           l3257 0290  
                         l3249 01BA                           l3097 240E                           l3169 2792  
                         l3521 0AE0                           l3513 0A70                           l3505 09E0  
                         l3441 07A2                           l3433 0768                           l3425 075C  
                         l3417 0754                           l3409 0740                           l3187 2848  
                         l3179 27FA                           l2387 249C                           l2379 246A  
                         l2395 187E                           l2563 1F8C                           l2555 1F44  
                         l2547 1F12                           l2539 1ED2                           l2491 1FFA  
                         l2483 1FBA                           l2467 1D60                           l2475 1D8C  
                         l2459 1D24                           l2635 22CC                           l2627 2280  
                         l2619 2234                           l2723 1AC6                           l2715 1A5A  
                         l2707 1A0C                           l2651 2730                           l2643 2724  
                         l2571 285E                           l2731 27B4                           l3195 26C6  
                         l2811 131E                           l2803 12D2                           l3363 0684  
                         l3355 062C                           l3347 05FA                           l3339 058A  
                         l3291 03E0                           l3275 034A                           l3259 02A6  
                         l3099 2418                           l3531 0B74                           l3523 0AF2  
                         l3515 0A92                           l3507 0A02                           l3451 07D2  
                         l3443 07AA                           l3435 0782                           l3427 0760  
                         l3419 0756                           l2389 249E                           l2397 18D2  
                         l2581 20E4                           l2565 1FA4                           l2557 1F50  
                         l2549 1F22                           l2493 200A                           l2485 1FCE  
                         l2477 1DA4                           l2469 1D6A                           l2637 22DE  
                         l2629 2292                           l2725 1ADE                           l2717 1A5C  
                         l2709 1A10                           l2645 272A                           l2573 2862  
                         l3197 26D0                           l3189 26A8                           l2661 2674  
                         l2653 2854                           l2821 135E                           l2813 1320  
                         l2805 12E6                           l2741 1166                           l2733 113A  
                         l2901 0DBE                           l3365 06A6                           l3357 0642  
                         l3373 06CE                           l3293 0404                           l3277 0360  
                         l3285 039E                           l3269 0308                           l3541 0C26  
                         l3533 0B96                           l3525 0B3A                           l3517 0AB8  
                         l3509 0A28                           l3461 07DE                           l3453 07D4  
                         l3445 07BA                           l3437 0790                           l3429 0762  
                         l3381 06DA                           l2399 18E6                           l2583 20F2  
                         l2591 211E                           l2559 1F5C                           l2495 2018  
                         l2487 1FDE                           l2479 1DBC                           l2719 1A74  
                         l2727 1AE0                           l2671 216C                           l2647 272C  
                         l2567 2868                           l2575 283E                           l3199 26DA  
                         l2663 267C                           l2655 2858                           l2831 139A  
                         l2823 1368                           l2815 1330                           l2807 12F4  
                         l2751 11A0                           l2743 1176                           l2735 1146  
                         l2911 0E08                           l2903 0DC4                           l3367 06C8  
                         l3359 0658                           l3287 03B4                           l3279 0376  
                         l3551 0CB8                           l3543 0C4C                           l3535 0BBC  
                         l3527 0B52                           l3519 0AC8                           l3471 083C  
                         l3463 07E0                           l3455 07D8                           l3447 07C2  
                         l3439 079A                           l3391 06F8                           l3383 06E6  
                         l2593 2136                           l2585 20FC                           l2497 2022  
                         l2489 1FEE                           l2729 1AF0                           l2681 21BC  
                         l2673 2180                           l2649 272E                           l2569 286C  
                         l2577 2842                           l2665 26A2                           l2657 2668  
                         l2841 140C                           l2833 13A8                           l2825 1376  
                         l2817 1342                           l2809 1300                           l2761 11CC  
                         l2753 11A6                           l2745 1186                           l2737 1154  
                         l2921 0E58                           l2913 0E14                           l2905 0DE4  
                         l3289 03CA                           l3297 040A                           l3545 0C6E  
                         l3537 0BDE                           l3529 0B5C                           l3553 0CBA  
                         l3481 08B0                           l3473 084E                           l3465 07E2  
                         l3457 07DA                           l3449 07CA                           l3393 0700  
                         l3385 06E6                           l3377 06D2                           l2595 214E  
                         l2587 2106                           l2579 20A0                           l2499 202C  
                         l2691 220E                           l2683 21C6                           l2675 2190  
                         l2667 26A4                           l2659 266C                           l2851 1478  
                         l2843 141A                           l2835 13D6                           l2819 1358  
                         l2827 1388                           l2771 1206                           l2763 11DC  
                         l2755 11AC                           l2747 1188                           l2739 1156  
                         l2931 0E9A                           l2923 0E64                           l2915 0E1E  
                         l2907 0DF4                           l3299 0420                           l3555 0CCA  
                         l3547 0C94                           l3539 0C04                           l3491 0932  
                         l3483 08D2                           l3475 087E                           l3467 07F4  
                         l3459 07DC                           l3395 0708                           l3387 06EA  
                         l3379 06D6                           l2597 215E                           l2589 2112  
                         l2693 221C                           l2685 21D2                           l2677 21A4  
                         l2861 14C6                           l2853 1492                           l2845 1444  
                         l2829 1396                           l2773 121C                           l2765 11EC  
                         l2757 11BA                           l2749 1190                           l2941 0EFC  
                         l2933 0EA6                           l2925 0E70                           l2917 0E34  
                         l3549 0CA8                           l3493 0938                           l3485 08F8  
                         l3477 0896                           l3469 0824                           l3397 0710  
                         l3389 06EE                           l2599 22F4                           l2695 2828  
                         l2679 21B2                           l2687 21DE                           l2863 14C8  
                         l2855 14AE                           l2839 1400                           l2847 1448  
                         l2791 1270                           l2775 122C                           l2783 124C  
                         l2767 11EE                           l2759 11BC                           l2951 0F92  
                         l2943 0F08                           l2935 0EB6                           l2927 0E7E  
                         l2919 0E40                           l2871 0D10                           l3559 0CE0  
                         l3495 0950                           l3487 0910                           l3479 0898  
                         l3399 0718                           l2697 2838                           l2689 21F6  
                         l2857 14B2                           l2849 1462                           l2793 128A  
                         l2785 125C                           l2777 1234                           l2769 11F6  
                         l2961 0FE8                           l2953 0FB0                           l2945 0F24  
                         l2937 0ED0                           l2929 0E8A                           l2881 0D4C  
                         l2873 0D1C                           l3497 0968                           l3489 0926  
                         l2699 19CE                           l2859 14C0                           l2795 129A  
                         l2787 125C                           l2779 1238                           l2971 1052  
                         l2963 0FEC                           l2955 0FBA                           l2947 0F4E  
                         l2939 0EE0                           l2891 0D7E                           l2883 0D5C  
                         l2875 0D2A                           l3499 0980                           l2797 12AA  
                         l2981 10B4                           l2973 105E                           l2965 0FFA  
                         l2957 0FC8                           l2949 0F84                           l2893 0D8C  
                         l2885 0D62                           l2877 0D2C                           l2799 12BA  
                         l2991 111C                           l2983 10C8                           l2975 106C  
                         l2967 1028                           l2959 0FDA                           l2895 0D8E  
                         l2887 0D72                           l2879 0D3C                           l2993 111E  
                         l2985 10E2                           l2977 1096                           l2897 0D9E  
                         l2889 0D78                           l2987 10FE                           l2995 1124  
                         l2979 109A                           l2899 0DAE                           l2997 1128  
                         l2989 110E                           u2000 19F8                           u2001 19F4  
                         u2010 1A5A                           u2011 1A56                           u2020 1A90  
                         u2100 11CC                           u2021 1A8C                           u2101 11C8  
                         u2110 11DC                           u2031 1A9A                           u2111 11D8  
                         u2200 1396                           u2120 121C                           u3000 0504  
                         u2041 1AAC                           u2201 1392                           u2121 1218  
                         u3001 0500                           u2050 1AEE                           u2210 13A8  
                         u2130 125C                           u3010 0520                           u2051 1AEA  
                         u2211 13A4                           u2131 1258                           u3011 051C  
                         u2220 13D6                           u2140 12D2                           u2060 1154  
                         u2300 0D3C                           u3100 0616                           u3020 0536  
                         u2221 13D2                           u2141 12CE                           u2061 1150  
                         u2301 0D38                           u3101 0612                           u3021 0532  
                         u2230 13EC                           u2150 12F4                           u2070 1166  
                         u2310 0D4C                           u3110 062C                           u3030 054C  
                         u2231 13E8                           u2151 12F0                           u2071 1162  
                         u2311 0D48                           u3111 0628                           u3031 0548  
                         u2240 1400                           u2160 131E                           u2080 1176  
                         u2400 0FFA                           u2320 0D8C                           u3120 0642  
                         u3040 056E                           u3200 084C                           u2241 13FC  
                         u2161 131A                           u2081 1172                           u2401 0FF6  
                         u2321 0D88                           u3121 063E                           u3041 056A  
                         u3201 0848                           u2250 141A                           u2170 1342  
                         u2090 11BA                           u2410 1028                           u2330 0D9E  
                         u3130 0658                           u3050 058A                           u3210 0910  
                         u2251 1416                           u2171 133E                           u2091 11B6  
                         u2411 1024                           u2331 0D9A                           u3131 0654  
                         u3051 0586                           u3211 090C                           u1700 187E  
                         u2260 1462                           u2180 1358                           u2420 103E  
                         u2340 0DAE                           u2500 1B84                           u3140 066E  
                         u3060 05A0                           u3220 0926                           u1701 187A  
                         u2261 145E                           u2181 1354                           u2421 103A  
                         u2341 0DAA                           u2501 1B80                           u3141 066A  
                         u3061 059C                           u3301 0CFC                           u3221 0922  
                         u1710 1948                           u2270 1492                           u2190 1376  
                         u2430 1052                           u2350 0DE4                           u2510 1B98  
                         u3150 0684                           u3070 05B6                           u3230 0AF2  
                         u1711 1944                           u2271 148E                           u2191 1372  
                         u2431 104E                           u2351 0DE0                           u2511 1B94  
                         u3151 0680                           u3071 05B2                           u3231 0AEE  
                         u1720 250C                           u1800 205C                           u2280 14C0  
                         u2440 106C                           u2360 0DF4                           u2520 1BC0  
                         u2600 17E8                           u3160 06A6                           u3080 05D8  
                         u1721 2508                           u1801 2058                           u2281 14BC  
                         u2441 1068                           u2361 0DF0                           u2521 1BBC  
                         u2601 17E4                           u3161 06A2                           u3081 05D4  
                         u3241 0AFC                           u1730 2524                           u1810 2074  
                         u2450 10B4                           u2370 0F6E                           u2290 0D2A  
                         u2530 1BE0                           u2610 17F8                           u3170 06C8  
                         u3090 05FA                           _T2PR 000FBC                           u1731 2520  
                         u1811 2070                           u2451 10B0                           u2291 0D26  
                         u2531 1BDC                           u2611 17F4                           u3171 06C4  
                         u3091 05F6                           u3251 0B0E                           u1820 1E8C  
                         u1900 2382                           u2700 160C                           u1740 2754  
                         u2460 10E2                           u2380 0FC8                           u2540 1BF0  
                         u2620 1806                           u3260 0CA8                           u3180 0782  
                         u1821 1E88                           u1901 237E                           u2701 1608  
                         u1741 2750                           u2461 10DE                           u2381 0FC4  
                         u2541 1BEC                           u2621 1802                           u3261 0CA4  
                         u3181 077E                           u1670 245A                           u1830 1EA4  
                         u1910 2246                           u2710 163A                           u1750 276A  
                         u2470 111C                           u2390 0FE8                           u2630 1840  
                         u2550 16C0                           u3270 0CCA                           u3190 07F2  
                         u1671 2456                           u1831 1EA0                           u1911 2242  
                         u3407 2214                           u2711 1636                           u1751 2766  
                         u2471 1118                           u2391 0FE4                           u2375 0F64  
                         u2631 183C                           u2551 16BC                           u3271 0CC6  
                         u3191 07EE                           u1680 2478                           u1840 1F74  
                         u1760 1CB8                           u1920 226C                           u2720 1668  
                         u2480 1B22                           u2640 184E                           u2560 16CE  
                         u2800 0302                           u3280 0CDC                           u1681 2474  
                         u1841 1F70                           u1761 1CB4                           u1921 2268  
                         u3417 1AFA                           u2721 1664                           u2481 1B1E  
                         u2641 184A                           u2561 16CA                           u2801 02FE  
                         u3281 0CD8                           u3337 082E                           u1690 2494  
                         u1850 1F8C                           u1770 1CD2                           u1930 2292  
                         u2650 14E8                           u2490 1B56                           u2570 172A  
                         u2810 031E                           u1691 2490                           u1851 1F88  
                         u3507 2010                           u1771 1CCE                           u1931 228E  
                         u3427 231E                           u2731 168E                           u2651 14E4  
                         u2571 1726                           u2811 031A                           u3291 0CEA  
                         u3347 0888                           u1860 2136                           u1780 1DA4  
                         u1940 22B8                           u2660 1518                           u2580 1780  
                         u2900 0404                           u2820 0334                           u1861 2132  
                         u3517 207E                           u1781 1DA0                           u1941 22B4  
                         u3437 238C                           u2741 16A0                           u2661 1514  
                         u2581 177C                           u2901 0400                           u2821 0330  
                         u3357 095A                           u2750 27E2                           u1870 214E  
                         u1790 1DBC                           u1950 22DE                           u2670 1546  
                         u2590 17CA                           u2910 0420                           u2830 034A  
                         u2751 27DE                           u1871 214A                           u3527 1F28  
                         u1791 1DB8                           u3447 1D56                           u1951 22DA  
                         u2671 1542                           u2495 1B4C                           u2591 17C6  
                         u2911 041C                           u2831 0346                           u3367 098A  
                         u1880 215E                           u2680 1574                           u1960 2690  
                         u2920 0436                           u2840 0360                           u2760 0290  
                         u1881 215A                           u3537 1F96                           u3457 1DC6  
                         u2681 1570                           u1961 2688                           u2921 0432  
                         u2841 035C                           u2761 028C                           u3377 0B66  
                         u1890 236A                           u2690 15C0                           u2930 044C  
                         u2850 0376                           u2770 02A6                           u3547 24D2  
                         u3467 1E40                           u1891 2366                           u2691 15BC  
                         u3387 26BC                           u2931 0448                           u2851 0372  
                         u2771 02A2                           u1980 21F6                           u2940 046E  
                         u2860 0398                           u2780 02BC                           u3557 20EA  
                         u3477 1EAE                           u1981 21F2                           u3397 21AA  
                         u2941 046A                           u2861 0394                           u2781 02B8  
                         u1990 220E                           u2950 0484                           u2870 03B4  
                         u2790 02E0                           u3487 1C68                           u1991 220A  
                         u2951 0480                           u2871 03B0                           u2791 02DC  
                         u2960 04A0                           u2880 03CA                           u3497 1CDC  
                         u2961 049C                           u2881 03C6                           u1978 2692  
                         u2970 04B6                           u2890 03E0                           u2971 04B2  
                         u2891 03DC                           u2980 04CC                           u2981 04C8  
                         u2990 04E2                           u2991 04DE                    main@reading 009E  
                         _main 06D2                           _path 0100                           fsr2h 000FDA  
                         indf2 000FDF                           fsr2l 000FD9                           _step 00A6  
                         btemp 0057                           _stop 24B4                           prodh 000FF4  
                         prodl 000FF3                           start 003A               __end_of_ADC_init 2826  
              ___fldiv@new_exp 0020         __end_of_color_read_Red 2576                __end_of_HighISR 003A  
                 ___param_bank 000000                    _turnLeft135 1FBA                    _turnRight90 1D00  
                ___fltol@sign1 0022                          ?_main 0001                          _ADPCH 000F5F  
              __end_of___fldiv 14D4                __end_of___flmul 113A                __end_of___fltol 1C12  
                        ?_stop 0019                __end_of___lwdiv 24B4                          i2l359 0036  
                        _TMR0H 000FD4                          _TMR0L 000FD3     __end_of_I2C_2_Master_Start 2872  
   __end_of_I2C_2_Master_Write 2848                          main@a 0079                          plusw0 000FEB  
                        plusw2 000FDB                __end_of_turn180 1FBA                          ttemp5 0058  
                        ttemp6 005B                          ttemp7 005F                          status 000FD8  
                        wtemp8 0058        __end_of_color_read_Blue 2666          _I2C_2_Master_RepStart 2854  
              ?_color_read_Red 0005           __end_of_carryoutstep 16AE                __initialization 26E8  
                 __end_of_main 0D10                   __end_of_stop 2526                         ??_main 004C  
                       ??_stop 001D                  __activetblptr 000000                   _turnRight135 1DEA  
                 ?_setMotorPWM 0013                         _ADRESH 000F64                         _CCPR1H 000FAA  
                       _CCPR2H 000FA6                         _CCPR3H 000F25                         _CCPR4H 000F21  
                       _RE2PPS 000E74                         _RD5PPS 000E6F                         _RC7PPS 000E69  
                       _RE4PPS 000E76                         _RD6PPS 000E70                         i2l3561 000A  
                       i2l3563 001A                         i2l3571 0034                         i2l3565 002A  
                       i2l3567 002E                         i2l3569 0032                         _RG6PPS 000E88  
                    ??_HighISR 0001       __end_of_color_click_init 26E8               __end_of___xxtofl 1862  
                 ??_ADC_getval 0003                  ??_Timer0_init 0001                   _CCPTMRS0bits 000FAD  
        returnstep@instruction 0036                         ___wmul 276C                      ??___fldiv 0017  
                    ??___flmul 0009                      ??___fltol 001E                      ??___lwdiv 0010  
                       clear_0 26EE                         clear_1 26FA                         clear_2 270A  
                       isa$std 000001                         _square 22F4               __end_of_savepath 283C  
             __end_of_savetime 27B2                      ?_ADC_init 0001                   _decide_color 003E  
                    ??_turn180 0022                         stop@mL 0019                         stop@mR 001B  
            ??_initDCmotorsPWM 0003             __end_of_ADC_getval 27F2                   ___xxtofl@arg 000B  
                 ___xxtofl@exp 000A                   ___xxtofl@val 0001                     __accesstop 0060  
      __end_of__initialization 2710       __end_of_color_read_Clear 2616       __end_of_color_read_Green 25C6  
       ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001                     ___fltol@f1 001A  
             ?_color_read_Blue 0005                _Interrupts_init 2848                 __pcstackCOMRAM 0001  
          __end_of_Timer0_init 280C               smallmovement@dir 0022                     ??_ADC_init 0001  
                   __pbssBANK0 00A6                     __pbssBANK1 0100                     __pbssBANK2 0200  
            _color_writetoaddr 27B2                   _T2CLKCONbits 000FBF                   ?_turnLeft135 001E  
           ?_color_writetoaddr 0003                        ?___wmul 0001                   ?_turnRight90 001E  
        __end_of_smallmovement 2232                        ?_square 001E            ??_color_writetoaddr 0004  
                    ?___xxtofl 0001                   _carryoutstep 14D4                        _SSP2ADD 000ED6  
                      _SSP2BUF 000ED5        __end_of_Interrupts_init 2854         color_writetoaddr@value 0003  
             ??_color_read_Red 0007                        _HighISR 0008      __end_of_color_writetoaddr 27D2  
                    _ADREFbits 000F58             _I2C_2_Master_Start 2868             _I2C_2_Master_Write 283C  
                      __Hparam 0000                        __Lparam 0000                      ?_savepath 0001  
            color_read_Red@tmp 000A                      ?_savetime 0001                    _Timer0_init 27F2  
                      ___fldiv 113A                        ___flmul 0D10                        ___fltol 1B0C  
               decide_color@br 003E                 decide_color@gr 003A            ?_I2C_2_Master_Start 0001  
               decide_color@mx 0028                 decide_color@rr 003C                        ___lwdiv 2440  
          ?_I2C_2_Master_Write 0001                     _off_period 004E                   turnLeft90@mL 001E  
                 turnLeft90@mR 0020                        __pcinit 26E8                        __ramtop 0E00  
                      __ptext0 06D2                        __ptext1 2792                        __ptext2 23B0  
                      __ptext3 003E                        __ptext4 16AE                        __ptext5 1B0C  
                      __ptext6 0D10                        __ptext7 113A                        __ptext8 2526  
                      __ptext9 2576                      _T2CONbits 000FBD                     ??___xxtofl 0005  
                    _T2HLTbits 000FBE                        _turn180 1ED2                        main@max 008E  
         ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002           end_of_initialization 2710  
             ADC_getval@tmpval 0003              ?_color_click_init 0001             ??_color_click_init 0005  
                   ??_savepath 0001                     ??_savetime 0003             savetime@timercount 0001  
                      postdec2 000FDD                        postinc0 000FEE                        postinc2 000FDE  
             returnhome@motorL 0037               returnhome@motorR 0040                _initDCmotorsPWM 23B0  
                    _PORTFbits 000F8E                     _returnhome 19CE                     _timercount 0052  
           setMotorPWM@negDuty 0018                     _returnstep 2232                 carryoutstep@mx 0074  
                ___xxtofl@sign 0009                      _TRISAbits 000F81             setMotorPWM@posDuty 0017  
                    _TRISCbits 000F83                      _TRISDbits 000F84                      _TRISEbits 000F85  
                    _TRISFbits 000F86                      _TRISGbits 000F87                      _TRISHbits 000F88  
                  ___fldiv@grs 0022                    ___fldiv@rem 001B               fullSpeedAhead@mL 0019  
             fullSpeedAhead@mR 001B       color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002  
             ?_Interrupts_init 0001                    ___flmul@grs 000E                    _CCP1CONbits 000FAB  
            ?_color_read_Clear 0005                    _CCP2CONbits 000FA7              ?_color_read_Green 0005  
                  _CCP3CONbits 000F26                    _CCP4CONbits 000F22                     main@motorL 007C  
                   main@motorR 0085             ??_color_read_Clear 0007             ??_color_read_Green 0007  
                   _turnLeft90 1C12                 _fullSpeedAhead 20A0                 __end_of___wmul 2792  
               __end_of_square 23B0            color_read_Clear@tmp 000A            start_initialization 26E8  
          color_read_Green@tmp 000A        __end_of_initDCmotorsPWM 2440         __end_of_fullSpeedAhead 216C  
                     ??___wmul 0005                    ?_returnhome 0037                       ??_square 0023  
                  ?_returnstep 0024                      ___fldiv@a 0013                      ___fldiv@b 000F  
                    ___flmul@a 0005                      ___flmul@b 0001                    __pbssCOMRAM 004E  
                __pcstackBANK0 0060                smallmovement@mL 001E                smallmovement@mR 0020  
                     ?_HighISR 0001                      _main$2859 007A               ___lwdiv@dividend 000C  
                 ?_Timer0_init 0001                    ?_turnLeft90 001E                ?_fullSpeedAhead 0019  
                    __pintcode 0008            savepath@instruction 0001                       ?___fldiv 000F  
                     ?___flmul 0001                       ?___fltol 001A                       ?___lwdiv 000C  
         I2C_2_Master_Read@ack 0003           I2C_2_Master_Read@tmp 0004                  ?_turnRight135 001E  
            _I2C_2_Master_Idle 2744              _I2C_2_Master_Init 271A              _I2C_2_Master_Read 2666  
             returnstep@motorL 0024               returnstep@motorR 002D              _I2C_2_Master_Stop 285E  
                     _ADC_init 280C             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001                  ??_setMotorPWM 0015                       ?_turn180 001E  
           ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 0010       initDCmotorsPWM@PWMperiod 0001  
          ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002  
               ___wmul@product 0005                       _LATAbits 000F79            ??_I2C_2_Master_Stop 0002  
                     _LATCbits 000F7B                       _LATDbits 000F7C                       _LATEbits 000F7D  
                     _LATFbits 000F7E                      _on_period 0050                       _LATGbits 000F7F  
                     _LATHbits 000F80                       _PIE0bits 000E29                       i2u331_40 001A  
                     i2u331_41 0016                       i2u332_40 002A                       i2u332_41 0026  
                     _PIR0bits 000E33               ?_initDCmotorsPWM 0001                       _SSP2CON2 000EDA  
                    _timearray 0200                       _SSP2STAT 000ED8                     _ADCON0bits 000F60  
    __end_of_I2C_2_Master_Idle 276C      __end_of_I2C_2_Master_Init 2744      __end_of_I2C_2_Master_Read 26A8  
            ___wmul@multiplier 0001                 ??_turnRight135 0022      __end_of_I2C_2_Master_Stop 2868  
                 setMotorPWM@m 0013    I2C_2_Master_Write@data_byte 0002                   _pathposition 0055  
            ??_color_read_Blue 0007                  ?_decide_color 0028  __end_of_I2C_2_Master_RepStart 285E  
           color_read_Blue@tmp 000A            __end_of_setMotorPWM 19CE                       __Hrparam 0000  
                   _ADC_getval 27D2                       __Lrparam 0000                 turnRight135@mL 001E  
               turnRight135@mR 0020                decide_color@brf 0032                decide_color@grf 0036  
              decide_color@rrf 002E                  turnLeft135@mL 001E                  turnLeft135@mR 0020  
                _smallmovement 216C                     _ANSELDbits 000EA7                     _ANSELEbits 000EAF  
                   _ANSELFbits 000EB4                       ___xxtofl 16AE                 ??_decide_color 002A  
                   _T0CON0bits 000FD5                     _T0CON1bits 000FD6                ___lwdiv@divisor 000E  
              ___lwdiv@counter 0012                       __ptext10 25C6                       __ptext11 2616  
                     __ptext20 271A                       __ptext12 2854                       __ptext21 14D4  
                     __ptext13 2666                       __ptext30 1FBA                       __ptext22 216C  
                     __ptext14 26A8                       __ptext31 1ED2                       __ptext23 2826  
                     __ptext15 27B2                       __ptext40 27D2                       __ptext32 24B4  
                     __ptext24 19CE                       __ptext16 283C                       __ptext33 20A0  
                     __ptext25 22F4                       __ptext17 285E                       __ptext34 1862  
                     __ptext26 2232                       __ptext18 2868                       __ptext35 276C  
                     __ptext27 1D00                       __ptext19 2744                       __ptext36 2440  
                     __ptext28 1DEA                       __ptext37 27F2                       __ptext29 1C12  
                     __ptext38 2848                       __ptext39 280C                   _SSP2CON1bits 000ED9  
                 _SSP2CON2bits 000EDA                       _savepath 2826                  ??_turnLeft135 0022  
                     _savetime 2792                       isa$xinst 000000             carryoutstep@motorL 0060  
           carryoutstep@motorR 0069                       int$flags 0057                  ??_turnRight90 0022  
               ?_smallmovement 001E                   ??_returnhome 0049                   ??_returnstep 0036  
                    turn180@mL 001E                      turn180@mR 0020                     _INTCONbits 000FF2  
                ?_carryoutstep 0060                    _setMotorPWM 1862                      square@dir 0022  
                     intlevel2 0000                  turnRight90@mL 001E                  turnRight90@mR 0020  
             ??_fullSpeedAhead 001E           __end_of_turnRight135 1ED2                _interruptenable 0054  
           __end_of_returnhome 1B0C             __end_of_returnstep 22F4                    ?_ADC_getval 0001  
                 ??_turnLeft90 0022               _color_click_init 26A8            __end_of_turnLeft135 20A0  
                     square@mL 001E                       square@mR 0020                     _SSP2DATPPS 000E1D  
                 _timeposition 0056                     _SSP2CLKPPS 000E1C            __end_of_turnRight90 1DEA  
               ??_carryoutstep 004C               carryoutstep@read 0072               carryoutstep@step 0078  
           __end_of_turnLeft90 1D00                carryoutstep@amb 0076           __end_of_decide_color 06D2  
